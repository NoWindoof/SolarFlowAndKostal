[
    {
        "id": "b072f5fcdefc7891",
        "type": "tab",
        "label": "Daten holen",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "3e64b09dc7e19a92",
        "type": "tab",
        "label": "Steuerung",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "b463bd21812ac6b5",
        "type": "tab",
        "label": "Daten speichern",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "bcc357ac7ecec1c1",
        "type": "tab",
        "label": "Grafana",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "527eabae6d22e77a",
        "type": "tab",
        "label": "rtl_433",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "a8c42bb58872b9c4",
        "type": "tab",
        "label": "Wetter",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "3d0c8966401fefce",
        "type": "tab",
        "label": "Timer",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "d004b552dbe23508",
        "type": "tab",
        "label": "Kostal",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "0a251b7980b18761",
        "type": "tab",
        "label": "System",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "0535f8b4bf0b7245",
        "type": "tab",
        "label": "Testarea",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "7a652c4767b1ddf3",
        "type": "tab",
        "label": "PowerPacks",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "63c29a4a30318530",
        "type": "junction",
        "z": "527eabae6d22e77a",
        "x": 920,
        "y": 600,
        "wires": [
            [
                "8d341e6b3a26de10"
            ]
        ]
    },
    {
        "id": "e091816dd98f94c2",
        "type": "junction",
        "z": "b463bd21812ac6b5",
        "x": 760,
        "y": 420,
        "wires": [
            [
                "53e4a78f3510b9b9"
            ]
        ]
    },
    {
        "id": "030e6de62dcc8372",
        "type": "junction",
        "z": "b463bd21812ac6b5",
        "x": 1160,
        "y": 420,
        "wires": [
            [
                "ccbcb88817027f9d"
            ]
        ]
    },
    {
        "id": "ccbcb88817027f9d",
        "type": "junction",
        "z": "b463bd21812ac6b5",
        "x": 1540,
        "y": 420,
        "wires": [
            [
                "07881f42ce64dfd6"
            ]
        ]
    },
    {
        "id": "14e29d746620b1a6",
        "type": "junction",
        "z": "3e64b09dc7e19a92",
        "x": 600,
        "y": 1320,
        "wires": [
            [
                "a79ccd3f3fad92f0"
            ]
        ]
    },
    {
        "id": "5a15a3026051c377",
        "type": "junction",
        "z": "527eabae6d22e77a",
        "x": 1000,
        "y": 640,
        "wires": [
            [
                "5e7145b2b359f758",
                "8d341e6b3a26de10"
            ]
        ]
    },
    {
        "id": "9c502dc8cffe8892",
        "type": "junction",
        "z": "527eabae6d22e77a",
        "x": 900,
        "y": 680,
        "wires": [
            [
                "5e7145b2b359f758",
                "625efa8d3e735c75"
            ]
        ]
    },
    {
        "id": "ec6839c52da5022e",
        "type": "junction",
        "z": "a8c42bb58872b9c4",
        "x": 1060,
        "y": 140,
        "wires": [
            [
                "360ebd61a619e388",
                "da79928bbb700436",
                "c6463117310268bb",
                "29fc8108c4914fc7"
            ]
        ]
    },
    {
        "id": "8434d6b6faf0239d",
        "type": "junction",
        "z": "3d0c8966401fefce",
        "x": 240,
        "y": 400,
        "wires": [
            [
                "f7d7024777ce2933",
                "7ef4ffe25590050a"
            ]
        ]
    },
    {
        "id": "7ef4ffe25590050a",
        "type": "junction",
        "z": "3d0c8966401fefce",
        "x": 280,
        "y": 420,
        "wires": [
            [
                "3d53337b9767e737"
            ]
        ]
    },
    {
        "id": "90fe77b7ace27f39",
        "type": "junction",
        "z": "b072f5fcdefc7891",
        "x": 1360,
        "y": 3180,
        "wires": [
            [
                "2520c0457b259428"
            ]
        ]
    },
    {
        "id": "92e65209f12b3b00",
        "type": "junction",
        "z": "b072f5fcdefc7891",
        "x": 1240,
        "y": 580,
        "wires": [
            [
                "b8406ed3bf0c1b27",
                "bb8a082b5b30d8e1",
                "b1d59dc5c22bc333",
                "6ba8537e2e1219e7",
                "112a1b12835bfbd2"
            ]
        ]
    },
    {
        "id": "7261c7f8f3a5eafc",
        "type": "junction",
        "z": "b072f5fcdefc7891",
        "x": 1260,
        "y": 480,
        "wires": [
            [
                "5403fe28eeccd8a2",
                "d4e07e6de5ce15b8"
            ]
        ]
    },
    {
        "id": "9f4f577accf8b932",
        "type": "junction",
        "z": "b072f5fcdefc7891",
        "x": 820,
        "y": 580,
        "wires": [
            [
                "92e65209f12b3b00"
            ]
        ]
    },
    {
        "id": "fdf695757db73524",
        "type": "junction",
        "z": "527eabae6d22e77a",
        "x": 280,
        "y": 520,
        "wires": [
            [
                "99ef1fe2f881fa7f"
            ]
        ]
    },
    {
        "id": "d23ecbe757e22be2",
        "type": "mqtt-broker",
        "name": "EnergieserverP4",
        "broker": "localhost",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "372c7ab5b580575d",
        "type": "mqtt-broker",
        "name": "SolarFlowDef",
        "broker": "mqtt.zen-iot.com",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "f1373a051410c00b",
        "type": "mqtt-broker",
        "name": "SolarFlowApp",
        "broker": "mqtteu.zen-iot.com",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "90668bd1e0bba58b",
        "type": "ui_tab",
        "name": "Solarsteuerung",
        "icon": "wi-wu-hazy",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "a598529570623019",
        "type": "ui_base",
        "theme": {
            "name": "theme-custom",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#2ec27e",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "reset": false
            },
            "themeState": {
                "base-color": {
                    "default": "#4B7930",
                    "value": "#2ec27e",
                    "edited": true
                },
                "page-titlebar-backgroundColor": {
                    "value": "#ffa348",
                    "edited": true
                },
                "page-backgroundColor": {
                    "value": "#ffffff",
                    "edited": true
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": true
                },
                "group-textColor": {
                    "value": "#000000",
                    "edited": true
                },
                "group-borderColor": {
                    "value": "#000000",
                    "edited": true
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": true
                },
                "widget-textColor": {
                    "value": "#000000",
                    "edited": true
                },
                "widget-backgroundColor": {
                    "value": "#ff7f0e",
                    "edited": true
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": true
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD.MM.YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "734b3edda0b2df2b",
        "type": "ui_group",
        "name": "Anzeige",
        "tab": "90668bd1e0bba58b",
        "order": 1,
        "disp": false,
        "width": 15,
        "collapse": false,
        "className": ""
    },
    {
        "id": "e0fd073ca3007348",
        "type": "influxdb",
        "hostname": "localhost",
        "port": "8086",
        "protocol": "http",
        "database": "",
        "name": "Energie",
        "usetls": false,
        "tls": "",
        "influxdbVersion": "1.x",
        "url": "http://localhost:8086",
        "rejectUnauthorized": true
    },
    {
        "id": "0e08b360d673d9d4",
        "type": "influxdb",
        "hostname": "localhost",
        "port": "8086",
        "protocol": "http",
        "database": "",
        "name": "Langzeitdatenbank",
        "usetls": false,
        "tls": "",
        "influxdbVersion": "1.x",
        "url": "http://localhost:8086",
        "rejectUnauthorized": true
    },
    {
        "id": "cb76b6e892fe5709",
        "type": "ui_group",
        "name": "Schalter",
        "tab": "90668bd1e0bba58b",
        "order": 2,
        "disp": false,
        "width": 7,
        "collapse": false,
        "className": ""
    },
    {
        "id": "ec947780658325ac",
        "type": "ui_group",
        "name": "Überlagern",
        "tab": "90668bd1e0bba58b",
        "order": 4,
        "disp": false,
        "width": "15",
        "collapse": false,
        "className": ""
    },
    {
        "id": "a6e0d30a2b5a8f2f",
        "type": "ui_group",
        "name": "LED",
        "tab": "90668bd1e0bba58b",
        "order": 3,
        "disp": false,
        "width": "1",
        "collapse": false,
        "className": ""
    },
    {
        "id": "bbc3532f.41ca7",
        "type": "ui_group",
        "name": "Solar",
        "tab": "1ff97cd4.681d5b",
        "order": 1,
        "disp": true,
        "width": "36",
        "collapse": false,
        "className": ""
    },
    {
        "id": "1ff97cd4.681d5b",
        "type": "ui_tab",
        "name": "Energiedaten Übersicht",
        "icon": "timeline",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "f9873af6c102601e",
        "type": "ui_group",
        "name": "Grafik",
        "tab": "90668bd1e0bba58b",
        "order": 6,
        "disp": false,
        "width": 15,
        "collapse": false,
        "className": ""
    },
    {
        "id": "b3285c9ad9c3f4bd",
        "type": "influxdb",
        "hostname": "localhost",
        "port": "8086",
        "protocol": "http",
        "database": "Wetterstation",
        "name": "Wetterstation",
        "usetls": false,
        "tls": "",
        "influxdbVersion": "1.x",
        "url": "http://localhost:8086",
        "rejectUnauthorized": true
    },
    {
        "id": "f79bfcdd1abf60d7",
        "type": "translator-config",
        "name": "",
        "commandText": "on:true\noff:false\nactive:true\ninactive:false\nopen:true\nclosed:false\nclose:false\n1:true\n0:false\ntrue:true\nfalse:false\nhome:true\nnot_home:false"
    },
    {
        "id": "70fb931.dfc146c",
        "type": "ui_group",
        "name": "WetterAnzeige",
        "tab": "4bb34f67.69a87",
        "order": 1,
        "disp": false,
        "width": "20",
        "collapse": false,
        "className": ""
    },
    {
        "id": "4bb34f67.69a87",
        "type": "ui_tab",
        "name": "Wetter",
        "icon": "fa-thermometer-half",
        "order": 3,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "d00466aa3e04cd95",
        "type": "ui_tab",
        "name": "Timerhandling",
        "icon": "fa-bell",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "aa256afa62f82b62",
        "type": "ui_group",
        "name": "Nix",
        "tab": "d00466aa3e04cd95",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "d182ad5fad0e8e1a",
        "type": "ui_group",
        "name": "Cron",
        "tab": "d00466aa3e04cd95",
        "order": 2,
        "disp": true,
        "width": "16",
        "collapse": false,
        "className": ""
    },
    {
        "id": "fc4d054c994b728a",
        "type": "ui_spacer",
        "z": "a8c42bb58872b9c4",
        "name": "spacer",
        "group": "70fb931.dfc146c",
        "order": 1,
        "width": 3,
        "height": 1
    },
    {
        "id": "6c9951724d4ef565",
        "type": "ui_spacer",
        "z": "a8c42bb58872b9c4",
        "name": "spacer",
        "group": "70fb931.dfc146c",
        "order": 5,
        "width": 4,
        "height": 1
    },
    {
        "id": "ae9a5370c2e66774",
        "type": "ui_spacer",
        "z": "a8c42bb58872b9c4",
        "name": "spacer",
        "group": "70fb931.dfc146c",
        "order": 6,
        "width": 3,
        "height": 1
    },
    {
        "id": "abb82653324971b5",
        "type": "ui_spacer",
        "z": "a8c42bb58872b9c4",
        "name": "spacer",
        "group": "70fb931.dfc146c",
        "order": 7,
        "width": 4,
        "height": 1
    },
    {
        "id": "c5dc38a3ba13e799",
        "type": "ui_spacer",
        "z": "a8c42bb58872b9c4",
        "name": "spacer",
        "group": "70fb931.dfc146c",
        "order": 8,
        "width": 5,
        "height": 1
    },
    {
        "id": "933fc85f5f970270",
        "type": "ui_spacer",
        "z": "a8c42bb58872b9c4",
        "name": "spacer",
        "group": "70fb931.dfc146c",
        "order": 11,
        "width": 4,
        "height": 1
    },
    {
        "id": "892d5bbb14d8aa19",
        "type": "ui_spacer",
        "z": "a8c42bb58872b9c4",
        "name": "spacer",
        "group": "70fb931.dfc146c",
        "order": 12,
        "width": 5,
        "height": 1
    },
    {
        "id": "55a2c94df9b928ca",
        "type": "ui_spacer",
        "z": "a8c42bb58872b9c4",
        "name": "spacer",
        "group": "70fb931.dfc146c",
        "order": 13,
        "width": 4,
        "height": 1
    },
    {
        "id": "965b9b1b3a720b68",
        "type": "fritzbox-config",
        "name": "meineFritz",
        "host": "",
        "port": "49000",
        "ssl": false,
        "user": ""
    },
    {
        "id": "c7e6236151eb06de",
        "type": "ui_spacer",
        "z": "3d0c8966401fefce",
        "name": "spacer",
        "group": "d182ad5fad0e8e1a",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "43941a1e66c89c68",
        "type": "ui_spacer",
        "z": "3d0c8966401fefce",
        "name": "spacer",
        "group": "d182ad5fad0e8e1a",
        "order": 8,
        "width": 3,
        "height": 1
    },
    {
        "id": "7587e5cfba083e6d",
        "type": "ui_spacer",
        "z": "3d0c8966401fefce",
        "name": "spacer",
        "group": "d182ad5fad0e8e1a",
        "order": 10,
        "width": 1,
        "height": 1
    },
    {
        "id": "cc218e64d86fcd2f",
        "type": "ui_spacer",
        "z": "3d0c8966401fefce",
        "name": "spacer",
        "group": "d182ad5fad0e8e1a",
        "order": 12,
        "width": 3,
        "height": 1
    },
    {
        "id": "fb12e906db599b7f",
        "type": "mqtt-broker",
        "name": "Lokaler Broker",
        "broker": "",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "a82214386cf5651a",
        "type": "telegram bot",
        "botname": "",
        "usernames": "",
        "chatids": "",
        "baseapiurl": "",
        "testenvironment": false,
        "updatemode": "polling",
        "addressfamily": "",
        "pollinterval": "300",
        "usesocks": false,
        "sockshost": "",
        "socksprotocol": "socks5",
        "socksport": "6667",
        "socksusername": "anonymous",
        "sockspassword": "",
        "bothost": "",
        "botpath": "",
        "localbotport": "8443",
        "publicbotport": "8443",
        "privatekey": "",
        "certificate": "",
        "useselfsignedcertificate": false,
        "sslterminated": false,
        "verboselogging": false
    },
    {
        "id": "fdae33e0bafe12a8",
        "type": "modbus-client",
        "name": "Kostal Wechselrichter",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "failureLogEnabled": true,
        "tcpHost": "",
        "tcpPort": "1502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": "71",
        "commandDelay": "1",
        "clientTimeout": "1000",
        "reconnectOnTimeout": true,
        "reconnectTimeout": "2000",
        "parallelUnitIdsAllowed": true,
        "showErrors": false,
        "showWarnings": true,
        "showLogs": true
    },
    {
        "id": "ba21dcccfa3fc452",
        "type": "ui_tab",
        "name": "Kostal",
        "icon": "fa-delicious",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "e5ec260ae3e0440b",
        "type": "ui_group",
        "name": "Anzeige",
        "tab": "ba21dcccfa3fc452",
        "order": 1,
        "disp": false,
        "width": 17,
        "collapse": false,
        "className": ""
    },
    {
        "id": "974caebe33d50b82",
        "type": "ui_group",
        "name": "Schalter",
        "tab": "ba21dcccfa3fc452",
        "order": 2,
        "disp": false,
        "width": "5",
        "collapse": false,
        "className": ""
    },
    {
        "id": "0b4bccd782f8e91a",
        "type": "ui_group",
        "name": "LED",
        "tab": "ba21dcccfa3fc452",
        "order": 3,
        "disp": false,
        "width": "1",
        "collapse": false,
        "className": ""
    },
    {
        "id": "cd1dcc072d49f690",
        "type": "ui_group",
        "name": "Grafik",
        "tab": "ba21dcccfa3fc452",
        "order": 4,
        "disp": false,
        "width": 17,
        "collapse": false,
        "className": ""
    },
    {
        "id": "4c392233441c7d6c",
        "type": "ui_tab",
        "name": "Systemstatus",
        "icon": "fa-cogs",
        "order": 6,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "889ad5b1fbfa7f43",
        "type": "ui_group",
        "name": "Anzeige",
        "tab": "4c392233441c7d6c",
        "order": 1,
        "disp": false,
        "width": 8,
        "collapse": false,
        "className": ""
    },
    {
        "id": "6cd0b3f6b2b35990",
        "type": "ui_group",
        "name": "Schalter",
        "tab": "4c392233441c7d6c",
        "order": 2,
        "disp": false,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "90b0a0152422db96",
        "type": "modbus-client",
        "name": "Shelly 3EM pro",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "failureLogEnabled": true,
        "tcpHost": "",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": "1",
        "commandDelay": "1",
        "clientTimeout": "2000",
        "reconnectOnTimeout": true,
        "reconnectTimeout": "3000",
        "parallelUnitIdsAllowed": true,
        "showErrors": false,
        "showWarnings": true,
        "showLogs": true
    },
    {
        "id": "2df5e39354a4a51a",
        "type": "email-transport",
        "name": "",
        "host": "",
        "port": "587",
        "secure": false,
        "authType": "login",
        "proxy": ""
    },
    {
        "id": "de3826dbfb130e71",
        "type": "ui_spacer",
        "z": "b463bd21812ac6b5",
        "name": "spacer",
        "group": "889ad5b1fbfa7f43",
        "order": 4,
        "width": 2,
        "height": 1
    },
    {
        "id": "3db49a8570e2c012",
        "type": "ui_spacer",
        "z": "b463bd21812ac6b5",
        "name": "spacer",
        "group": "889ad5b1fbfa7f43",
        "order": 6,
        "width": 3,
        "height": 1
    },
    {
        "id": "7e6079790efcd8bb",
        "type": "ui_spacer",
        "z": "b463bd21812ac6b5",
        "name": "spacer",
        "group": "889ad5b1fbfa7f43",
        "order": 7,
        "width": 2,
        "height": 1
    },
    {
        "id": "bd450c365612017f",
        "type": "ui_spacer",
        "z": "b463bd21812ac6b5",
        "name": "spacer",
        "group": "889ad5b1fbfa7f43",
        "order": 8,
        "width": 3,
        "height": 1
    },
    {
        "id": "f5a0504467da416e",
        "type": "ui_spacer",
        "z": "b463bd21812ac6b5",
        "name": "spacer",
        "group": "889ad5b1fbfa7f43",
        "order": 10,
        "width": 8,
        "height": 1
    },
    {
        "id": "ec92158e44f02390",
        "type": "ui_spacer",
        "z": "b463bd21812ac6b5",
        "name": "spacer",
        "group": "889ad5b1fbfa7f43",
        "order": 11,
        "width": 8,
        "height": 1
    },
    {
        "id": "217cd4690d1aeff3",
        "type": "ui_spacer",
        "z": "b463bd21812ac6b5",
        "name": "spacer",
        "group": "889ad5b1fbfa7f43",
        "order": 12,
        "width": 8,
        "height": 1
    },
    {
        "id": "861788a39204d22e",
        "type": "ui_spacer",
        "z": "b463bd21812ac6b5",
        "name": "spacer",
        "group": "889ad5b1fbfa7f43",
        "order": 13,
        "width": 8,
        "height": 1
    },
    {
        "id": "c8af0f7f1d82a885",
        "type": "ui_spacer",
        "z": "b463bd21812ac6b5",
        "name": "spacer",
        "group": "889ad5b1fbfa7f43",
        "order": 14,
        "width": 8,
        "height": 1
    },
    {
        "id": "50db4327805f50ef",
        "type": "ui_spacer",
        "z": "b463bd21812ac6b5",
        "name": "spacer",
        "group": "889ad5b1fbfa7f43",
        "order": 15,
        "width": 8,
        "height": 1
    },
    {
        "id": "9c1a582a5aa34563",
        "type": "ui_spacer",
        "z": "b463bd21812ac6b5",
        "name": "spacer",
        "group": "889ad5b1fbfa7f43",
        "order": 16,
        "width": 8,
        "height": 1
    },
    {
        "id": "f65803fdadfe7a0a",
        "type": "ui_tab",
        "name": "TestArea [Anzeige]",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "4dbbaa74d3caf496",
        "type": "ui_group",
        "name": "",
        "tab": "f65803fdadfe7a0a",
        "order": 1,
        "disp": false,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "a9b34ff4699cf3dd",
        "type": "ui_spacer",
        "z": "0535f8b4bf0b7245",
        "name": "spacer",
        "group": "4dbbaa74d3caf496",
        "order": 2,
        "width": 6,
        "height": 1
    },
    {
        "id": "3bd107bf7b63a932",
        "type": "ui_spacer",
        "z": "0535f8b4bf0b7245",
        "name": "spacer",
        "group": "4dbbaa74d3caf496",
        "order": 9,
        "width": 3,
        "height": 1
    },
    {
        "id": "043df44121658a41",
        "type": "ui_spacer",
        "z": "0535f8b4bf0b7245",
        "name": "spacer",
        "group": "4dbbaa74d3caf496",
        "order": 10,
        "width": 6,
        "height": 1
    },
    {
        "id": "3d3d0a867ff78066",
        "type": "ui_spacer",
        "z": "0535f8b4bf0b7245",
        "name": "spacer",
        "group": "4dbbaa74d3caf496",
        "order": 11,
        "width": 6,
        "height": 1
    },
    {
        "id": "b2793e2037894763",
        "type": "ui_spacer",
        "z": "0535f8b4bf0b7245",
        "name": "spacer",
        "group": "4dbbaa74d3caf496",
        "order": 12,
        "width": 6,
        "height": 1
    },
    {
        "id": "ce28529c541c5314",
        "type": "ui_spacer",
        "z": "0535f8b4bf0b7245",
        "name": "spacer",
        "group": "4dbbaa74d3caf496",
        "order": 15,
        "width": 1,
        "height": 1
    },
    {
        "id": "cbecb971736fa3fe",
        "type": "ui_spacer",
        "z": "0535f8b4bf0b7245",
        "name": "spacer",
        "group": "4dbbaa74d3caf496",
        "order": 19,
        "width": 1,
        "height": 1
    },
    {
        "id": "50ca70f940c4e091",
        "type": "ui_spacer",
        "z": "0535f8b4bf0b7245",
        "name": "spacer",
        "group": "4dbbaa74d3caf496",
        "order": 21,
        "width": 1,
        "height": 1
    },
    {
        "id": "2b387aa4cb7cd1db",
        "type": "ui_spacer",
        "z": "0535f8b4bf0b7245",
        "name": "spacer",
        "group": "4dbbaa74d3caf496",
        "order": 23,
        "width": 1,
        "height": 1
    },
    {
        "id": "48ddec1bc4ff4bf6",
        "type": "ui_spacer",
        "z": "0535f8b4bf0b7245",
        "name": "spacer",
        "group": "4dbbaa74d3caf496",
        "order": 24,
        "width": 1,
        "height": 1
    },
    {
        "id": "e3dce1fe61128759",
        "type": "ui_spacer",
        "z": "0535f8b4bf0b7245",
        "name": "spacer",
        "group": "4dbbaa74d3caf496",
        "order": 25,
        "width": 1,
        "height": 1
    },
    {
        "id": "b4ae71567d371b3c",
        "type": "ui_spacer",
        "z": "0535f8b4bf0b7245",
        "name": "spacer",
        "group": "4dbbaa74d3caf496",
        "order": 26,
        "width": 1,
        "height": 1
    },
    {
        "id": "a70e703c83156413",
        "type": "ui_spacer",
        "z": "0535f8b4bf0b7245",
        "name": "spacer",
        "group": "4dbbaa74d3caf496",
        "order": 27,
        "width": 1,
        "height": 1
    },
    {
        "id": "7147469c6d5fb6aa",
        "type": "ui_spacer",
        "z": "0535f8b4bf0b7245",
        "name": "spacer",
        "group": "4dbbaa74d3caf496",
        "order": 28,
        "width": 1,
        "height": 1
    },
    {
        "id": "a86b34c836326f81",
        "type": "ui_spacer",
        "z": "0535f8b4bf0b7245",
        "name": "spacer",
        "group": "4dbbaa74d3caf496",
        "order": 30,
        "width": 2,
        "height": 1
    },
    {
        "id": "6eb828add282a619",
        "type": "ui_spacer",
        "z": "0535f8b4bf0b7245",
        "name": "spacer",
        "group": "4dbbaa74d3caf496",
        "order": 31,
        "width": 2,
        "height": 1
    },
    {
        "id": "4593de8fd3876ea0",
        "type": "ui_spacer",
        "z": "0535f8b4bf0b7245",
        "name": "spacer",
        "group": "4dbbaa74d3caf496",
        "order": 32,
        "width": 2,
        "height": 1
    },
    {
        "id": "4f7a948f3ddafe33",
        "type": "ui_spacer",
        "z": "0535f8b4bf0b7245",
        "name": "spacer",
        "group": "4dbbaa74d3caf496",
        "order": 33,
        "width": 2,
        "height": 1
    },
    {
        "id": "e5baa2caf54be5b7",
        "type": "ui_spacer",
        "z": "3e64b09dc7e19a92",
        "name": "spacer",
        "group": "e5ec260ae3e0440b",
        "order": 4,
        "width": 1,
        "height": 1
    },
    {
        "id": "4a9dc96346575350",
        "type": "ui_spacer",
        "z": "3e64b09dc7e19a92",
        "name": "spacer",
        "group": "e5ec260ae3e0440b",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "2505c9a8838f3479",
        "type": "ui_spacer",
        "z": "3e64b09dc7e19a92",
        "name": "spacer",
        "group": "e5ec260ae3e0440b",
        "order": 7,
        "width": 1,
        "height": 1
    },
    {
        "id": "cb85bb395a3eb580",
        "type": "ui_spacer",
        "z": "3e64b09dc7e19a92",
        "name": "spacer",
        "group": "e5ec260ae3e0440b",
        "order": 8,
        "width": 1,
        "height": 1
    },
    {
        "id": "3b7d49030b191dd5",
        "type": "ui_spacer",
        "z": "3e64b09dc7e19a92",
        "name": "spacer",
        "group": "e5ec260ae3e0440b",
        "order": 10,
        "width": 1,
        "height": 1
    },
    {
        "id": "ae6b4e829481db0d",
        "type": "ui_spacer",
        "z": "3e64b09dc7e19a92",
        "name": "spacer",
        "group": "e5ec260ae3e0440b",
        "order": 12,
        "width": 1,
        "height": 1
    },
    {
        "id": "45aa01da8b793647",
        "type": "ui_spacer",
        "z": "3e64b09dc7e19a92",
        "name": "spacer",
        "group": "e5ec260ae3e0440b",
        "order": 13,
        "width": 1,
        "height": 1
    },
    {
        "id": "899ffde2aafcde6e",
        "type": "ui_spacer",
        "z": "3e64b09dc7e19a92",
        "name": "spacer",
        "group": "e5ec260ae3e0440b",
        "order": 14,
        "width": 1,
        "height": 1
    },
    {
        "id": "2bfa28580f96ca58",
        "type": "ui_spacer",
        "z": "3e64b09dc7e19a92",
        "name": "spacer",
        "group": "e5ec260ae3e0440b",
        "order": 16,
        "width": 1,
        "height": 1
    },
    {
        "id": "8adf9c5d407cdd8f",
        "type": "ui_spacer",
        "z": "3e64b09dc7e19a92",
        "name": "spacer",
        "group": "e5ec260ae3e0440b",
        "order": 18,
        "width": 1,
        "height": 1
    },
    {
        "id": "feffe0f70662039d",
        "type": "ui_spacer",
        "z": "3e64b09dc7e19a92",
        "name": "spacer",
        "group": "e5ec260ae3e0440b",
        "order": 19,
        "width": 2,
        "height": 1
    },
    {
        "id": "93a1946614b650c2",
        "type": "ui_spacer",
        "z": "3e64b09dc7e19a92",
        "name": "spacer",
        "group": "e5ec260ae3e0440b",
        "order": 21,
        "width": 1,
        "height": 1
    },
    {
        "id": "9498ac33189c1ec6",
        "type": "ui_spacer",
        "z": "3e64b09dc7e19a92",
        "name": "spacer",
        "group": "e5ec260ae3e0440b",
        "order": 22,
        "width": 1,
        "height": 1
    },
    {
        "id": "5a0481b242ba8cba",
        "type": "ui_spacer",
        "z": "3e64b09dc7e19a92",
        "name": "spacer",
        "group": "e5ec260ae3e0440b",
        "order": 23,
        "width": 1,
        "height": 1
    },
    {
        "id": "e9046235b26a4664",
        "type": "ui_spacer",
        "z": "3e64b09dc7e19a92",
        "name": "spacer",
        "group": "e5ec260ae3e0440b",
        "order": 24,
        "width": 2,
        "height": 1
    },
    {
        "id": "32d78ee8d1bcef85",
        "type": "ui_spacer",
        "z": "3e64b09dc7e19a92",
        "name": "spacer",
        "group": "e5ec260ae3e0440b",
        "order": 25,
        "width": 1,
        "height": 1
    },
    {
        "id": "5d8e2521d12fbb3e",
        "type": "ui_spacer",
        "z": "3e64b09dc7e19a92",
        "name": "spacer",
        "group": "e5ec260ae3e0440b",
        "order": 26,
        "width": 5,
        "height": 1
    },
    {
        "id": "ca91dcf8ccd92c87",
        "type": "ui_spacer",
        "z": "3e64b09dc7e19a92",
        "name": "spacer",
        "group": "e5ec260ae3e0440b",
        "order": 27,
        "width": 2,
        "height": 1
    },
    {
        "id": "9d8cb9d83a478c03",
        "type": "ui_spacer",
        "z": "3e64b09dc7e19a92",
        "name": "spacer",
        "group": "e5ec260ae3e0440b",
        "order": 28,
        "width": 1,
        "height": 1
    },
    {
        "id": "b2d6df8196e55094",
        "type": "ui_spacer",
        "z": "3e64b09dc7e19a92",
        "name": "spacer",
        "group": "e5ec260ae3e0440b",
        "order": 29,
        "width": 5,
        "height": 1
    },
    {
        "id": "d471df1aeb1391aa",
        "type": "ui_spacer",
        "z": "3e64b09dc7e19a92",
        "name": "spacer",
        "group": "974caebe33d50b82",
        "order": 8,
        "width": 5,
        "height": 1
    },
    {
        "id": "2b60490382dec18c",
        "type": "ui_spacer",
        "z": "3e64b09dc7e19a92",
        "name": "spacer",
        "group": "cd1dcc072d49f690",
        "order": 7,
        "width": 2,
        "height": 1
    },
    {
        "id": "474502a4ff405983",
        "type": "ui_spacer",
        "z": "b072f5fcdefc7891",
        "name": "spacer",
        "group": "734b3edda0b2df2b",
        "order": 9,
        "width": 2,
        "height": 1
    },
    {
        "id": "26a5006f587a23c8",
        "type": "ui_spacer",
        "z": "b072f5fcdefc7891",
        "name": "spacer",
        "group": "734b3edda0b2df2b",
        "order": 11,
        "width": 2,
        "height": 1
    },
    {
        "id": "70637eadb39facdc",
        "type": "ui_spacer",
        "z": "b072f5fcdefc7891",
        "name": "spacer",
        "group": "734b3edda0b2df2b",
        "order": 12,
        "width": 2,
        "height": 1
    },
    {
        "id": "b0d43c10ec46ec9b",
        "type": "ui_spacer",
        "z": "b072f5fcdefc7891",
        "name": "spacer",
        "group": "734b3edda0b2df2b",
        "order": 13,
        "width": 2,
        "height": 1
    },
    {
        "id": "64e6ba003e34af56",
        "type": "ui_spacer",
        "z": "b072f5fcdefc7891",
        "name": "spacer",
        "group": "cb76b6e892fe5709",
        "order": 23,
        "width": 5,
        "height": 1
    },
    {
        "id": "ac75b705dfbfdf17",
        "type": "ui_tab",
        "name": "PowerPack",
        "icon": "fa-battery-half",
        "order": 8,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "247b0f7bb5a5ccdd",
        "type": "ui_group",
        "name": "SN: AO4HLC9LDR0",
        "tab": "ac75b705dfbfdf17",
        "order": 1,
        "disp": true,
        "width": 8,
        "collapse": false,
        "className": ""
    },
    {
        "id": "b3ea2336462acd10",
        "type": "ui_group",
        "name": "SN: AO4HLDDLEG0",
        "tab": "ac75b705dfbfdf17",
        "order": 3,
        "disp": true,
        "width": 8,
        "collapse": false,
        "className": ""
    },
    {
        "id": "fe53591440c92622",
        "type": "ui_group",
        "name": "SN: AO4HLFXLGL0",
        "tab": "ac75b705dfbfdf17",
        "order": 2,
        "disp": true,
        "width": 8,
        "collapse": false,
        "className": ""
    },
    {
        "id": "aa434db678c76e2d",
        "type": "ui_spacer",
        "z": "7a652c4767b1ddf3",
        "name": "spacer",
        "group": "247b0f7bb5a5ccdd",
        "order": 2,
        "width": 1,
        "height": 1
    },
    {
        "id": "acfbb75b417f16a8",
        "type": "ui_spacer",
        "z": "7a652c4767b1ddf3",
        "name": "spacer",
        "group": "247b0f7bb5a5ccdd",
        "order": 5,
        "width": 1,
        "height": 1
    },
    {
        "id": "b982e4dd8103259b",
        "type": "ui_spacer",
        "z": "7a652c4767b1ddf3",
        "name": "spacer",
        "group": "247b0f7bb5a5ccdd",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "128e584342dc329a",
        "type": "ui_spacer",
        "z": "7a652c4767b1ddf3",
        "name": "spacer",
        "group": "247b0f7bb5a5ccdd",
        "order": 7,
        "width": 1,
        "height": 1
    },
    {
        "id": "3c4267a24f9b2551",
        "type": "ui_spacer",
        "z": "7a652c4767b1ddf3",
        "name": "spacer",
        "group": "247b0f7bb5a5ccdd",
        "order": 8,
        "width": 1,
        "height": 1
    },
    {
        "id": "7561a6e1aae0bb10",
        "type": "ui_spacer",
        "z": "7a652c4767b1ddf3",
        "name": "spacer",
        "group": "247b0f7bb5a5ccdd",
        "order": 9,
        "width": 1,
        "height": 1
    },
    {
        "id": "710345977c28af1a",
        "type": "ui_spacer",
        "z": "7a652c4767b1ddf3",
        "name": "spacer",
        "group": "247b0f7bb5a5ccdd",
        "order": 11,
        "width": 3,
        "height": 1
    },
    {
        "id": "e507b8de29c12f03",
        "type": "ui_spacer",
        "z": "7a652c4767b1ddf3",
        "name": "spacer",
        "group": "fe53591440c92622",
        "order": 2,
        "width": 1,
        "height": 1
    },
    {
        "id": "b2ec35a6ce6a8b67",
        "type": "ui_spacer",
        "z": "7a652c4767b1ddf3",
        "name": "spacer",
        "group": "fe53591440c92622",
        "order": 5,
        "width": 1,
        "height": 1
    },
    {
        "id": "3b6f418c6fecaba6",
        "type": "ui_spacer",
        "z": "7a652c4767b1ddf3",
        "name": "spacer",
        "group": "fe53591440c92622",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "7b769725d62cbb3f",
        "type": "ui_spacer",
        "z": "7a652c4767b1ddf3",
        "name": "spacer",
        "group": "fe53591440c92622",
        "order": 7,
        "width": 1,
        "height": 1
    },
    {
        "id": "4e91e7a8d4aa9149",
        "type": "ui_spacer",
        "z": "7a652c4767b1ddf3",
        "name": "spacer",
        "group": "fe53591440c92622",
        "order": 8,
        "width": 1,
        "height": 1
    },
    {
        "id": "623479badb26cd7a",
        "type": "ui_spacer",
        "z": "7a652c4767b1ddf3",
        "name": "spacer",
        "group": "fe53591440c92622",
        "order": 9,
        "width": 8,
        "height": 1
    },
    {
        "id": "e70c3e4007b54515",
        "type": "ui_spacer",
        "z": "7a652c4767b1ddf3",
        "name": "spacer",
        "group": "b3ea2336462acd10",
        "order": 2,
        "width": 1,
        "height": 1
    },
    {
        "id": "c850646cd1b1c9a4",
        "type": "ui_spacer",
        "z": "7a652c4767b1ddf3",
        "name": "spacer",
        "group": "b3ea2336462acd10",
        "order": 5,
        "width": 1,
        "height": 1
    },
    {
        "id": "28316d9927a3e96a",
        "type": "ui_spacer",
        "z": "7a652c4767b1ddf3",
        "name": "spacer",
        "group": "b3ea2336462acd10",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "c2dd90a9fa413eb6",
        "type": "ui_spacer",
        "z": "7a652c4767b1ddf3",
        "name": "spacer",
        "group": "b3ea2336462acd10",
        "order": 7,
        "width": 1,
        "height": 1
    },
    {
        "id": "813f07813d214230",
        "type": "ui_spacer",
        "z": "7a652c4767b1ddf3",
        "name": "spacer",
        "group": "b3ea2336462acd10",
        "order": 8,
        "width": 1,
        "height": 1
    },
    {
        "id": "7a78ce59d46efcb7",
        "type": "ui_spacer",
        "z": "7a652c4767b1ddf3",
        "name": "spacer",
        "group": "b3ea2336462acd10",
        "order": 9,
        "width": 8,
        "height": 1
    },
    {
        "id": "e55f1cb1d0b2676c",
        "type": "mqtt in",
        "z": "b072f5fcdefc7891",
        "d": true,
        "name": "Hauptverteiler aktuell",
        "topic": "",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "d23ecbe757e22be2",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 160,
        "y": 420,
        "wires": [
            [
                "2a66de353a9ae079",
                "941a575a21adc629"
            ]
        ]
    },
    {
        "id": "941a575a21adc629",
        "type": "change",
        "z": "b072f5fcdefc7891",
        "name": "Aktueller Verbrauch [Watt]",
        "rules": [
            {
                "t": "move",
                "p": "payload.total_act_power",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "von Shelly",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 440,
        "wires": [
            [
                "04bbab0a02bc15b5"
            ]
        ]
    },
    {
        "id": "2a66de353a9ae079",
        "type": "change",
        "z": "b072f5fcdefc7891",
        "name": "Aktuelle Stromstärke",
        "rules": [
            {
                "t": "move",
                "p": "payload.total_current",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 400,
        "wires": [
            [
                "ca8d4678f7153a25",
                "dd67c6fe4e9a8514"
            ]
        ]
    },
    {
        "id": "5b4a6a630e9eefd6",
        "type": "mqtt in",
        "z": "b072f5fcdefc7891",
        "d": true,
        "name": "Hauptverteiler total",
        "topic": "",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "d23ecbe757e22be2",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 170,
        "y": 120,
        "wires": [
            [
                "45a6af8d48b682d9",
                "b45e45a4cb65ce98"
            ]
        ]
    },
    {
        "id": "b45e45a4cb65ce98",
        "type": "change",
        "z": "b072f5fcdefc7891",
        "name": "Verbrauch total",
        "rules": [
            {
                "t": "move",
                "p": "payload.total_act",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 400,
        "y": 100,
        "wires": [
            [
                "82edc7642e7d3972"
            ]
        ]
    },
    {
        "id": "45a6af8d48b682d9",
        "type": "change",
        "z": "b072f5fcdefc7891",
        "name": "Returned total",
        "rules": [
            {
                "t": "move",
                "p": "payload.total_act_ret",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 400,
        "y": 140,
        "wires": [
            [
                "4e11af10e6b52fd8"
            ]
        ]
    },
    {
        "id": "2cb9ee9105097373",
        "type": "mqtt in",
        "z": "b072f5fcdefc7891",
        "name": "ShellyPlusPlug",
        "topic": "",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "d23ecbe757e22be2",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 120,
        "y": 880,
        "wires": [
            [
                "780f060eb9bf3a24",
                "9ee0c05d08819792",
                "6290d076757897e9"
            ]
        ]
    },
    {
        "id": "780f060eb9bf3a24",
        "type": "change",
        "z": "b072f5fcdefc7891",
        "name": "Watt von Solar ins Haus",
        "rules": [
            {
                "t": "move",
                "p": "payload.apower",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 780,
        "wires": [
            [
                "d67eba10b4f4afdd",
                "78b0c1dabcec0f69",
                "2c587d1fe48e5c7b",
                "37a8c18fa4e6fe30"
            ]
        ]
    },
    {
        "id": "9ee0c05d08819792",
        "type": "change",
        "z": "b072f5fcdefc7891",
        "name": "Volt von Solar ins Haus",
        "rules": [
            {
                "t": "move",
                "p": "payload.voltage",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 860,
        "wires": [
            [
                "aa66a7c4b506bc00",
                "a97f79a28dad24ed"
            ]
        ]
    },
    {
        "id": "6290d076757897e9",
        "type": "change",
        "z": "b072f5fcdefc7891",
        "name": "Celsius von Solar",
        "rules": [
            {
                "t": "move",
                "p": "payload.temperature.tC",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 920,
        "wires": [
            [
                "b67d2516085237e6"
            ]
        ]
    },
    {
        "id": "2347cf7b4e17c01e",
        "type": "mqtt in",
        "z": "b072f5fcdefc7891",
        "name": "Status SolarFlow über APP Server",
        "topic": "/73bkTV/B5V650U2/properties/report",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "d23ecbe757e22be2",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 200,
        "y": 1160,
        "wires": [
            [
                "668789504c7c6ffa",
                "d1a6090a4d632d43",
                "f37fc23305ea3f88",
                "43acdacf96ba7d71",
                "2ade25ee25071d6d",
                "c06681945b61f27a",
                "ea12a6c5ca2637a8",
                "52c5a3857526c053",
                "d470a146e4d4b425",
                "5db8f25b853aa442"
            ]
        ]
    },
    {
        "id": "668789504c7c6ffa",
        "type": "change",
        "z": "b072f5fcdefc7891",
        "name": "Leistung ins Haus [Watt]",
        "rules": [
            {
                "t": "move",
                "p": "payload.properties.outputHomePower",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 550,
        "y": 1100,
        "wires": [
            []
        ]
    },
    {
        "id": "d1a6090a4d632d43",
        "type": "change",
        "z": "b072f5fcdefc7891",
        "name": "Ladeleistungeistung in Akku [Watt]",
        "rules": [
            {
                "t": "move",
                "p": "payload.properties.packInputPower",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 1180,
        "wires": [
            [
                "7d9b055294a53a67"
            ]
        ]
    },
    {
        "id": "f37fc23305ea3f88",
        "type": "change",
        "z": "b072f5fcdefc7891",
        "name": "Solar Inputpower [Watt]",
        "rules": [
            {
                "t": "move",
                "p": "payload.properties.solarInputPower",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 550,
        "y": 1060,
        "wires": [
            [
                "0c247c739bfd8ba1"
            ]
        ]
    },
    {
        "id": "43acdacf96ba7d71",
        "type": "change",
        "z": "b072f5fcdefc7891",
        "name": "verbleibende Ladezeit bei aktueller Ladeleistung [s]",
        "rules": [
            {
                "t": "move",
                "p": "payload.properties.remainInputTime",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 630,
        "y": 1220,
        "wires": [
            []
        ]
    },
    {
        "id": "2ade25ee25071d6d",
        "type": "change",
        "z": "b072f5fcdefc7891",
        "name": "Entnahme Powerpack in [Watt]",
        "rules": [
            {
                "t": "move",
                "p": "payload.properties.outputPackPower",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 1140,
        "wires": [
            [
                "a327494e7a0cd101"
            ]
        ]
    },
    {
        "id": "c06681945b61f27a",
        "type": "change",
        "z": "b072f5fcdefc7891",
        "name": "Status Powerpack",
        "rules": [
            {
                "t": "move",
                "p": "payload.properties.packState",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 530,
        "y": 1300,
        "wires": [
            [
                "645ffe1747411d16"
            ]
        ]
    },
    {
        "id": "ea12a6c5ca2637a8",
        "type": "change",
        "z": "b072f5fcdefc7891",
        "name": "verbleibende Entladezeit bei aktueller Entnahmeleistung [s]",
        "rules": [
            {
                "t": "move",
                "p": "payload.properties.remainOutTime",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 660,
        "y": 1260,
        "wires": [
            []
        ]
    },
    {
        "id": "4ced2c7e385b57b9",
        "type": "switch",
        "z": "b072f5fcdefc7891",
        "name": "UNDEF ausfiltern",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 230,
        "y": 2280,
        "wires": [
            [
                "45e2685ef52465d1",
                "1b7a07fd0775ebc7"
            ]
        ]
    },
    {
        "id": "e4375341484aec86",
        "type": "switch",
        "z": "b072f5fcdefc7891",
        "name": "UNDEF ausfiltern",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 230,
        "y": 2160,
        "wires": [
            [
                "c868c2ecd08427e7",
                "a8b1bfec2df7691a"
            ]
        ]
    },
    {
        "id": "ab4cd286bddfabce",
        "type": "switch",
        "z": "b072f5fcdefc7891",
        "name": "UNDEF ausfiltern",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 230,
        "y": 2040,
        "wires": [
            [
                "55104a0473bd4295",
                "b0fcef9ccc5a5e87"
            ]
        ]
    },
    {
        "id": "55104a0473bd4295",
        "type": "change",
        "z": "b072f5fcdefc7891",
        "name": "setze g_SolarInputPower",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "g_SolarInputPower",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 470,
        "y": 2060,
        "wires": [
            []
        ]
    },
    {
        "id": "504be115ae609a1d",
        "type": "change",
        "z": "b072f5fcdefc7891",
        "name": "setze g_ElectricLevel",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "g_ElectricLevel",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 460,
        "y": 2440,
        "wires": [
            []
        ]
    },
    {
        "id": "52c5a3857526c053",
        "type": "change",
        "z": "b072f5fcdefc7891",
        "name": "Akku Füllstand [%]",
        "rules": [
            {
                "t": "move",
                "p": "payload.properties.electricLevel",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 530,
        "y": 1340,
        "wires": [
            [
                "4df62e2cc4bd7e51"
            ]
        ]
    },
    {
        "id": "fa617d675ac28fb2",
        "type": "switch",
        "z": "b072f5fcdefc7891",
        "name": "UNDEF ausfiltern",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 230,
        "y": 2440,
        "wires": [
            [
                "504be115ae609a1d",
                "e13ec986b8ae0e01",
                "aaf7f4bef2f3e245"
            ]
        ]
    },
    {
        "id": "b7d84e78a2372d3a",
        "type": "delay",
        "z": "b072f5fcdefc7891",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "10",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": true,
        "outputs": 1,
        "x": 1150,
        "y": 440,
        "wires": [
            [
                "5403fe28eeccd8a2"
            ]
        ]
    },
    {
        "id": "d67eba10b4f4afdd",
        "type": "change",
        "z": "b072f5fcdefc7891",
        "name": "setze g_LeistungInsHaus",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "g_LeistungInsHaus",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 690,
        "y": 780,
        "wires": [
            []
        ]
    },
    {
        "id": "5403fe28eeccd8a2",
        "type": "link out",
        "z": "b072f5fcdefc7891",
        "name": "link out 1",
        "mode": "link",
        "links": [
            "0884fdc81958c468"
        ],
        "x": 1335,
        "y": 460,
        "wires": []
    },
    {
        "id": "c868c2ecd08427e7",
        "type": "change",
        "z": "b072f5fcdefc7891",
        "name": "setze g_EntnahmePowerpack",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "g_EntnahmePowerpack",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 490,
        "y": 2160,
        "wires": [
            []
        ]
    },
    {
        "id": "45e2685ef52465d1",
        "type": "change",
        "z": "b072f5fcdefc7891",
        "name": "setze g_LadeleistungPowerpack",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "g_LadeleistungPowerpack",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 490,
        "y": 2280,
        "wires": [
            []
        ]
    },
    {
        "id": "78b0c1dabcec0f69",
        "type": "ui_gauge",
        "z": "b072f5fcdefc7891",
        "name": "",
        "group": "734b3edda0b2df2b",
        "order": 2,
        "width": 5,
        "height": 3,
        "gtype": "gage",
        "title": "Leistung ins Haus",
        "label": "Watt",
        "format": "{{value}}",
        "min": 0,
        "max": "850",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "200",
        "seg2": "400",
        "diff": false,
        "className": "",
        "x": 670,
        "y": 820,
        "wires": []
    },
    {
        "id": "6ba8537e2e1219e7",
        "type": "ui_gauge",
        "z": "b072f5fcdefc7891",
        "name": "",
        "group": "734b3edda0b2df2b",
        "order": 1,
        "width": 5,
        "height": 3,
        "gtype": "gage",
        "title": "momentaner Delta Verbrauch",
        "label": "Watt",
        "format": "{{value}}",
        "min": "-8000",
        "max": "6000",
        "colors": [
            "#99c1f1",
            "#008000",
            "#ed333b"
        ],
        "seg1": "-10",
        "seg2": "20",
        "diff": true,
        "className": "",
        "x": 1440,
        "y": 540,
        "wires": []
    },
    {
        "id": "b1d59dc5c22bc333",
        "type": "influxdb out",
        "z": "b072f5fcdefc7891",
        "d": true,
        "influxdb": "e0fd073ca3007348",
        "name": "speichern: Aktueller Verbrauch [W]",
        "measurement": "AktuellerVerbrauch_Watt",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 1460,
        "y": 580,
        "wires": []
    },
    {
        "id": "5e58b08cb20e4647",
        "type": "influxdb out",
        "z": "b072f5fcdefc7891",
        "influxdb": "e0fd073ca3007348",
        "name": "speichern: Verbrauch total Kurzzeit [kWh]",
        "measurement": "VerbrauchTotal_kWh",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 880,
        "y": 100,
        "wires": []
    },
    {
        "id": "7c050b489db76a11",
        "type": "influxdb out",
        "z": "b072f5fcdefc7891",
        "influxdb": "e0fd073ca3007348",
        "name": "speichern: Returned total Kurzzeit [kWh]",
        "measurement": "ReturnedTotal_kWh",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 880,
        "y": 140,
        "wires": []
    },
    {
        "id": "ff89374e88c5a7c9",
        "type": "switch",
        "z": "b072f5fcdefc7891",
        "name": "Glättung ja=2 / nein=1",
        "property": "g_Glättung",
        "propertyType": "global",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 900,
        "y": 460,
        "wires": [
            [
                "b7d84e78a2372d3a"
            ],
            [
                "d7e3d425bfce5bcc"
            ]
        ]
    },
    {
        "id": "d7e3d425bfce5bcc",
        "type": "smooth",
        "z": "b072f5fcdefc7891",
        "name": "",
        "property": "payload",
        "action": "mean",
        "count": "3",
        "round": "0",
        "mult": "single",
        "reduce": true,
        "x": 1100,
        "y": 480,
        "wires": [
            [
                "7261c7f8f3a5eafc"
            ]
        ]
    },
    {
        "id": "ca8d4678f7153a25",
        "type": "ui_gauge",
        "z": "b072f5fcdefc7891",
        "name": "",
        "group": "734b3edda0b2df2b",
        "order": 7,
        "width": 3,
        "height": 2,
        "gtype": "gage",
        "title": "Stromstärke",
        "label": "Ampere",
        "format": "{{value}}",
        "min": "0",
        "max": "25",
        "colors": [
            "#2ec27e",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "14",
        "seg2": "20",
        "diff": false,
        "className": "",
        "x": 690,
        "y": 400,
        "wires": []
    },
    {
        "id": "aa66a7c4b506bc00",
        "type": "ui_gauge",
        "z": "b072f5fcdefc7891",
        "name": "",
        "group": "734b3edda0b2df2b",
        "order": 8,
        "width": 3,
        "height": 2,
        "gtype": "gage",
        "title": "Spannung",
        "label": "Volt",
        "format": "{{value}}",
        "min": "0",
        "max": "260",
        "colors": [
            "#2ec27e",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "220",
        "seg2": "235",
        "diff": false,
        "className": "",
        "x": 650,
        "y": 860,
        "wires": []
    },
    {
        "id": "dec0a4c1c8251fcb",
        "type": "ui_gauge",
        "z": "b072f5fcdefc7891",
        "name": "",
        "group": "734b3edda0b2df2b",
        "order": 3,
        "width": 5,
        "height": 3,
        "gtype": "gage",
        "title": "Abgabe Panele",
        "label": "Watt",
        "format": "{{value}}",
        "min": 0,
        "max": "1000",
        "colors": [
            "#e5a50a",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 720,
        "y": 2020,
        "wires": []
    },
    {
        "id": "e13ec986b8ae0e01",
        "type": "ui_gauge",
        "z": "b072f5fcdefc7891",
        "name": "Füllstand PowerPack",
        "group": "734b3edda0b2df2b",
        "order": 10,
        "width": 2,
        "height": 2,
        "gtype": "wave",
        "title": "",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 460,
        "y": 2400,
        "wires": []
    },
    {
        "id": "48f8c7bbb0031934",
        "type": "ui_text",
        "z": "b072f5fcdefc7891",
        "group": "cb76b6e892fe5709",
        "order": 13,
        "width": 5,
        "height": 1,
        "name": "",
        "label": "Delta Verbrauch",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1580,
        "y": 500,
        "wires": []
    },
    {
        "id": "2c587d1fe48e5c7b",
        "type": "influxdb out",
        "z": "b072f5fcdefc7891",
        "influxdb": "e0fd073ca3007348",
        "name": "speichern: Leistung ins Haus [W]",
        "measurement": "LeistungInsHaus_Watt",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 720,
        "y": 700,
        "wires": []
    },
    {
        "id": "a8b1bfec2df7691a",
        "type": "influxdb out",
        "z": "b072f5fcdefc7891",
        "influxdb": "e0fd073ca3007348",
        "name": "speichern: Entnahme Powerpack [W]",
        "measurement": "EntnahmePowerpack_Watt",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 510,
        "y": 2200,
        "wires": []
    },
    {
        "id": "1b7a07fd0775ebc7",
        "type": "influxdb out",
        "z": "b072f5fcdefc7891",
        "influxdb": "e0fd073ca3007348",
        "name": "speichern: Ladeleistung Powerpack [W]",
        "measurement": "LadeleistungPowerpack_Watt",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 520,
        "y": 2320,
        "wires": []
    },
    {
        "id": "aaf7f4bef2f3e245",
        "type": "influxdb out",
        "z": "b072f5fcdefc7891",
        "influxdb": "e0fd073ca3007348",
        "name": "speichern: Füllstand Powerpack [W]",
        "measurement": "FüllstandPowerpack_Watt",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 500,
        "y": 2480,
        "wires": []
    },
    {
        "id": "a63477d2e01f2317",
        "type": "influxdb out",
        "z": "b072f5fcdefc7891",
        "influxdb": "e0fd073ca3007348",
        "name": "speichern: Leistung Panele [kWh]",
        "measurement": "LeistungPanele_kWh",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 1200,
        "y": 2040,
        "wires": []
    },
    {
        "id": "14f8b7e2b12dabb1",
        "type": "delay",
        "z": "b072f5fcdefc7891",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "5",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 740,
        "y": 2060,
        "wires": [
            [
                "93f5f42a19884a52"
            ]
        ]
    },
    {
        "id": "82edc7642e7d3972",
        "type": "calculator",
        "z": "b072f5fcdefc7891",
        "name": "Wh zu kWh",
        "inputMsgField": "payload",
        "outputMsgField": "payload",
        "operation": "div",
        "constant": "1000",
        "round": false,
        "truncate": false,
        "decimals": 0,
        "decimals2": "0",
        "x": 590,
        "y": 100,
        "wires": [
            [
                "554e477fac41eb08",
                "5e58b08cb20e4647"
            ]
        ]
    },
    {
        "id": "4e11af10e6b52fd8",
        "type": "calculator",
        "z": "b072f5fcdefc7891",
        "name": "Wh zu kWh",
        "inputMsgField": "payload",
        "outputMsgField": "payload",
        "operation": "div",
        "constant": "1000",
        "round": false,
        "decimals": 0,
        "x": 590,
        "y": 140,
        "wires": [
            [
                "7e11b70fa28ad0b5",
                "7c050b489db76a11"
            ]
        ]
    },
    {
        "id": "554e477fac41eb08",
        "type": "change",
        "z": "b072f5fcdefc7891",
        "name": "setze g_VerbrauchTotal_kWh",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "g_VerbrauchTotal_kWh",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 840,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "7e11b70fa28ad0b5",
        "type": "change",
        "z": "b072f5fcdefc7891",
        "name": "setze g_ReturnedTotal_kWh",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "g_ReturnedTotal_kWh",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 840,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "2e0c01eb4f83eee5",
        "type": "influxdb out",
        "z": "b072f5fcdefc7891",
        "influxdb": "e0fd073ca3007348",
        "name": "speichern: Leistung Panele [W]",
        "measurement": "LeistungPanele_inWatt",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 770,
        "y": 1980,
        "wires": []
    },
    {
        "id": "b0fcef9ccc5a5e87",
        "type": "switch",
        "z": "b072f5fcdefc7891",
        "name": "auf Sommerbetrieb prüfen",
        "property": "g_Winterbetrieb",
        "propertyType": "global",
        "rules": [
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 470,
        "y": 2020,
        "wires": [
            [
                "dec0a4c1c8251fcb",
                "2e0c01eb4f83eee5",
                "14f8b7e2b12dabb1"
            ]
        ]
    },
    {
        "id": "24112947a1adf5e2",
        "type": "link in",
        "z": "b072f5fcdefc7891",
        "name": "link in 6",
        "links": [
            "284047440789911e",
            "5310ad863593bae7"
        ],
        "x": 565,
        "y": 1980,
        "wires": [
            [
                "2e0c01eb4f83eee5",
                "dec0a4c1c8251fcb",
                "14f8b7e2b12dabb1"
            ]
        ]
    },
    {
        "id": "37a8c18fa4e6fe30",
        "type": "switch",
        "z": "b072f5fcdefc7891",
        "name": "prüfen auf Winterbetrieb",
        "property": "g_Winterbetrieb",
        "propertyType": "global",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 690,
        "y": 740,
        "wires": [
            [
                "5310ad863593bae7"
            ]
        ]
    },
    {
        "id": "5310ad863593bae7",
        "type": "link out",
        "z": "b072f5fcdefc7891",
        "name": "link out 7",
        "mode": "link",
        "links": [
            "24112947a1adf5e2"
        ],
        "x": 855,
        "y": 740,
        "wires": []
    },
    {
        "id": "93f5f42a19884a52",
        "type": "function",
        "z": "b072f5fcdefc7891",
        "name": "Watt2kWh Flex",
        "func": "var nL_ZeitInMillSekunden, nL_Sekunden, nl_kWattStunden, msg1, msg2, debug;\n\nlet nL_MomentaneLeistung = msg.payload;\nlet nL_SaveMillSekunden = global.get('g_Temp')\n\nconst Moment = new Date();\n\nnL_ZeitInMillSekunden = Moment.getTime();\nglobal.set('g_Temp', nL_ZeitInMillSekunden);\nnL_Sekunden = (nL_ZeitInMillSekunden - nL_SaveMillSekunden) / 1000;\n\nif (nL_MomentaneLeistung < 2) {\n    nl_kWattStunden = 0\n}else{\n    nl_kWattStunden = ((nL_MomentaneLeistung * nL_Sekunden) / 3600) / 1000;\n    //nl_kWattStunden = Math.round(nl_kWattStunden * 100000000) / 100000000\n}\n\nif (nL_Sekunden < 500) {\n    msg1 = { \"timestamp\": Date.now(), payload: nl_kWattStunden };\n    msg2 = {\n        payload: { \"properties\": { \"momLeistung\": nL_MomentaneLeistung, \"Zeit\": nL_Sekunden, \"kWh\": nl_kWattStunden}}};\n} else {\n    nl_kWattStunden = 0\n    msg1 = { \"timestamp\": Date.now(), payload: nl_kWattStunden };\n    msg2 = { payload: 'Erstwert' };\n}\n\nreturn [msg1, msg2]; ",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 2060,
        "wires": [
            [
                "a63477d2e01f2317"
            ],
            [
                "9668f61053b9ed37"
            ]
        ]
    },
    {
        "id": "9668f61053b9ed37",
        "type": "debug",
        "z": "b072f5fcdefc7891",
        "name": "Debug Panelleistung errechnete Daten",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1210,
        "y": 2080,
        "wires": []
    },
    {
        "id": "bb8a082b5b30d8e1",
        "type": "switch",
        "z": "b072f5fcdefc7891",
        "name": "ist negativ",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gte",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "lt",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1380,
        "y": 620,
        "wires": [
            [],
            [
                "c10ccaab78dbb4f6"
            ]
        ]
    },
    {
        "id": "c10ccaab78dbb4f6",
        "type": "influxdb out",
        "z": "b072f5fcdefc7891",
        "influxdb": "e0fd073ca3007348",
        "name": "speichern: Eingespeiste Leistung [W]",
        "measurement": "EingespeisteLeistung_Watt",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 1620,
        "y": 620,
        "wires": []
    },
    {
        "id": "dd67c6fe4e9a8514",
        "type": "function",
        "z": "b072f5fcdefc7891",
        "d": true,
        "name": "prüfe auf Induktion",
        "func": "var nL_ZeitInMillSekunden, msg1, msg2, debug, status;\n\nlet nL_Messwert         = (msg.payload);\nlet nL_SaveMillSekunden = global.get('g_Temp3')\nlet nL_SaveMesswert     = global.get('g_Messwert')\nlet nL_IntervalCounter  = global.get('g_Intervalcounter')\nlet bL_Status           = global.get('g_InduktionsStatus')\nlet nL_DeltaVerbrauch   = global.get('g_DeltaVerbrauch')\nlet bL_KostalAktiv      = global.get('g_KostalAktiv')\nlet nL_Zeitdifferenz = 0;\nlet nL_Toleranz      = 0.3; //Ampere\nlet nL_Interval      = 6000; //1000 = 1sec\nlet iL_IntervalSteps = 2;\n\nconst Moment = new Date();\n\nnL_ZeitInMillSekunden = Moment.getTime();\n\nif (bL_KostalAktiv == false) {\n    if ((nL_Messwert > (nL_SaveMesswert + nL_Toleranz) || nL_Messwert < (nL_SaveMesswert - nL_Toleranz)))  {\n        nL_Zeitdifferenz = nL_ZeitInMillSekunden - nL_SaveMillSekunden\n        if (nL_Zeitdifferenz < nL_Interval) {\n            nL_IntervalCounter += 1;\n            if (nL_IntervalCounter > iL_IntervalSteps) {\n                global.set('g_Induktion', true);\n                status = true;\n            }\n        } else {\n            nL_IntervalCounter = 0;\n            global.set('g_Induktion', false);\n            status = false;\n        }\n    }\n\n    if (isNaN(status)) {\n        global.set('g_Induktion', false);\n        status = false;\n    }\n\n    debug = { \"AmpereMom\": nL_Messwert, \"SaveMessung\": nL_SaveMesswert, \"MomZeit\": nL_ZeitInMillSekunden, \"SaveZeit\": nL_SaveMillSekunden, \"ZeitDiff\": nL_Zeitdifferenz, \"Interval\": nL_Interval, \"Toleranz\": nL_Toleranz, \"Status\": status, \"DeltaVerbrauch\":nL_DeltaVerbrauch, \"AlterStatus\":bL_Status }\n    global.set('g_Temp3', nL_ZeitInMillSekunden);\n    global.set('g_Messwert', nL_Messwert);\n    global.set('g_Intervalcounter', nL_IntervalCounter);\n    global.set('g_InduktionsStatus', status);\n\n    msg1 = { payload: status };\n    msg2 = { payload: debug };\n\n    if (status != bL_Status) {\n        return [msg1, msg2];\n    } \n}\n\n",
        "outputs": 2,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 360,
        "wires": [
            [
                "3fa0ce9fea211e31"
            ],
            [
                "92de16ecbe57f62f"
            ]
        ]
    },
    {
        "id": "92de16ecbe57f62f",
        "type": "debug",
        "z": "b072f5fcdefc7891",
        "name": "Induktions Debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 380,
        "wires": []
    },
    {
        "id": "1d6f89d02afcb33f",
        "type": "BlinkerUltimate",
        "z": "b072f5fcdefc7891",
        "name": "Blinker",
        "stopbehaviorPIN1": "1",
        "stopbehaviorPIN2": "0",
        "blinkfrequency": "500",
        "initializewith": "0",
        "payloadPropName": "payload",
        "x": 1120,
        "y": 280,
        "wires": [
            [
                "8374e03c406da573"
            ],
            [
                "8374e03c406da573"
            ]
        ]
    },
    {
        "id": "d470a146e4d4b425",
        "type": "debug",
        "z": "b072f5fcdefc7891",
        "name": "debug Solarflow APP Server Daten",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 580,
        "y": 1020,
        "wires": []
    },
    {
        "id": "52d70e453a3f2d74",
        "type": "mqtt in",
        "z": "b072f5fcdefc7891",
        "d": true,
        "name": "Status SolarFlow über DEF Server",
        "topic": "",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "372c7ab5b580575d",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 200,
        "y": 1580,
        "wires": [
            [
                "e3bbd9f6f1e633ae",
                "b7bb6e2ddb940924",
                "f5ed5ec064741e3e",
                "7eb133ae2df24a12",
                "d965467ba6de586e",
                "6d95a205caa042b5",
                "f24df0e9732348e1",
                "b35a6f4cddb25f94",
                "f4cf3a5a81d3765a",
                "962d1851ab1ca079"
            ]
        ]
    },
    {
        "id": "e3bbd9f6f1e633ae",
        "type": "debug",
        "z": "b072f5fcdefc7891",
        "d": true,
        "name": "debug Solarflow DEF Server Daten",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 580,
        "y": 1440,
        "wires": []
    },
    {
        "id": "b7bb6e2ddb940924",
        "type": "change",
        "z": "b072f5fcdefc7891",
        "d": true,
        "name": "Solar Inputpower [Watt]",
        "rules": [
            {
                "t": "move",
                "p": "payload.solarInputPower",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 550,
        "y": 1480,
        "wires": [
            [
                "6e7a1bef8c00395e"
            ]
        ]
    },
    {
        "id": "f5ed5ec064741e3e",
        "type": "change",
        "z": "b072f5fcdefc7891",
        "d": true,
        "name": "Leistung ins Haus [Watt]",
        "rules": [
            {
                "t": "move",
                "p": "payload.outputHomePower",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 550,
        "y": 1520,
        "wires": [
            []
        ]
    },
    {
        "id": "7eb133ae2df24a12",
        "type": "change",
        "z": "b072f5fcdefc7891",
        "d": true,
        "name": "Entnahme Powerpack in [Watt]",
        "rules": [
            {
                "t": "move",
                "p": "payload.outputPackPower",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 1560,
        "wires": [
            [
                "b38d18cd9d48584a"
            ]
        ]
    },
    {
        "id": "d965467ba6de586e",
        "type": "change",
        "z": "b072f5fcdefc7891",
        "d": true,
        "name": "Ladeleistungeistung in Akku [Watt]",
        "rules": [
            {
                "t": "move",
                "p": "payload.packInputPower",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 1600,
        "wires": [
            [
                "342749c3a2e4b112"
            ]
        ]
    },
    {
        "id": "6d95a205caa042b5",
        "type": "change",
        "z": "b072f5fcdefc7891",
        "d": true,
        "name": "verbleibende Ladezeit bei aktueller Ladeleistung [s]",
        "rules": [
            {
                "t": "move",
                "p": "payload.remainInputTime",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 630,
        "y": 1640,
        "wires": [
            []
        ]
    },
    {
        "id": "f24df0e9732348e1",
        "type": "change",
        "z": "b072f5fcdefc7891",
        "d": true,
        "name": "verbleibende Entladezeit bei aktueller Entnahmeleistung [s]",
        "rules": [
            {
                "t": "move",
                "p": "payload.remainOutTime",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 660,
        "y": 1680,
        "wires": [
            []
        ]
    },
    {
        "id": "b35a6f4cddb25f94",
        "type": "change",
        "z": "b072f5fcdefc7891",
        "d": true,
        "name": "Status Powerpack",
        "rules": [
            {
                "t": "move",
                "p": "payload.packState",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 530,
        "y": 1720,
        "wires": [
            []
        ]
    },
    {
        "id": "f4cf3a5a81d3765a",
        "type": "change",
        "z": "b072f5fcdefc7891",
        "d": true,
        "name": "Akku Füllstand [%]",
        "rules": [
            {
                "t": "move",
                "p": "payload.electricLevel",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 530,
        "y": 1760,
        "wires": [
            [
                "2481eb9e52755a53"
            ]
        ]
    },
    {
        "id": "463622c7bcfb8922",
        "type": "link in",
        "z": "b072f5fcdefc7891",
        "name": "Solar Input Power OUT",
        "links": [
            "6e7a1bef8c00395e",
            "0c247c739bfd8ba1"
        ],
        "x": 95,
        "y": 2040,
        "wires": [
            [
                "ab4cd286bddfabce"
            ]
        ]
    },
    {
        "id": "6e7a1bef8c00395e",
        "type": "link out",
        "z": "b072f5fcdefc7891",
        "d": true,
        "name": "Solar Input Power IN",
        "mode": "link",
        "links": [
            "463622c7bcfb8922"
        ],
        "x": 695,
        "y": 1480,
        "wires": []
    },
    {
        "id": "0c247c739bfd8ba1",
        "type": "link out",
        "z": "b072f5fcdefc7891",
        "name": "Solar Input Power IN",
        "mode": "link",
        "links": [
            "463622c7bcfb8922"
        ],
        "x": 695,
        "y": 1060,
        "wires": []
    },
    {
        "id": "16e918bca13d4650",
        "type": "link in",
        "z": "b072f5fcdefc7891",
        "name": "Akku Füllstand OUT",
        "links": [
            "2481eb9e52755a53",
            "4df62e2cc4bd7e51"
        ],
        "x": 95,
        "y": 2440,
        "wires": [
            [
                "fa617d675ac28fb2"
            ]
        ]
    },
    {
        "id": "d4e94b6b69704d61",
        "type": "link in",
        "z": "b072f5fcdefc7891",
        "name": "Ladeleistung in Akku Füllstand OUT",
        "links": [
            "7d9b055294a53a67",
            "342749c3a2e4b112"
        ],
        "x": 95,
        "y": 2280,
        "wires": [
            [
                "4ced2c7e385b57b9"
            ]
        ]
    },
    {
        "id": "7a7a7cae4541b017",
        "type": "link in",
        "z": "b072f5fcdefc7891",
        "name": "Entnahme Powerpack OUT",
        "links": [
            "a327494e7a0cd101",
            "b38d18cd9d48584a"
        ],
        "x": 95,
        "y": 2160,
        "wires": [
            [
                "e4375341484aec86"
            ]
        ]
    },
    {
        "id": "a327494e7a0cd101",
        "type": "link out",
        "z": "b072f5fcdefc7891",
        "name": "Entnahme Powerpack IN",
        "mode": "link",
        "links": [
            "7a7a7cae4541b017"
        ],
        "x": 735,
        "y": 1140,
        "wires": []
    },
    {
        "id": "7d9b055294a53a67",
        "type": "link out",
        "z": "b072f5fcdefc7891",
        "name": "Ladeleistung Powerpackr IN",
        "mode": "link",
        "links": [
            "d4e94b6b69704d61"
        ],
        "x": 755,
        "y": 1180,
        "wires": []
    },
    {
        "id": "4df62e2cc4bd7e51",
        "type": "link out",
        "z": "b072f5fcdefc7891",
        "name": "Solar Input Power IN",
        "mode": "link",
        "links": [
            "16e918bca13d4650"
        ],
        "x": 655,
        "y": 1340,
        "wires": []
    },
    {
        "id": "b38d18cd9d48584a",
        "type": "link out",
        "z": "b072f5fcdefc7891",
        "d": true,
        "name": "Entnahme Powerpack IN",
        "mode": "link",
        "links": [
            "7a7a7cae4541b017"
        ],
        "x": 735,
        "y": 1560,
        "wires": []
    },
    {
        "id": "342749c3a2e4b112",
        "type": "link out",
        "z": "b072f5fcdefc7891",
        "d": true,
        "name": "Ladeleistung Powerpackr IN",
        "mode": "link",
        "links": [
            "d4e94b6b69704d61"
        ],
        "x": 755,
        "y": 1600,
        "wires": []
    },
    {
        "id": "2481eb9e52755a53",
        "type": "link out",
        "z": "b072f5fcdefc7891",
        "d": true,
        "name": "Solar Input Power IN",
        "mode": "link",
        "links": [
            "16e918bca13d4650"
        ],
        "x": 655,
        "y": 1760,
        "wires": []
    },
    {
        "id": "315815961c9efa01",
        "type": "status",
        "z": "b072f5fcdefc7891",
        "d": true,
        "name": "",
        "scope": [
            "2347cf7b4e17c01e",
            "962d1851ab1ca079"
        ],
        "x": 1000,
        "y": 1760,
        "wires": [
            [
                "b64de609f161e4d5"
            ]
        ]
    },
    {
        "id": "962d1851ab1ca079",
        "type": "change",
        "z": "b072f5fcdefc7891",
        "d": true,
        "name": "DEF Server aktiv?",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 530,
        "y": 1800,
        "wires": [
            [
                "b021c3b6b7c88392",
                "c4b59bb5087be9bf"
            ]
        ]
    },
    {
        "id": "b021c3b6b7c88392",
        "type": "trigger",
        "z": "b072f5fcdefc7891",
        "d": true,
        "name": "false nach 60sec absetzen",
        "op1": "",
        "op2": "true",
        "op1type": "nul",
        "op2type": "bool",
        "duration": "60",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 780,
        "y": 1840,
        "wires": [
            [
                "c4b59bb5087be9bf"
            ]
        ]
    },
    {
        "id": "c4b59bb5087be9bf",
        "type": "BlinkerUltimate",
        "z": "b072f5fcdefc7891",
        "d": true,
        "name": "Blinker",
        "stopbehaviorPIN1": "0",
        "stopbehaviorPIN2": "0",
        "blinkfrequency": "500",
        "initializewith": "0",
        "payloadPropName": "payload",
        "x": 1020,
        "y": 1800,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "b64de609f161e4d5",
        "type": "switch",
        "z": "b072f5fcdefc7891",
        "d": true,
        "name": "",
        "property": "payload.status.fill",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "red",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1130,
        "y": 1760,
        "wires": [
            [
                "129c19b81839e139"
            ]
        ]
    },
    {
        "id": "129c19b81839e139",
        "type": "change",
        "z": "b072f5fcdefc7891",
        "d": true,
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1290,
        "y": 1760,
        "wires": [
            []
        ]
    },
    {
        "id": "5db8f25b853aa442",
        "type": "switch",
        "z": "b072f5fcdefc7891",
        "name": "PackData ausfiltern",
        "property": "payload.packData",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 530,
        "y": 1380,
        "wires": [
            [
                "22d7ef72b9522048"
            ]
        ]
    },
    {
        "id": "e8cb478024c6961d",
        "type": "buffer-parser",
        "z": "b072f5fcdefc7891",
        "name": "",
        "data": "payload.buffer",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "floatle",
                "name": "item1",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "swap16",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "keyvalue",
        "resultTypeType": "return",
        "multipleResult": false,
        "fanOutMultipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 730,
        "y": 2940,
        "wires": [
            [
                "f397a8830663f657"
            ]
        ]
    },
    {
        "id": "587d8aa699fab572",
        "type": "modbus-flex-getter",
        "z": "b072f5fcdefc7891",
        "name": "Modbus Kostal",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "logIOActivities": false,
        "server": "fdae33e0bafe12a8",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 540,
        "y": 2940,
        "wires": [
            [],
            [
                "e8cb478024c6961d"
            ]
        ]
    },
    {
        "id": "69fc864a221053fc",
        "type": "inject",
        "z": "b072f5fcdefc7891",
        "name": "Panel Leistung [W]",
        "props": [
            {
                "p": "payload.fc",
                "v": "3",
                "vt": "str"
            },
            {
                "p": "payload.address",
                "v": "100",
                "vt": "str"
            },
            {
                "p": "payload.quantity",
                "v": "2",
                "vt": "str"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "PanelLeistung_[W]_Kostal",
        "x": 240,
        "y": 2660,
        "wires": [
            [
                "587d8aa699fab572"
            ]
        ]
    },
    {
        "id": "3f7c37b0f4996aa1",
        "type": "inject",
        "z": "b072f5fcdefc7891",
        "name": "Momentaner Verbrauch von PV [W]",
        "props": [
            {
                "p": "payload.fc",
                "v": "3",
                "vt": "str"
            },
            {
                "p": "payload.address",
                "v": "116",
                "vt": "str"
            },
            {
                "p": "payload.quantity",
                "v": "2",
                "vt": "str"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "MomentanerEigenverbrauchVonPV_[W]_Kostal",
        "x": 190,
        "y": 2700,
        "wires": [
            [
                "587d8aa699fab572"
            ]
        ]
    },
    {
        "id": "fb88639dcb938ad4",
        "type": "inject",
        "z": "b072f5fcdefc7891",
        "name": "Total Verbrauch im Haus [Wh]",
        "props": [
            {
                "p": "payload.fc",
                "v": "3",
                "vt": "str"
            },
            {
                "p": "payload.address",
                "v": "118",
                "vt": "str"
            },
            {
                "p": "payload.quantity",
                "v": "2",
                "vt": "str"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "600",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "Gesamtverbrauch_[Wh]_Kostal",
        "x": 210,
        "y": 3140,
        "wires": [
            [
                "587d8aa699fab572"
            ]
        ]
    },
    {
        "id": "194ddcbdf84942dc",
        "type": "inject",
        "z": "b072f5fcdefc7891",
        "name": "Total AC ins Netz [Wh]",
        "props": [
            {
                "p": "payload.fc",
                "v": "3",
                "vt": "str"
            },
            {
                "p": "payload.address",
                "v": "1064",
                "vt": "str"
            },
            {
                "p": "payload.quantity",
                "v": "2",
                "vt": "str"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "600",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "TotalACinsNetz_[Wh]_Kostal",
        "x": 230,
        "y": 3100,
        "wires": [
            [
                "587d8aa699fab572"
            ]
        ]
    },
    {
        "id": "21f48abf3b8d5b6b",
        "type": "inject",
        "z": "b072f5fcdefc7891",
        "name": "Aktueller Verbrauch AC [W} Kostal",
        "props": [
            {
                "p": "payload.fc",
                "v": "3",
                "vt": "str"
            },
            {
                "p": "payload.address",
                "v": "252",
                "vt": "str"
            },
            {
                "p": "payload.quantity",
                "v": "2",
                "vt": "str"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "3",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "AktuellerVerbrauch_Kostal",
        "x": 190,
        "y": 2740,
        "wires": [
            [
                "587d8aa699fab572"
            ]
        ]
    },
    {
        "id": "bc7ff54e1b48bb6a",
        "type": "switch",
        "z": "b072f5fcdefc7891",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "PanelLeistung_[W]_Kostal",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "MomentanerEigenverbrauchVonPV_[W]_Kostal",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "AktuellerVerbrauch_Kostal",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Tagesertrag_[Wh]_Kostal",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Monatsertrag_[Wh]_Kostal",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Jahresertrag_[Wh]_Kostal",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "LeistungVonBatterie_[W]_Kostal",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "LeistungVonNetz_[W]_Kostal",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "TempWechselrichterz_[C]_Kostal",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Potenzialausgleich_[Ohm]_Kostal",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Netzfrequenzh_[Hz]_Kostal",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "TotalACinsNetz_[Wh]_Kostal",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Gesamtverbrauch_[Wh]_Kostal",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "GesamtverbrauchVonPV_[Wh]_Kostal",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "GesamtverbrauchVonNetz_[Wh]_Kostal",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "GesamtverbrauchVonAkku_[Wh]_Kostal",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "GesamtPanelleistung_[Wh]_Kostal",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 17,
        "x": 1230,
        "y": 2940,
        "wires": [
            [
                "0b9c673ff3c9bd02",
                "90fe77b7ace27f39"
            ],
            [
                "90fe77b7ace27f39",
                "b64f6583cc907f17"
            ],
            [
                "35f06c91d0d95ab4",
                "90fe77b7ace27f39"
            ],
            [
                "90fe77b7ace27f39",
                "89d68e50d0e5f397"
            ],
            [
                "90fe77b7ace27f39",
                "d3c18580d6ef6aca"
            ],
            [
                "90fe77b7ace27f39",
                "99d61e616f78c9cf"
            ],
            [
                "90fe77b7ace27f39",
                "562ee6da641fd597"
            ],
            [
                "90fe77b7ace27f39",
                "96c33d44bfb9a54e"
            ],
            [
                "90fe77b7ace27f39",
                "e3b4e6f1cb90221c"
            ],
            [
                "90fe77b7ace27f39",
                "c833cc3cedc3fc7a"
            ],
            [
                "90fe77b7ace27f39",
                "352ae7655d3e1539"
            ],
            [
                "90fe77b7ace27f39",
                "e605caa8f0123b67"
            ],
            [
                "90fe77b7ace27f39",
                "77750b4be41374fd"
            ],
            [
                "90fe77b7ace27f39",
                "2f9f8d6fecd1b9ed"
            ],
            [
                "90fe77b7ace27f39",
                "179428cc63236fdb"
            ],
            [
                "90fe77b7ace27f39",
                "78bb5e4f21063c9a"
            ],
            [
                "c82f9c3ba7e70859"
            ]
        ]
    },
    {
        "id": "c434bf1513cbf1a7",
        "type": "link in",
        "z": "b072f5fcdefc7891",
        "name": "Aktuelle Leistung von Kostal QUT",
        "links": [
            "35f06c91d0d95ab4"
        ],
        "x": 525,
        "y": 520,
        "wires": [
            [
                "bfbf34f937f99e87"
            ]
        ]
    },
    {
        "id": "35f06c91d0d95ab4",
        "type": "link out",
        "z": "b072f5fcdefc7891",
        "name": "Aktuelle Leistung von Kostal IN",
        "mode": "link",
        "links": [
            "c434bf1513cbf1a7",
            "74892427cb3eaa06"
        ],
        "x": 1395,
        "y": 2820,
        "wires": []
    },
    {
        "id": "f397a8830663f657",
        "type": "change",
        "z": "b072f5fcdefc7891",
        "name": "zu Payload schieben",
        "rules": [
            {
                "t": "move",
                "p": "payload.item1",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 920,
        "y": 2940,
        "wires": [
            [
                "f3b31114d7a118ec"
            ]
        ]
    },
    {
        "id": "2520c0457b259428",
        "type": "debug",
        "z": "b072f5fcdefc7891",
        "name": "debug MODBUS",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1510,
        "y": 3180,
        "wires": []
    },
    {
        "id": "f3b31114d7a118ec",
        "type": "function",
        "z": "b072f5fcdefc7891",
        "name": "Runden",
        "func": "const nL_Bereich = msg.payload;\nmsg.payload = Math.round(nL_Bereich * 100) / 100;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1100,
        "y": 2940,
        "wires": [
            [
                "bc7ff54e1b48bb6a"
            ]
        ]
    },
    {
        "id": "b8406ed3bf0c1b27",
        "type": "debug",
        "z": "b072f5fcdefc7891",
        "name": "Daten von Shelly oder Kostal",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1450,
        "y": 700,
        "wires": []
    },
    {
        "id": "04bbab0a02bc15b5",
        "type": "switch",
        "z": "b072f5fcdefc7891",
        "name": "Shelly aktiviert",
        "property": "g_Shelly",
        "propertyType": "global",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 660,
        "y": 480,
        "wires": [
            [
                "ff89374e88c5a7c9",
                "9f4f577accf8b932"
            ],
            []
        ]
    },
    {
        "id": "bfbf34f937f99e87",
        "type": "switch",
        "z": "b072f5fcdefc7891",
        "name": "Kostal aktiviert",
        "property": "g_Shelly",
        "propertyType": "global",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 660,
        "y": 520,
        "wires": [
            [
                "ff89374e88c5a7c9",
                "9f4f577accf8b932"
            ],
            []
        ]
    },
    {
        "id": "0b9c673ff3c9bd02",
        "type": "link out",
        "z": "b072f5fcdefc7891",
        "name": "Aktuelle Panel Leistung von Kostal IN",
        "mode": "link",
        "links": [
            "3e9c04f2e74fd72f",
            "09ea758c1ec1bd35"
        ],
        "x": 1395,
        "y": 2740,
        "wires": []
    },
    {
        "id": "67b8603124d08844",
        "type": "inject",
        "z": "b072f5fcdefc7891",
        "name": "",
        "props": [
            {
                "p": "payload.fc",
                "v": "3",
                "vt": "str"
            },
            {
                "p": "payload.address",
                "v": "322",
                "vt": "str"
            },
            {
                "p": "payload.quantity",
                "v": "2",
                "vt": "str"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "900",
        "crontab": "",
        "once": true,
        "onceDelay": "6",
        "topic": "Tagesertrag_[Wh]_Kostal",
        "x": 220,
        "y": 2780,
        "wires": [
            [
                "587d8aa699fab572"
            ]
        ]
    },
    {
        "id": "8bbbc15f29fb481f",
        "type": "inject",
        "z": "b072f5fcdefc7891",
        "d": true,
        "name": "Lestung Akku Entnahme [W]",
        "props": [
            {
                "p": "payload.fc",
                "v": "3",
                "vt": "str"
            },
            {
                "p": "payload.address",
                "v": "106",
                "vt": "str"
            },
            {
                "p": "payload.quantity",
                "v": "2",
                "vt": "str"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "10",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "LeistungVonBatterie_[W]_Kostal",
        "x": 210,
        "y": 2900,
        "wires": [
            [
                "587d8aa699fab572"
            ]
        ]
    },
    {
        "id": "2657e25d27011294",
        "type": "inject",
        "z": "b072f5fcdefc7891",
        "name": "Monatlicher ertrag [Wh]",
        "props": [
            {
                "p": "payload.fc",
                "v": "3",
                "vt": "str"
            },
            {
                "p": "payload.address",
                "v": "326",
                "vt": "str"
            },
            {
                "p": "payload.quantity",
                "v": "2",
                "vt": "str"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "3600",
        "crontab": "",
        "once": true,
        "onceDelay": "6",
        "topic": "Monatsertrag_[Wh]_Kostal",
        "x": 230,
        "y": 2820,
        "wires": [
            [
                "587d8aa699fab572"
            ]
        ]
    },
    {
        "id": "b98030803456ceaf",
        "type": "inject",
        "z": "b072f5fcdefc7891",
        "name": "Jährlicherr Ertrag [Wh]",
        "props": [
            {
                "p": "payload.fc",
                "v": "3",
                "vt": "str"
            },
            {
                "p": "payload.address",
                "v": "324",
                "vt": "str"
            },
            {
                "p": "payload.quantity",
                "v": "2",
                "vt": "str"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "7200",
        "crontab": "",
        "once": true,
        "onceDelay": "6",
        "topic": "Jahresertrag_[Wh]_Kostal",
        "x": 230,
        "y": 2860,
        "wires": [
            [
                "587d8aa699fab572"
            ]
        ]
    },
    {
        "id": "d2bac78a788d6034",
        "type": "inject",
        "z": "b072f5fcdefc7891",
        "name": "Lestung vom Netz [W]",
        "props": [
            {
                "p": "payload.fc",
                "v": "3",
                "vt": "str"
            },
            {
                "p": "payload.address",
                "v": "252",
                "vt": "str"
            },
            {
                "p": "payload.quantity",
                "v": "2",
                "vt": "str"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "LeistungVonNetz_[W]_Kostal",
        "x": 230,
        "y": 2940,
        "wires": [
            [
                "587d8aa699fab572"
            ]
        ]
    },
    {
        "id": "7c116e274d69e905",
        "type": "inject",
        "z": "b072f5fcdefc7891",
        "name": "Temperatur Wechselrichter [C]",
        "props": [
            {
                "p": "payload.fc",
                "v": "3",
                "vt": "str"
            },
            {
                "p": "payload.address",
                "v": "98",
                "vt": "str"
            },
            {
                "p": "payload.quantity",
                "v": "2",
                "vt": "str"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": "7",
        "topic": "TempWechselrichterz_[C]_Kostal",
        "x": 210,
        "y": 2980,
        "wires": [
            [
                "587d8aa699fab572"
            ]
        ]
    },
    {
        "id": "131b14fc4318dbf2",
        "type": "inject",
        "z": "b072f5fcdefc7891",
        "d": true,
        "name": "Potenzialausgleich [Ohm]",
        "props": [
            {
                "p": "payload.fc",
                "v": "3",
                "vt": "str"
            },
            {
                "p": "payload.address",
                "v": "120",
                "vt": "str"
            },
            {
                "p": "payload.quantity",
                "v": "2",
                "vt": "str"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "3600",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "Potenzialausgleich_[Ohm]_Kostal",
        "x": 220,
        "y": 3020,
        "wires": [
            [
                "587d8aa699fab572"
            ]
        ]
    },
    {
        "id": "37514b756bd09550",
        "type": "inject",
        "z": "b072f5fcdefc7891",
        "name": "Netzfrequenz [Hz]",
        "props": [
            {
                "p": "payload.fc",
                "v": "3",
                "vt": "str"
            },
            {
                "p": "payload.address",
                "v": "152",
                "vt": "str"
            },
            {
                "p": "payload.quantity",
                "v": "2",
                "vt": "str"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "900",
        "crontab": "",
        "once": true,
        "onceDelay": "7",
        "topic": "Netzfrequenzh_[Hz]_Kostal",
        "x": 250,
        "y": 3060,
        "wires": [
            [
                "587d8aa699fab572"
            ]
        ]
    },
    {
        "id": "65163b3a1bcb5c64",
        "type": "inject",
        "z": "b072f5fcdefc7891",
        "name": "Total Verbrauch von PV [Wh]",
        "props": [
            {
                "p": "payload.fc",
                "v": "3",
                "vt": "str"
            },
            {
                "p": "payload.address",
                "v": "114",
                "vt": "str"
            },
            {
                "p": "payload.quantity",
                "v": "2",
                "vt": "str"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "600",
        "crontab": "",
        "once": true,
        "onceDelay": "7",
        "topic": "GesamtverbrauchVonPV_[Wh]_Kostal",
        "x": 210,
        "y": 3180,
        "wires": [
            [
                "587d8aa699fab572"
            ]
        ]
    },
    {
        "id": "74127f5f711db075",
        "type": "inject",
        "z": "b072f5fcdefc7891",
        "name": "Total Verbrauch von Netz [Wh]",
        "props": [
            {
                "p": "payload.fc",
                "v": "3",
                "vt": "str"
            },
            {
                "p": "payload.address",
                "v": "112",
                "vt": "str"
            },
            {
                "p": "payload.quantity",
                "v": "2",
                "vt": "str"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "600",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "GesamtverbrauchVonNetz_[Wh]_Kostal",
        "x": 210,
        "y": 3220,
        "wires": [
            [
                "587d8aa699fab572"
            ]
        ]
    },
    {
        "id": "85f2d7d7281ac94f",
        "type": "inject",
        "z": "b072f5fcdefc7891",
        "d": true,
        "name": "Total Verbrauch von Akku [Wh]",
        "props": [
            {
                "p": "payload.fc",
                "v": "3",
                "vt": "str"
            },
            {
                "p": "payload.address",
                "v": "110",
                "vt": "str"
            },
            {
                "p": "payload.quantity",
                "v": "2",
                "vt": "str"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "600",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "GesamtverbrauchVonAkku_[Wh]_Kostal",
        "x": 210,
        "y": 3260,
        "wires": [
            [
                "587d8aa699fab572"
            ]
        ]
    },
    {
        "id": "b64f6583cc907f17",
        "type": "link out",
        "z": "b072f5fcdefc7891",
        "name": "Momentaner Verbrauch von PV Kostal IN",
        "mode": "link",
        "links": [
            "bf235e1c40cd45bb",
            "dbbdea74218a4139",
            "455bfe65f57903dc",
            "25a122ee533c85f0"
        ],
        "x": 1395,
        "y": 2780,
        "wires": []
    },
    {
        "id": "89d68e50d0e5f397",
        "type": "link out",
        "z": "b072f5fcdefc7891",
        "name": "Tagesertrag Kostal IN",
        "mode": "link",
        "links": [
            "1aa9efbf531d31e9"
        ],
        "x": 1445,
        "y": 2840,
        "wires": []
    },
    {
        "id": "d3c18580d6ef6aca",
        "type": "link out",
        "z": "b072f5fcdefc7891",
        "name": "Monatsertrag Kostal IN",
        "mode": "link",
        "links": [
            "71391d122b48ce5a"
        ],
        "x": 1485,
        "y": 2860,
        "wires": []
    },
    {
        "id": "99d61e616f78c9cf",
        "type": "link out",
        "z": "b072f5fcdefc7891",
        "name": "Jahresertrag Kostal IN",
        "mode": "link",
        "links": [
            "e6e07aeafd3d318a"
        ],
        "x": 1445,
        "y": 2880,
        "wires": []
    },
    {
        "id": "562ee6da641fd597",
        "type": "link out",
        "z": "b072f5fcdefc7891",
        "name": "Leistung Akkuentnahme Kostal IN",
        "mode": "link",
        "links": [
            "1273cdbbb64dde4d"
        ],
        "x": 1535,
        "y": 2900,
        "wires": []
    },
    {
        "id": "96c33d44bfb9a54e",
        "type": "link out",
        "z": "b072f5fcdefc7891",
        "name": "Leistung vom Netz Kostal IN",
        "mode": "link",
        "links": [
            "059baa368a4679e0",
            "bf8fc07984c736da",
            "6c670d117fc62fcb",
            "197357f5a4077b6e"
        ],
        "x": 1485,
        "y": 2920,
        "wires": []
    },
    {
        "id": "e3b4e6f1cb90221c",
        "type": "link out",
        "z": "b072f5fcdefc7891",
        "name": "Temperatur Wechselrichter Kostal IN",
        "mode": "link",
        "links": [
            "e55beff1e798bd14"
        ],
        "x": 1535,
        "y": 2940,
        "wires": []
    },
    {
        "id": "c833cc3cedc3fc7a",
        "type": "link out",
        "z": "b072f5fcdefc7891",
        "name": "Potenzialausgleich Kostal IN",
        "mode": "link",
        "links": [],
        "x": 1485,
        "y": 2960,
        "wires": []
    },
    {
        "id": "352ae7655d3e1539",
        "type": "link out",
        "z": "b072f5fcdefc7891",
        "name": "Netzfrequenz Kostal IN",
        "mode": "link",
        "links": [
            "005175eb68df1adb"
        ],
        "x": 1535,
        "y": 2980,
        "wires": []
    },
    {
        "id": "e605caa8f0123b67",
        "type": "link out",
        "z": "b072f5fcdefc7891",
        "name": "Total AC ins Netz Kostal IN",
        "mode": "link",
        "links": [
            "4658cae33cef5ebb"
        ],
        "x": 1445,
        "y": 3000,
        "wires": []
    },
    {
        "id": "77750b4be41374fd",
        "type": "link out",
        "z": "b072f5fcdefc7891",
        "name": "Total Verbrauch ins Haus Kostal IN",
        "mode": "link",
        "links": [
            "3a47e36af2542114"
        ],
        "x": 1485,
        "y": 3020,
        "wires": []
    },
    {
        "id": "2f9f8d6fecd1b9ed",
        "type": "link out",
        "z": "b072f5fcdefc7891",
        "name": "Tital Verbrauch von PV Kostal IN",
        "mode": "link",
        "links": [
            "5e27082897c38ba5"
        ],
        "x": 1445,
        "y": 3040,
        "wires": []
    },
    {
        "id": "179428cc63236fdb",
        "type": "link out",
        "z": "b072f5fcdefc7891",
        "name": "Totaler Verbrauch vom Netz Kostal IN",
        "mode": "link",
        "links": [
            "a475da4e65c2a03f"
        ],
        "x": 1405,
        "y": 3060,
        "wires": []
    },
    {
        "id": "78bb5e4f21063c9a",
        "type": "link out",
        "z": "b072f5fcdefc7891",
        "name": "Total Verbrauch von Akku Kostal IN",
        "mode": "link",
        "links": [
            "7cd7d5352b73b823"
        ],
        "x": 1405,
        "y": 3100,
        "wires": []
    },
    {
        "id": "0390efe411885869",
        "type": "influxdb out",
        "z": "b072f5fcdefc7891",
        "influxdb": "e0fd073ca3007348",
        "name": "speichern: Returned total Kostal Kurzzeit [kWh]",
        "measurement": "ReturnedTotalKostal_kWh",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 2120,
        "y": 2880,
        "wires": []
    },
    {
        "id": "4658cae33cef5ebb",
        "type": "link in",
        "z": "b072f5fcdefc7891",
        "name": "Aktuelle Leistung von Kostal QUT",
        "links": [
            "e605caa8f0123b67"
        ],
        "x": 1755,
        "y": 2880,
        "wires": [
            [
                "79cc7c1b82f7b038"
            ]
        ]
    },
    {
        "id": "79cc7c1b82f7b038",
        "type": "calculator",
        "z": "b072f5fcdefc7891",
        "name": "",
        "inputMsgField": "payload",
        "outputMsgField": "payload",
        "operation": "div",
        "constant": "1000",
        "round": false,
        "truncate": false,
        "decimals": 0,
        "decimals2": 0,
        "x": 1850,
        "y": 2880,
        "wires": [
            [
                "0390efe411885869",
                "229d6a233c48954f"
            ]
        ]
    },
    {
        "id": "3a47e36af2542114",
        "type": "link in",
        "z": "b072f5fcdefc7891",
        "name": "Aktuelle Leistung von Kostal QUT",
        "links": [
            "77750b4be41374fd"
        ],
        "x": 1755,
        "y": 2960,
        "wires": [
            [
                "7d03c17bba3b933d"
            ]
        ]
    },
    {
        "id": "7d03c17bba3b933d",
        "type": "calculator",
        "z": "b072f5fcdefc7891",
        "name": "",
        "inputMsgField": "payload",
        "outputMsgField": "payload",
        "operation": "div",
        "constant": "1000",
        "round": false,
        "truncate": false,
        "decimals": 0,
        "decimals2": 0,
        "x": 1850,
        "y": 2960,
        "wires": [
            [
                "263e9bc5845ab0d8",
                "8b80ff9b9c64ba5f"
            ]
        ]
    },
    {
        "id": "263e9bc5845ab0d8",
        "type": "influxdb out",
        "z": "b072f5fcdefc7891",
        "influxdb": "e0fd073ca3007348",
        "name": "speichern: Total Verbrauch im Haus Kostal Kurzzeit [kWh]",
        "measurement": "TotalVerbrauchHausKostal_kWh",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 2150,
        "y": 2960,
        "wires": []
    },
    {
        "id": "5e27082897c38ba5",
        "type": "link in",
        "z": "b072f5fcdefc7891",
        "name": "Aktuelle Leistung von Kostal QUT",
        "links": [
            "2f9f8d6fecd1b9ed"
        ],
        "x": 1755,
        "y": 3040,
        "wires": [
            [
                "3f2dccf31edba61c"
            ]
        ]
    },
    {
        "id": "3f2dccf31edba61c",
        "type": "calculator",
        "z": "b072f5fcdefc7891",
        "name": "",
        "inputMsgField": "payload",
        "outputMsgField": "payload",
        "operation": "div",
        "constant": "1000",
        "round": false,
        "truncate": false,
        "decimals": 0,
        "decimals2": 0,
        "x": 1850,
        "y": 3040,
        "wires": [
            [
                "7b97f29a7ad261d9",
                "77c13d4fd2119e38"
            ]
        ]
    },
    {
        "id": "7b97f29a7ad261d9",
        "type": "influxdb out",
        "z": "b072f5fcdefc7891",
        "influxdb": "e0fd073ca3007348",
        "name": "speichern: Total Verbrauch von PV Kostal Kurzzeit [kWh]",
        "measurement": "TotalVerbrauchPVKostal_kWh",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 2150,
        "y": 3040,
        "wires": []
    },
    {
        "id": "a475da4e65c2a03f",
        "type": "link in",
        "z": "b072f5fcdefc7891",
        "name": "Aktuelle Leistung von Kostal QUT",
        "links": [
            "179428cc63236fdb"
        ],
        "x": 1755,
        "y": 3120,
        "wires": [
            [
                "7e579344eeddbefb"
            ]
        ]
    },
    {
        "id": "7e579344eeddbefb",
        "type": "calculator",
        "z": "b072f5fcdefc7891",
        "name": "",
        "inputMsgField": "payload",
        "outputMsgField": "payload",
        "operation": "div",
        "constant": "1000",
        "round": false,
        "truncate": false,
        "decimals": 0,
        "decimals2": 0,
        "x": 1850,
        "y": 3120,
        "wires": [
            [
                "cdd63d35a8697dcf",
                "72035bcc6e769403"
            ]
        ]
    },
    {
        "id": "cdd63d35a8697dcf",
        "type": "influxdb out",
        "z": "b072f5fcdefc7891",
        "influxdb": "e0fd073ca3007348",
        "name": "speichern: Total Verbrauch von Netz Kostal Kurzzeit [kWh]",
        "measurement": "TotalVerbrauchNetzKostal_kWh",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 2150,
        "y": 3120,
        "wires": []
    },
    {
        "id": "a97f79a28dad24ed",
        "type": "link out",
        "z": "b072f5fcdefc7891",
        "name": "Aktuelle Spannung IN",
        "mode": "link",
        "links": [
            "ad11041f8690e42b"
        ],
        "x": 555,
        "y": 880,
        "wires": []
    },
    {
        "id": "72035bcc6e769403",
        "type": "change",
        "z": "b072f5fcdefc7891",
        "name": "setze g_NetzbezugTotal",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "g_NetzbezugTotal",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2050,
        "y": 3160,
        "wires": [
            []
        ]
    },
    {
        "id": "229d6a233c48954f",
        "type": "change",
        "z": "b072f5fcdefc7891",
        "name": "setze g_ReturnedTotalKostal",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "g_ReturnedTotalKostal",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2060,
        "y": 2920,
        "wires": [
            []
        ]
    },
    {
        "id": "8b80ff9b9c64ba5f",
        "type": "change",
        "z": "b072f5fcdefc7891",
        "name": "setze g_VerbauchImHausTotalKostal",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "g_VerbauchImHausTotalKostal",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2090,
        "y": 3000,
        "wires": [
            []
        ]
    },
    {
        "id": "77c13d4fd2119e38",
        "type": "change",
        "z": "b072f5fcdefc7891",
        "name": "setze g_VerbauchVonPVTotalKostal",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "g_VerbauchVonPVTotalKostal",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2090,
        "y": 3080,
        "wires": [
            []
        ]
    },
    {
        "id": "7cd7d5352b73b823",
        "type": "link in",
        "z": "b072f5fcdefc7891",
        "name": "Aktuelle Leistung von Kostal QUT",
        "links": [
            "78bb5e4f21063c9a"
        ],
        "x": 1755,
        "y": 3200,
        "wires": [
            [
                "c9d1389901335b2a"
            ]
        ]
    },
    {
        "id": "c9d1389901335b2a",
        "type": "calculator",
        "z": "b072f5fcdefc7891",
        "name": "",
        "inputMsgField": "payload",
        "outputMsgField": "payload",
        "operation": "div",
        "constant": "1000",
        "round": false,
        "truncate": false,
        "decimals": 0,
        "decimals2": 0,
        "x": 1850,
        "y": 3200,
        "wires": [
            [
                "bf75f4473d3de167",
                "50c6b046b5392008"
            ]
        ]
    },
    {
        "id": "bf75f4473d3de167",
        "type": "influxdb out",
        "z": "b072f5fcdefc7891",
        "influxdb": "e0fd073ca3007348",
        "name": "speichern: Total Verbrauch von Akku Kostal Kurzzeit [kWh]",
        "measurement": "TotalVerbrauchAkkuKostal_kWh",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 2160,
        "y": 3200,
        "wires": []
    },
    {
        "id": "50c6b046b5392008",
        "type": "change",
        "z": "b072f5fcdefc7891",
        "name": "setze g_AkkubezugTotal",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "g_AkkubezugTotal",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2050,
        "y": 3240,
        "wires": [
            []
        ]
    },
    {
        "id": "09ea758c1ec1bd35",
        "type": "link in",
        "z": "b072f5fcdefc7891",
        "name": "Panelleistung Kostal QUT",
        "links": [
            "0b9c673ff3c9bd02"
        ],
        "x": 1755,
        "y": 2740,
        "wires": [
            [
                "619cda375bbac1aa"
            ]
        ]
    },
    {
        "id": "c290db3fcfeebf7a",
        "type": "influxdb out",
        "z": "b072f5fcdefc7891",
        "influxdb": "e0fd073ca3007348",
        "name": "speichern: Leistung Panele Kostal [W]",
        "measurement": "LeistungPaneleKostal_W",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 2210,
        "y": 2740,
        "wires": []
    },
    {
        "id": "bf8fc07984c736da",
        "type": "link in",
        "z": "b072f5fcdefc7891",
        "name": "Netzleistung Kostal QUT",
        "links": [
            "96c33d44bfb9a54e"
        ],
        "x": 1755,
        "y": 2700,
        "wires": [
            [
                "4634752f8188b1d9"
            ]
        ]
    },
    {
        "id": "e040e7c5999891df",
        "type": "influxdb out",
        "z": "b072f5fcdefc7891",
        "influxdb": "e0fd073ca3007348",
        "name": "speichern: VerbrauchAusNetz Kostal [W]",
        "measurement": "VerbrauchNetzLeistungKostal_W",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 2220,
        "y": 2700,
        "wires": []
    },
    {
        "id": "dbbdea74218a4139",
        "type": "link in",
        "z": "b072f5fcdefc7891",
        "name": "PV Verbrauch Kostal QUT",
        "links": [
            "b64f6583cc907f17"
        ],
        "x": 1755,
        "y": 2660,
        "wires": [
            [
                "cae45f2180e477f6"
            ]
        ]
    },
    {
        "id": "5e09efe692900e67",
        "type": "influxdb out",
        "z": "b072f5fcdefc7891",
        "influxdb": "e0fd073ca3007348",
        "name": "speichern: PV Verbrauch Kostal [W]",
        "measurement": "VerbrauchVonPVKostal_W",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 2200,
        "y": 2660,
        "wires": []
    },
    {
        "id": "cae45f2180e477f6",
        "type": "delay",
        "z": "b072f5fcdefc7891",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "20",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": true,
        "outputs": 1,
        "x": 1910,
        "y": 2660,
        "wires": [
            [
                "5e09efe692900e67"
            ]
        ]
    },
    {
        "id": "619cda375bbac1aa",
        "type": "delay",
        "z": "b072f5fcdefc7891",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "20",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": true,
        "outputs": 1,
        "x": 1910,
        "y": 2740,
        "wires": [
            [
                "c290db3fcfeebf7a",
                "180b51f81b37086d"
            ]
        ]
    },
    {
        "id": "4634752f8188b1d9",
        "type": "delay",
        "z": "b072f5fcdefc7891",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "20",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": true,
        "outputs": 1,
        "x": 1910,
        "y": 2700,
        "wires": [
            [
                "e040e7c5999891df"
            ]
        ]
    },
    {
        "id": "5b2d11597c12927a",
        "type": "inject",
        "z": "b072f5fcdefc7891",
        "name": "Total Panelleistung [Wh]",
        "props": [
            {
                "p": "payload.fc",
                "v": "3",
                "vt": "str"
            },
            {
                "p": "payload.address",
                "v": "1056",
                "vt": "str"
            },
            {
                "p": "payload.quantity",
                "v": "2",
                "vt": "str"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "600",
        "crontab": "",
        "once": true,
        "onceDelay": "7",
        "topic": "GesamtPanelleistung_[Wh]_Kostal",
        "x": 230,
        "y": 3300,
        "wires": [
            [
                "587d8aa699fab572"
            ]
        ]
    },
    {
        "id": "c82f9c3ba7e70859",
        "type": "link out",
        "z": "b072f5fcdefc7891",
        "name": "Total Panelleistung Wh Kostal IN",
        "mode": "link",
        "links": [
            "a07db472d29b5193"
        ],
        "x": 1365,
        "y": 3120,
        "wires": []
    },
    {
        "id": "a07db472d29b5193",
        "type": "link in",
        "z": "b072f5fcdefc7891",
        "name": "Total Panelleistung Wh von Kostal QUT",
        "links": [
            "c82f9c3ba7e70859"
        ],
        "x": 1755,
        "y": 3280,
        "wires": [
            [
                "dc2003940262c92d"
            ]
        ]
    },
    {
        "id": "dc2003940262c92d",
        "type": "calculator",
        "z": "b072f5fcdefc7891",
        "name": "",
        "inputMsgField": "payload",
        "outputMsgField": "payload",
        "operation": "div",
        "constant": "1000",
        "round": false,
        "truncate": false,
        "decimals": 0,
        "decimals2": 0,
        "x": 1850,
        "y": 3280,
        "wires": [
            [
                "6077c4ae850508e9",
                "240cd557e26185cc"
            ]
        ]
    },
    {
        "id": "6077c4ae850508e9",
        "type": "influxdb out",
        "z": "b072f5fcdefc7891",
        "influxdb": "e0fd073ca3007348",
        "name": "speichern: Total lPanelleistung Kostal kWh Kurzzeit [kWh]",
        "measurement": "TotalPanelleistungKostal_kWh",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 2150,
        "y": 3280,
        "wires": []
    },
    {
        "id": "240cd557e26185cc",
        "type": "change",
        "z": "b072f5fcdefc7891",
        "name": "setze g_PanelleistungKostal_Wh",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "g_PanelleistungKostal_Wh",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2080,
        "y": 3320,
        "wires": [
            []
        ]
    },
    {
        "id": "89635e9dcc3f8a0a",
        "type": "inject",
        "z": "b072f5fcdefc7891",
        "name": "Aktive Leistung [W]",
        "props": [
            {
                "p": "payload.fc",
                "v": "4",
                "vt": "str"
            },
            {
                "p": "payload.address",
                "v": "1013",
                "vt": "str"
            },
            {
                "p": "payload.quantity",
                "v": "2",
                "vt": "str"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "3",
        "crontab": "",
        "once": true,
        "onceDelay": "3",
        "topic": "ActivPower_[W]_3EM",
        "x": 240,
        "y": 3400,
        "wires": [
            [
                "b4bc139aa0b6361e"
            ]
        ]
    },
    {
        "id": "b4bc139aa0b6361e",
        "type": "modbus-flex-getter",
        "z": "b072f5fcdefc7891",
        "name": "Modbus 3EM",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "logIOActivities": false,
        "server": "90b0a0152422db96",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 490,
        "y": 3460,
        "wires": [
            [],
            [
                "55a4b2613ac902b4"
            ]
        ]
    },
    {
        "id": "55a4b2613ac902b4",
        "type": "buffer-parser",
        "z": "b072f5fcdefc7891",
        "name": "",
        "data": "payload.buffer",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "floatle",
                "name": "item1",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "swap16",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "keyvalue",
        "resultTypeType": "return",
        "multipleResult": false,
        "fanOutMultipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 670,
        "y": 3460,
        "wires": [
            [
                "fa070fc01156d469"
            ]
        ]
    },
    {
        "id": "fa070fc01156d469",
        "type": "change",
        "z": "b072f5fcdefc7891",
        "name": "zu Payload schieben",
        "rules": [
            {
                "t": "move",
                "p": "payload.item1",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 860,
        "y": 3460,
        "wires": [
            [
                "210f14f34cca89f2"
            ]
        ]
    },
    {
        "id": "210f14f34cca89f2",
        "type": "function",
        "z": "b072f5fcdefc7891",
        "name": "Runden",
        "func": "const nL_Bereich = msg.payload;\nmsg.payload = Math.round(nL_Bereich * 100) / 100;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 3460,
        "wires": [
            [
                "108539ad5a06588d"
            ]
        ]
    },
    {
        "id": "bb784d2baed236a5",
        "type": "inject",
        "z": "b072f5fcdefc7891",
        "name": "Stromstärke [A]",
        "props": [
            {
                "p": "payload.fc",
                "v": "4",
                "vt": "str"
            },
            {
                "p": "payload.address",
                "v": "1011",
                "vt": "str"
            },
            {
                "p": "payload.quantity",
                "v": "2",
                "vt": "str"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "2",
        "crontab": "",
        "once": true,
        "onceDelay": "7",
        "topic": "TotalCurrent_[A]_3EM",
        "x": 250,
        "y": 3440,
        "wires": [
            [
                "b4bc139aa0b6361e"
            ]
        ]
    },
    {
        "id": "75277dd261e4e7f2",
        "type": "inject",
        "z": "b072f5fcdefc7891",
        "name": "Totale Leistung [Wh]",
        "props": [
            {
                "p": "payload.fc",
                "v": "4",
                "vt": "str"
            },
            {
                "p": "payload.address",
                "v": "1162",
                "vt": "str"
            },
            {
                "p": "payload.quantity",
                "v": "2",
                "vt": "str"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "15",
        "crontab": "",
        "once": true,
        "onceDelay": "7",
        "topic": "TotalActivPower_[Wh]_3EM",
        "x": 240,
        "y": 3480,
        "wires": [
            [
                "b4bc139aa0b6361e"
            ]
        ]
    },
    {
        "id": "bc2a828c3d2084b1",
        "type": "inject",
        "z": "b072f5fcdefc7891",
        "name": "TotalerReturned Leistung [Wh]",
        "props": [
            {
                "p": "payload.fc",
                "v": "4",
                "vt": "str"
            },
            {
                "p": "payload.address",
                "v": "1164",
                "vt": "str"
            },
            {
                "p": "payload.quantity",
                "v": "2",
                "vt": "str"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "15",
        "crontab": "",
        "once": true,
        "onceDelay": "7",
        "topic": "TotalReturnedPower_[Wh]_3EM",
        "x": 210,
        "y": 3520,
        "wires": [
            [
                "b4bc139aa0b6361e"
            ]
        ]
    },
    {
        "id": "108539ad5a06588d",
        "type": "switch",
        "z": "b072f5fcdefc7891",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "ActivPower_[W]_3EM",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "TotalCurrent_[A]_3EM",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "TotalActivPower_[Wh]_3EM",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "TotalReturnedPower_[Wh]_3EM",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 1170,
        "y": 3460,
        "wires": [
            [
                "2e30cf1be8e06cb1"
            ],
            [
                "0b6d07c8b5d4301e"
            ],
            [
                "25561b0cb1b46842"
            ],
            [
                "c56b65b903f263bb"
            ]
        ]
    },
    {
        "id": "2e30cf1be8e06cb1",
        "type": "link out",
        "z": "b072f5fcdefc7891",
        "name": "Aktive Leistung 3EM IN",
        "mode": "link",
        "links": [
            "6661d04fc154873b"
        ],
        "x": 1295,
        "y": 3400,
        "wires": []
    },
    {
        "id": "0b6d07c8b5d4301e",
        "type": "link out",
        "z": "b072f5fcdefc7891",
        "name": "Stromstärke 3EM IN",
        "mode": "link",
        "links": [
            "a966c2cee371b044"
        ],
        "x": 1295,
        "y": 3440,
        "wires": []
    },
    {
        "id": "25561b0cb1b46842",
        "type": "link out",
        "z": "b072f5fcdefc7891",
        "name": "Totale Leistung 3EM IN",
        "mode": "link",
        "links": [
            "7a9f4356e9ddd18f"
        ],
        "x": 1295,
        "y": 3480,
        "wires": []
    },
    {
        "id": "c56b65b903f263bb",
        "type": "link out",
        "z": "b072f5fcdefc7891",
        "name": "Total returned Leistung 3EM IN",
        "mode": "link",
        "links": [
            "2fd217395dad43a0"
        ],
        "x": 1295,
        "y": 3520,
        "wires": []
    },
    {
        "id": "6661d04fc154873b",
        "type": "link in",
        "z": "b072f5fcdefc7891",
        "name": "Aktuelle Leistung von 3EM QUT",
        "links": [
            "2e30cf1be8e06cb1"
        ],
        "x": 525,
        "y": 480,
        "wires": [
            [
                "04bbab0a02bc15b5"
            ]
        ]
    },
    {
        "id": "7a9f4356e9ddd18f",
        "type": "link in",
        "z": "b072f5fcdefc7891",
        "name": "Totale Leistung von 3EM QUT",
        "links": [
            "25561b0cb1b46842"
        ],
        "x": 465,
        "y": 60,
        "wires": [
            [
                "82edc7642e7d3972"
            ]
        ]
    },
    {
        "id": "2fd217395dad43a0",
        "type": "link in",
        "z": "b072f5fcdefc7891",
        "name": "Totale returned Leistung von 3EM QUT",
        "links": [
            "c56b65b903f263bb"
        ],
        "x": 465,
        "y": 180,
        "wires": [
            [
                "4e11af10e6b52fd8"
            ]
        ]
    },
    {
        "id": "a966c2cee371b044",
        "type": "link in",
        "z": "b072f5fcdefc7891",
        "name": "Stromstärke von 3EM QUT",
        "links": [
            "0b6d07c8b5d4301e"
        ],
        "x": 505,
        "y": 360,
        "wires": [
            [
                "ca8d4678f7153a25",
                "dd67c6fe4e9a8514"
            ]
        ]
    },
    {
        "id": "604c4751220cebe6",
        "type": "debug",
        "z": "b072f5fcdefc7891",
        "name": "debug 3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 1300,
        "wires": []
    },
    {
        "id": "645ffe1747411d16",
        "type": "switch",
        "z": "b072f5fcdefc7891",
        "name": "UNDEF ausfiltern",
        "property": "payload.properties.packData.maxTemp",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 770,
        "y": 1300,
        "wires": [
            [
                "604c4751220cebe6"
            ]
        ]
    },
    {
        "id": "d4e07e6de5ce15b8",
        "type": "ui_digital_display",
        "z": "b072f5fcdefc7891",
        "name": "Delta Verbrauch",
        "group": "cb76b6e892fe5709",
        "order": 14,
        "width": 2,
        "height": 1,
        "digits": "6",
        "decimals": "0",
        "x": 1400,
        "y": 500,
        "wires": []
    },
    {
        "id": "b67d2516085237e6",
        "type": "ui_widget_thermometer",
        "z": "b072f5fcdefc7891",
        "group": "734b3edda0b2df2b",
        "order": 5,
        "width": 3,
        "height": 4,
        "name": "Temperatur ShellyPlug",
        "title": "ShellyPlug",
        "numColor": 3,
        "colorTop": "#c01c28",
        "colorMiddle": "#8bc34a",
        "colorBottom": "#f6d32d",
        "unit": "°C",
        "scale": "small",
        "minTemp": 0,
        "maxTemp": "70",
        "minTempMoreThanMaxTemp": "1",
        "numberOfDecimals": "0",
        "showPercentage": "0",
        "currentTempFontSize": "1.2",
        "x": 680,
        "y": 920,
        "wires": []
    },
    {
        "id": "8374e03c406da573",
        "type": "change",
        "z": "b072f5fcdefc7891",
        "name": "User aktion unterdrücken",
        "rules": [
            {
                "t": "set",
                "p": "enable",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1470,
        "y": 280,
        "wires": [
            [
                "bdb765de88e93da1"
            ]
        ]
    },
    {
        "id": "bdb765de88e93da1",
        "type": "ui_multistate_switch",
        "z": "b072f5fcdefc7891",
        "name": "Induktion",
        "group": "cb76b6e892fe5709",
        "order": 10,
        "width": 0,
        "height": 0,
        "label": "",
        "stateField": "payload",
        "enableField": "enable",
        "passthroughField": "passthrough",
        "inputMsgField": "inputmsg",
        "rounded": true,
        "useThemeColors": false,
        "hideSelectedLabel": false,
        "multilineLabel": false,
        "passThrough": "change",
        "inputMsg": "all",
        "userInput": "disabled",
        "options": [
            {
                "label": "Induktion",
                "value": "true",
                "valueType": "bool",
                "color": "#ffff80"
            },
            {
                "label": "Induktion",
                "value": "false",
                "valueType": "bool",
                "color": "#ff8000"
            },
            {
                "label": "Keine Funktion",
                "value": "aus",
                "valueType": "str",
                "color": "#c0c0c0"
            }
        ],
        "topic": "",
        "x": 1680,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "22d7ef72b9522048",
        "type": "link out",
        "z": "b072f5fcdefc7891",
        "name": "PackData IN",
        "mode": "link",
        "links": [
            "7abe677adeea1e2c"
        ],
        "x": 655,
        "y": 1380,
        "wires": []
    },
    {
        "id": "7abe677adeea1e2c",
        "type": "link in",
        "z": "b072f5fcdefc7891",
        "name": "PackData OUT",
        "links": [
            "22d7ef72b9522048"
        ],
        "x": 195,
        "y": 4060,
        "wires": [
            [
                "1b97a66fdd972a6e",
                "4cf303fc3c25d5e6",
                "d055712d40c16090",
                "c69976144080f406",
                "355cd428a7a0a310",
                "7a2dcc6719d19314",
                "c9ec79b26da5e0f9"
            ]
        ]
    },
    {
        "id": "d4133a07c0ed9b56",
        "type": "debug",
        "z": "b072f5fcdefc7891",
        "name": "Temperatur PowerPack",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 990,
        "y": 3740,
        "wires": []
    },
    {
        "id": "1b97a66fdd972a6e",
        "type": "function",
        "z": "b072f5fcdefc7891",
        "name": "TempArray zerlegen",
        "func": "let nA_PackData = new Array();\nlet lenght;\nvar sn, temp, msg1, msg2, msg3;\n\nfor (var i = 0; i < msg.payload.packData.length; i++) {\n  //lenght = nA_Leistung.push(msg.payload.packData[i].socLevel)\n  temp = (msg.payload.packData[i].maxTemp)\n  sn = (msg.payload.packData[i].sn);\n  temp = (temp/10)-273.15;\n  if (!isNaN(temp)) {\n    if (sn == \"AO4HLC9LDR03046\") {\n      msg1 = { payload: temp , topic: sn };\n    } else if (sn == \"AO4HLFXLGL07865\") {\n      msg2 = { payload: temp , topic: sn };\n    } else if (sn == \"AO4HLDDLEG02498\") {\n      msg3 = { payload: temp , topic: sn };\n    }\n  }\n}\n\nreturn [msg1, msg2, msg3];",
        "outputs": 3,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 3720,
        "wires": [
            [
                "8ae5bd1a2c500106"
            ],
            [
                "56e61b4a9740bca4"
            ],
            [
                "f12e7a531364b282"
            ]
        ]
    },
    {
        "id": "4cf303fc3c25d5e6",
        "type": "function",
        "z": "b072f5fcdefc7891",
        "name": "SocArray zerlegen",
        "func": "let nA_PackData = new Array();\nlet lenght;\nvar sn, soc, msg1, msg2, msg3\n\nfor (var i = 0; i < msg.payload.packData.length; i++) {\n  soc = (msg.payload.packData[i].socLevel);\n  sn = (msg.payload.packData[i].sn);\n  if (!isNaN(soc)) {\n    if (sn == \"AO4HLC9LDR03046\") {\n      msg1 = { payload: soc , topic: sn };\n    } else if (sn == \"AO4HLFXLGL07865\") {\n      msg2 = { payload: soc , topic: sn };\n    } else if (sn == \"AO4HLDDLEG02498\") {\n      msg3 = { payload: soc , topic: sn };\n    }\n  }\n}\n\nreturn [msg1, msg2, msg3];",
        "outputs": 3,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 3860,
        "wires": [
            [
                "12ff6e89f72fe029"
            ],
            [
                "ea5ecb89b738b535"
            ],
            [
                "5724d5ed4d7cfbf7"
            ]
        ]
    },
    {
        "id": "35742889027da601",
        "type": "debug",
        "z": "b072f5fcdefc7891",
        "name": "SOC",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 3860,
        "wires": []
    },
    {
        "id": "8ae5bd1a2c500106",
        "type": "switch",
        "z": "b072f5fcdefc7891",
        "name": "UNDEF ausfiltern",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 630,
        "y": 3680,
        "wires": [
            [
                "d4133a07c0ed9b56",
                "5f19abfce87b54a2",
                "29dbd3cf34c8e272"
            ]
        ]
    },
    {
        "id": "56e61b4a9740bca4",
        "type": "switch",
        "z": "b072f5fcdefc7891",
        "name": "UNDEF ausfiltern",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 630,
        "y": 3720,
        "wires": [
            [
                "d4133a07c0ed9b56",
                "5f19abfce87b54a2",
                "e3103fd62e923af8"
            ]
        ]
    },
    {
        "id": "f12e7a531364b282",
        "type": "switch",
        "z": "b072f5fcdefc7891",
        "name": "UNDEF ausfiltern",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 630,
        "y": 3760,
        "wires": [
            [
                "d4133a07c0ed9b56",
                "5f19abfce87b54a2",
                "3967c8ebab8e2cd5"
            ]
        ]
    },
    {
        "id": "12ff6e89f72fe029",
        "type": "switch",
        "z": "b072f5fcdefc7891",
        "name": "UNDEF ausfiltern",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 630,
        "y": 3820,
        "wires": [
            [
                "35742889027da601",
                "82b319f0293bf31c"
            ]
        ]
    },
    {
        "id": "ea5ecb89b738b535",
        "type": "switch",
        "z": "b072f5fcdefc7891",
        "name": "UNDEF ausfiltern",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 630,
        "y": 3860,
        "wires": [
            [
                "35742889027da601",
                "26ba39e723340b55"
            ]
        ]
    },
    {
        "id": "5724d5ed4d7cfbf7",
        "type": "switch",
        "z": "b072f5fcdefc7891",
        "name": "UNDEF ausfiltern",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 630,
        "y": 3900,
        "wires": [
            [
                "35742889027da601",
                "7e9a3d1554a79779"
            ]
        ]
    },
    {
        "id": "d055712d40c16090",
        "type": "function",
        "z": "b072f5fcdefc7891",
        "name": "PowerArray zerlegen",
        "func": "let nA_PackData = new Array();\nlet lenght;\nvar sn, power, msg1, msg2, msg3\n\nfor (var i = 0; i < msg.payload.packData.length; i++) {\n  power = (msg.payload.packData[i].power);\n  sn = (msg.payload.packData[i].sn);\n  if (!isNaN(power)) {\n    if (sn == \"AO4HLC9LDR03046\") {\n      msg1 = { payload: power , topic: sn};\n    } else if (sn == \"AO4HLFXLGL07865\") {\n      msg2 = { payload: power , topic: sn };\n    } else if (sn == \"AO4HLDDLEG02498\") {\n      msg3 = { payload: power , topic: sn };\n    }\n  }\n}\n\nreturn [msg1, msg2, msg3];",
        "outputs": 3,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 4000,
        "wires": [
            [
                "3fe4dd8566d8a2fe"
            ],
            [
                "553f8d507824357c"
            ],
            [
                "f1f815c039f1669b"
            ]
        ]
    },
    {
        "id": "3fe4dd8566d8a2fe",
        "type": "switch",
        "z": "b072f5fcdefc7891",
        "name": "UNDEF ausfiltern",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 630,
        "y": 3960,
        "wires": [
            [
                "2839d8c655308fa6",
                "6c1c10357374d67c"
            ]
        ]
    },
    {
        "id": "553f8d507824357c",
        "type": "switch",
        "z": "b072f5fcdefc7891",
        "name": "UNDEF ausfiltern",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 630,
        "y": 4000,
        "wires": [
            [
                "2839d8c655308fa6",
                "247dff8dfe5880e0"
            ]
        ]
    },
    {
        "id": "f1f815c039f1669b",
        "type": "switch",
        "z": "b072f5fcdefc7891",
        "name": "UNDEF ausfiltern",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 630,
        "y": 4040,
        "wires": [
            [
                "2839d8c655308fa6",
                "ed5ad2af480fd673"
            ]
        ]
    },
    {
        "id": "2839d8c655308fa6",
        "type": "debug",
        "z": "b072f5fcdefc7891",
        "name": "Abgabeleistung AkkuPack",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 990,
        "y": 4000,
        "wires": []
    },
    {
        "id": "c69976144080f406",
        "type": "function",
        "z": "b072f5fcdefc7891",
        "name": "totalVolArray zerlegen",
        "func": "let nA_PackData = new Array();\nlet lenght;\nvar sn, totalVol, msg1, msg2, msg3\n\nfor (var i = 0; i < msg.payload.packData.length; i++) {\n  totalVol = (msg.payload.packData[i].totalVol);\n  sn = (msg.payload.packData[i].sn);\n  totalVol = totalVol/100;\n  if (!isNaN(totalVol)) {\n    if (sn == \"AO4HLC9LDR03046\") {\n      msg1 = { payload: totalVol , topic: sn };\n    } else if (sn == \"AO4HLFXLGL07865\") {\n      msg2 = { payload: totalVol , topic: sn };\n    } else if (sn == \"AO4HLDDLEG02498\") {\n      msg3 = { payload: totalVol , topic: sn };\n    }\n  }\n}\n\nreturn [msg1, msg2, msg3];",
        "outputs": 3,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 4140,
        "wires": [
            [
                "04ba490a4e9d2371"
            ],
            [
                "351098ed334e8da0"
            ],
            [
                "06d091f29a1e40a7"
            ]
        ]
    },
    {
        "id": "04ba490a4e9d2371",
        "type": "switch",
        "z": "b072f5fcdefc7891",
        "name": "UNDEF ausfiltern",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 630,
        "y": 4100,
        "wires": [
            [
                "7c03764d4b38b2d7",
                "d9c4b84eae5faba5"
            ]
        ]
    },
    {
        "id": "351098ed334e8da0",
        "type": "switch",
        "z": "b072f5fcdefc7891",
        "name": "UNDEF ausfiltern",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 630,
        "y": 4140,
        "wires": [
            [
                "7c03764d4b38b2d7",
                "92c799cab8cc34e1"
            ]
        ]
    },
    {
        "id": "06d091f29a1e40a7",
        "type": "switch",
        "z": "b072f5fcdefc7891",
        "name": "UNDEF ausfiltern",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 630,
        "y": 4180,
        "wires": [
            [
                "7c03764d4b38b2d7",
                "85aefccae055d94a"
            ]
        ]
    },
    {
        "id": "7c03764d4b38b2d7",
        "type": "debug",
        "z": "b072f5fcdefc7891",
        "name": "Spannung Powerpack",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 4140,
        "wires": []
    },
    {
        "id": "355cd428a7a0a310",
        "type": "function",
        "z": "b072f5fcdefc7891",
        "name": "maxVolArray zerlegen",
        "func": "let nA_PackData = new Array();\nlet lenght;\nvar sn, maxVol, msg1, msg2, msg3\n\nfor (var i = 0; i < msg.payload.packData.length; i++) {\n  maxVol = (msg.payload.packData[i].maxVol);\n  maxVol = maxVol/100;\n  sn = (msg.payload.packData[i].sn);\n  if (!isNaN(maxVol)) {\n    if (sn == \"AO4HLC9LDR03046\") {\n      msg1 = { payload: maxVol , topic: sn };\n    } else if (sn == \"AO4HLFXLGL07865\") {\n      msg2 = { payload: maxVol , topic: sn };\n    } else if (sn == \"AO4HLDDLEG02498\") {\n      msg3 = { payload: maxVol , topic: sn };\n    }\n  }\n}\n\nreturn [msg1, msg2, msg3];",
        "outputs": 3,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 4280,
        "wires": [
            [
                "41d499d061788863"
            ],
            [
                "c74ffd1bcd675092"
            ],
            [
                "affe1df57c8c4abe"
            ]
        ]
    },
    {
        "id": "41d499d061788863",
        "type": "switch",
        "z": "b072f5fcdefc7891",
        "name": "UNDEF ausfiltern",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 630,
        "y": 4240,
        "wires": [
            [
                "648a7687f5b66015",
                "c95e305b6690a2b7"
            ]
        ]
    },
    {
        "id": "c74ffd1bcd675092",
        "type": "switch",
        "z": "b072f5fcdefc7891",
        "name": "UNDEF ausfiltern",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 630,
        "y": 4280,
        "wires": [
            [
                "648a7687f5b66015",
                "de03e53ad1b2366a"
            ]
        ]
    },
    {
        "id": "affe1df57c8c4abe",
        "type": "switch",
        "z": "b072f5fcdefc7891",
        "name": "UNDEF ausfiltern",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 630,
        "y": 4320,
        "wires": [
            [
                "648a7687f5b66015",
                "1b45b5c1af7b0ee4"
            ]
        ]
    },
    {
        "id": "648a7687f5b66015",
        "type": "debug",
        "z": "b072f5fcdefc7891",
        "name": "Max Zellspannung PowerPack",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1010,
        "y": 4280,
        "wires": []
    },
    {
        "id": "5f19abfce87b54a2",
        "type": "ui_widget_thermometer",
        "z": "b072f5fcdefc7891",
        "group": "734b3edda0b2df2b",
        "order": 4,
        "width": 3,
        "height": 4,
        "name": "Akkutemperatur",
        "title": "Akkutemperatur",
        "numColor": 3,
        "colorTop": "#c01c28",
        "colorMiddle": "#8bc34a",
        "colorBottom": "#1c71d8",
        "unit": "°C",
        "scale": "small",
        "minTemp": "-5",
        "maxTemp": "50",
        "minTempMoreThanMaxTemp": "1",
        "numberOfDecimals": "0",
        "showPercentage": "0",
        "currentTempFontSize": "1.2",
        "x": 960,
        "y": 3700,
        "wires": []
    },
    {
        "id": "7a2dcc6719d19314",
        "type": "function",
        "z": "b072f5fcdefc7891",
        "name": "minVolArray zerlegen",
        "func": "let nA_PackData = new Array();\nlet lenght;\nvar sn, minVol, msg1, msg2, msg3\n\nfor (var i = 0; i < msg.payload.packData.length; i++) {\n  minVol = (msg.payload.packData[i].minVol);\n  minVol = minVol/100;\n  sn = (msg.payload.packData[i].sn);\n  if (!isNaN(minVol)) {\n    if (sn == \"AO4HLC9LDR03046\") {\n      msg1 = { payload: minVol , topic: sn };\n    } else if (sn == \"AO4HLFXLGL07865\") {\n      msg2 = { payload: minVol , topic: sn };\n    } else if (sn == \"AO4HLDDLEG02498\") {\n      msg3 = { payload: minVol , topic: sn };\n    }\n  }\n}\n\nreturn [msg1, msg2, msg3];",
        "outputs": 3,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 4420,
        "wires": [
            [
                "bca8b5b4fa73ec59"
            ],
            [
                "6f7172dcf2dc7085"
            ],
            [
                "d5921bc438378dcf"
            ]
        ]
    },
    {
        "id": "bca8b5b4fa73ec59",
        "type": "switch",
        "z": "b072f5fcdefc7891",
        "name": "UNDEF ausfiltern",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 630,
        "y": 4380,
        "wires": [
            [
                "a06a70be0278b790",
                "f237f8aa86f4d990"
            ]
        ]
    },
    {
        "id": "6f7172dcf2dc7085",
        "type": "switch",
        "z": "b072f5fcdefc7891",
        "name": "UNDEF ausfiltern",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 630,
        "y": 4420,
        "wires": [
            [
                "a06a70be0278b790",
                "d2bc9d1a24d4194a"
            ]
        ]
    },
    {
        "id": "d5921bc438378dcf",
        "type": "switch",
        "z": "b072f5fcdefc7891",
        "name": "UNDEF ausfiltern",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 630,
        "y": 4460,
        "wires": [
            [
                "a06a70be0278b790"
            ]
        ]
    },
    {
        "id": "a06a70be0278b790",
        "type": "debug",
        "z": "b072f5fcdefc7891",
        "name": "Min Zellspannung PowerPack",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1010,
        "y": 4420,
        "wires": []
    },
    {
        "id": "112a1b12835bfbd2",
        "type": "change",
        "z": "b072f5fcdefc7891",
        "name": "setze g_DeltaVerbrauch",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "g_DeltaVerbrauch",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1430,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "3fa0ce9fea211e31",
        "type": "switch",
        "z": "b072f5fcdefc7891",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 890,
        "y": 340,
        "wires": [
            [
                "1d6f89d02afcb33f"
            ],
            [
                "1d6f89d02afcb33f",
                "485cdc69a0d4ec2b"
            ]
        ]
    },
    {
        "id": "485cdc69a0d4ec2b",
        "type": "delay",
        "z": "b072f5fcdefc7891",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1080,
        "y": 340,
        "wires": [
            [
                "d7fee6213b28aa5a"
            ]
        ]
    },
    {
        "id": "d7fee6213b28aa5a",
        "type": "change",
        "z": "b072f5fcdefc7891",
        "name": "payload auf aus",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "aus",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1260,
        "y": 340,
        "wires": [
            [
                "8374e03c406da573"
            ]
        ]
    },
    {
        "id": "82b319f0293bf31c",
        "type": "link out",
        "z": "b072f5fcdefc7891",
        "name": "SoC1 IN",
        "mode": "link",
        "links": [
            "7975dc712a73d4fa"
        ],
        "x": 815,
        "y": 3820,
        "wires": []
    },
    {
        "id": "26ba39e723340b55",
        "type": "link out",
        "z": "b072f5fcdefc7891",
        "name": "SoC2 IN",
        "mode": "link",
        "links": [
            "8b757a8d523f2081"
        ],
        "x": 775,
        "y": 3860,
        "wires": []
    },
    {
        "id": "7e9a3d1554a79779",
        "type": "link out",
        "z": "b072f5fcdefc7891",
        "name": "SoC3 IN",
        "mode": "link",
        "links": [
            "beba94de388bce5f"
        ],
        "x": 815,
        "y": 3900,
        "wires": []
    },
    {
        "id": "6c1c10357374d67c",
        "type": "link out",
        "z": "b072f5fcdefc7891",
        "name": "Akku Leistungsabgabe1 IN",
        "mode": "link",
        "links": [
            "0e037ea63d303388"
        ],
        "x": 805,
        "y": 3960,
        "wires": []
    },
    {
        "id": "247dff8dfe5880e0",
        "type": "link out",
        "z": "b072f5fcdefc7891",
        "name": "Akku Leistungsabgabe2 IN",
        "mode": "link",
        "links": [
            "c20d7f3bb8fdc63d",
            "6763395fc63ea131"
        ],
        "x": 775,
        "y": 4000,
        "wires": []
    },
    {
        "id": "ed5ad2af480fd673",
        "type": "link out",
        "z": "b072f5fcdefc7891",
        "name": "Akku Leistungsabgabe3 IN",
        "mode": "link",
        "links": [
            "78d71f7e31781452",
            "2b136653d13b0f6e"
        ],
        "x": 805,
        "y": 4040,
        "wires": []
    },
    {
        "id": "d9c4b84eae5faba5",
        "type": "link out",
        "z": "b072f5fcdefc7891",
        "name": "Total Spannung1 IN",
        "mode": "link",
        "links": [
            "f7383c0bcbf1e3a6"
        ],
        "x": 805,
        "y": 4100,
        "wires": []
    },
    {
        "id": "92c799cab8cc34e1",
        "type": "link out",
        "z": "b072f5fcdefc7891",
        "name": "Total Spannung2 IN",
        "mode": "link",
        "links": [
            "7d4d1117a9b85539"
        ],
        "x": 775,
        "y": 4140,
        "wires": []
    },
    {
        "id": "85aefccae055d94a",
        "type": "link out",
        "z": "b072f5fcdefc7891",
        "name": "Total Spannung3 IN",
        "mode": "link",
        "links": [
            "be673d50e32e0b2d"
        ],
        "x": 805,
        "y": 4180,
        "wires": []
    },
    {
        "id": "c95e305b6690a2b7",
        "type": "link out",
        "z": "b072f5fcdefc7891",
        "name": "Max Zellspannung1 IN",
        "mode": "link",
        "links": [
            "3374ddcaf2f8349b"
        ],
        "x": 805,
        "y": 4240,
        "wires": []
    },
    {
        "id": "de03e53ad1b2366a",
        "type": "link out",
        "z": "b072f5fcdefc7891",
        "name": "Max Zellspannung2 IN",
        "mode": "link",
        "links": [
            "b0e21c4387e6dceb"
        ],
        "x": 765,
        "y": 4280,
        "wires": []
    },
    {
        "id": "1b45b5c1af7b0ee4",
        "type": "link out",
        "z": "b072f5fcdefc7891",
        "name": "Max Zellspannung3 IN",
        "mode": "link",
        "links": [
            "b92258d14cf975cf"
        ],
        "x": 805,
        "y": 4320,
        "wires": []
    },
    {
        "id": "f237f8aa86f4d990",
        "type": "link out",
        "z": "b072f5fcdefc7891",
        "name": "Min Zellspannung1 IN",
        "mode": "link",
        "links": [
            "3e684b6595da4e6b"
        ],
        "x": 805,
        "y": 4380,
        "wires": []
    },
    {
        "id": "d2bc9d1a24d4194a",
        "type": "link out",
        "z": "b072f5fcdefc7891",
        "name": "Min Zellspannung2 IN",
        "mode": "link",
        "links": [
            "f9a2a75033a4e954"
        ],
        "x": 765,
        "y": 4420,
        "wires": []
    },
    {
        "id": "98293003e42e17ef",
        "type": "link out",
        "z": "b072f5fcdefc7891",
        "name": "Min Zellspannung3 IN",
        "mode": "link",
        "links": [
            "04028000ea114d4a"
        ],
        "x": 805,
        "y": 4460,
        "wires": []
    },
    {
        "id": "c9ec79b26da5e0f9",
        "type": "function",
        "z": "b072f5fcdefc7891",
        "name": "statusArray zerlegen",
        "func": "let nA_PackData = new Array();\nlet lenght;\nvar sn, state, msg1, msg2, msg3\n\nfor (var i = 0; i < msg.payload.packData.length; i++) {\n  state = (msg.payload.packData[i].state);\n  sn = (msg.payload.packData[i].sn);\n  if (!isNaN(state)) {\n    if (sn == \"AO4HLC9LDR03046\") {\n      msg1 = { payload: state , topic: sn };\n    } else if (sn == \"AO4HLFXLGL07865\") {\n      msg2 = { payload: state , topic: sn };\n    } else if (sn == \"AO4HLDDLEG02498\") {\n      msg3 = { payload: state , topic: sn };\n    }\n  }\n}\n\nreturn [msg1, msg2, msg3];",
        "outputs": 3,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 4560,
        "wires": [
            [
                "444257183112dd98"
            ],
            [
                "6debe149def3c9b6"
            ],
            [
                "2a6feb258f773bf5"
            ]
        ]
    },
    {
        "id": "444257183112dd98",
        "type": "switch",
        "z": "b072f5fcdefc7891",
        "name": "UNDEF ausfiltern",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 630,
        "y": 4520,
        "wires": [
            [
                "d98870d4a85283d6",
                "c1fed98e81dd7d9c"
            ]
        ]
    },
    {
        "id": "6debe149def3c9b6",
        "type": "switch",
        "z": "b072f5fcdefc7891",
        "name": "UNDEF ausfiltern",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 630,
        "y": 4560,
        "wires": [
            [
                "d98870d4a85283d6",
                "687e7b5b0b2144a1"
            ]
        ]
    },
    {
        "id": "2a6feb258f773bf5",
        "type": "switch",
        "z": "b072f5fcdefc7891",
        "name": "UNDEF ausfiltern",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 630,
        "y": 4600,
        "wires": [
            [
                "d98870d4a85283d6"
            ]
        ]
    },
    {
        "id": "d98870d4a85283d6",
        "type": "debug",
        "z": "b072f5fcdefc7891",
        "name": "Status PowerPack",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 970,
        "y": 4560,
        "wires": []
    },
    {
        "id": "c1fed98e81dd7d9c",
        "type": "link out",
        "z": "b072f5fcdefc7891",
        "name": "Status1 IN",
        "mode": "link",
        "links": [],
        "x": 805,
        "y": 4520,
        "wires": []
    },
    {
        "id": "687e7b5b0b2144a1",
        "type": "link out",
        "z": "b072f5fcdefc7891",
        "name": "Status2 IN",
        "mode": "link",
        "links": [],
        "x": 765,
        "y": 4560,
        "wires": []
    },
    {
        "id": "91e473d3c326d48d",
        "type": "link out",
        "z": "b072f5fcdefc7891",
        "name": "Status3 IN",
        "mode": "link",
        "links": [],
        "x": 805,
        "y": 4600,
        "wires": []
    },
    {
        "id": "29dbd3cf34c8e272",
        "type": "link out",
        "z": "b072f5fcdefc7891",
        "name": "Temperatur1 IN",
        "mode": "link",
        "links": [
            "bdcbfbebf39dd000"
        ],
        "x": 815,
        "y": 3660,
        "wires": []
    },
    {
        "id": "e3103fd62e923af8",
        "type": "link out",
        "z": "b072f5fcdefc7891",
        "name": "Temperatur2 IN",
        "mode": "link",
        "links": [
            "bab5f8fe30aeae33"
        ],
        "x": 775,
        "y": 3720,
        "wires": []
    },
    {
        "id": "3967c8ebab8e2cd5",
        "type": "link out",
        "z": "b072f5fcdefc7891",
        "name": "Temperatur3 IN",
        "mode": "link",
        "links": [
            "a0f0c6b04ca9567c"
        ],
        "x": 815,
        "y": 3780,
        "wires": []
    },
    {
        "id": "180b51f81b37086d",
        "type": "switch",
        "z": "b072f5fcdefc7891",
        "name": "Lestung grösser 50 Watt",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "50",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 2170,
        "y": 2780,
        "wires": [
            [
                "e4a694bbdf3ec8b1"
            ],
            [
                "e66c41c14e0f0ac9"
            ]
        ]
    },
    {
        "id": "e4a694bbdf3ec8b1",
        "type": "change",
        "z": "b072f5fcdefc7891",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "g_KostalAktiv",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2430,
        "y": 2780,
        "wires": [
            []
        ]
    },
    {
        "id": "e66c41c14e0f0ac9",
        "type": "change",
        "z": "b072f5fcdefc7891",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "g_KostalAktiv",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2430,
        "y": 2820,
        "wires": [
            []
        ]
    },
    {
        "id": "fe397251a646feb0",
        "type": "debug",
        "z": "3e64b09dc7e19a92",
        "name": "zu SF",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 390,
        "y": 140,
        "wires": []
    },
    {
        "id": "6fea220bf218c24b",
        "type": "mqtt out",
        "z": "3e64b09dc7e19a92",
        "name": "Connect",
        "topic": "",
        "qos": "",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "d23ecbe757e22be2",
        "x": 355,
        "y": 100,
        "wires": [],
        "l": false
    },
    {
        "id": "159ecb42ef682ebc",
        "type": "debug",
        "z": "3e64b09dc7e19a92",
        "name": "Daten",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 390,
        "y": 180,
        "wires": []
    },
    {
        "id": "5a185de77e5ad01a",
        "type": "function",
        "z": "3e64b09dc7e19a92",
        "name": "Regelung",
        "func": "var nL_Anforderung, msg1, msg2, msg3, debugg, b_DoIt;\n\nlet nL_MomentanerVerbrauch = msg.payload;\nlet nL_LeistungInsHaus     = global.get('g_LeistungInsHaus');\nlet nL_SolarPanelOutput    = global.get('g_SolarInputPower');\nlet nL_AlreadySetRequest   = global.get('g_AlreadySetRequest');\nlet nL_BatteryLevel        = global.get('g_ElectricLevel');\nlet bL_Automatic           = global.get('g_Automatik');\nlet bL_SolarLimit          = global.get('g_SolarLimitierung');\nlet nL_BatteryLevelLimit   = global.get('g_BatteryLevelLimit');\nlet nL_Abgabelimit         = global.get('g_Abgabelimit'); \nlet bL_CloudLimit          = global.get('g_CloudLimit');\nlet bL_Induktion           = global.get('g_Induktion');\nlet iL_Spreading           = 4;\nlet nL_LimitToZero         = 20;\n\n//----Alignment---------------------------------\n\nif (isNaN(nL_BatteryLevel)) {\n    //nL_BatteryLevel = 5;\n}\n\nif (isNaN(nL_BatteryLevelLimit)) {\n    nL_BatteryLevelLimit = 15;\n}\n\nif (bL_CloudLimit == true) {\n    nL_BatteryLevelLimit = 20;\n    // 20% Akkuentladelimit wenn längere Zeit bewölkt\n}\n\nif (isNaN(nL_LeistungInsHaus)) {\n    nL_LeistungInsHaus = 0;\n}\n\nif (isNaN(nL_Abgabelimit)) {\n    nL_Abgabelimit = -1;\n}\n\nif (isNaN(nL_AlreadySetRequest)) {\n    nL_AlreadySetRequest = -1;\n}\n\n//----Calculation--------------------------------\n// (nL_MomentanerVerbrauch > -1000 && nL_LeistungInsHaus >= 0)\nif (bL_Automatic == true)  {\n\n    nL_Anforderung = Math.round(nL_LeistungInsHaus + nL_MomentanerVerbrauch);\n    debugg = 'Standard Regelung';\n\n    if (bL_SolarLimit == true && nL_Anforderung > nL_SolarPanelOutput) {\n        nL_Anforderung = nL_SolarPanelOutput;\n        debugg = 'auf Solareingangsleistung gekappt';\n    }\n    \n    if (nL_BatteryLevel <= nL_BatteryLevelLimit || nL_Anforderung < 100 ) {\n        if (nL_Anforderung < 0) {\n            nL_Anforderung = 0;\n        } else if (nL_Anforderung > 75) {\n            nL_Anforderung = 90;\n            debugg = 'Anforderung auf 90';\n        } else if ((nL_Anforderung <= 75) && (nL_Anforderung > 45)) {\n            nL_Anforderung = 60;\n            debugg = 'Anforderung = 60';\n        } else if ((nL_Anforderung <= 45) && (nL_Anforderung > nL_LimitToZero)) {\n            nL_Anforderung = 30;\n            debugg = 'Anforderung = 30';\n        } \n\n        if (nL_Anforderung < nL_LimitToZero || nL_BatteryLevel <= nL_BatteryLevelLimit){\n            nL_Anforderung = 0;\n            debugg = 'Level Powerpack zu niedrig oder ZeroLimit erreicht';\n        } \n    }\n\n    if (nL_Anforderung > 800) {\n        nL_Anforderung = 800;\n        debugg = 'auf 800 gekappt';\n    }\n\n    if (nL_Anforderung > nL_Abgabelimit && bL_SolarLimit == false && nL_Abgabelimit != -1) {\n        nL_Anforderung = nL_Abgabelimit;\n    }\n\n    //Spreizung berücksichtigen\n    if (nL_Anforderung > nL_AlreadySetRequest) {\n        if ((nL_Anforderung - iL_Spreading) > nL_AlreadySetRequest || nL_AlreadySetRequest > -1) {\n            b_DoIt = true;\n        } else {\n            b_DoIt = false;\n        }\n    } else {\n        if ((nL_Anforderung + iL_Spreading) < nL_AlreadySetRequest) {\n            b_DoIt = true;\n        } else {\n            b_DoIt = false;\n        }\n    }\n\n    if (bL_Induktion == true && nL_Anforderung < nL_AlreadySetRequest) {\n        b_DoIt = true;\n    }\n\n} else {\n    debugg = 'Regelschaltung nicht aktiv';\n}\n\n//----Output------------------------------------\n\n//Debug Channel\nmsg3 = { payload: debugg };\n//Daten Channel\nmsg2 = { payload: { \"insHaus\": nL_LeistungInsHaus, \"Verbrauch\": nL_MomentanerVerbrauch, \"Soll/Anforderung\": nL_Anforderung, \"SetRequest\": nL_AlreadySetRequest,\"Akku\": nL_BatteryLevel, \"Panele\": nL_SolarPanelOutput, \"nichtUnterdrückt\": b_DoIt, \"Automatk\": bL_Automatic, \"auf Solar begrenzt\": bL_SolarLimit } };\n\nif ((nL_Anforderung != nL_AlreadySetRequest) && b_DoIt == true && bL_Automatic == true) {\n    msg1 = { payload: { \"deviceId\": \"B5V650U2\", \"timestamp\": Date.now(), \"properties\": { \"outputLimit\": nL_Anforderung } } };\n    \n    if (nL_AlreadySetRequest == 0){\n        node.send(msg1);\n        setTimeout(function () {\n            node.send(msg1);\n        }, 5000);\n        setTimeout(function () {\n            node.send(msg1);\n        }, 10000);\n    }\n    global.set('g_AlreadySetRequest', nL_Anforderung);\n}\n\nreturn [msg1, msg2, msg3];",
        "outputs": 3,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 180,
        "wires": [
            [
                "fe397251a646feb0",
                "6fea220bf218c24b"
            ],
            [
                "159ecb42ef682ebc"
            ],
            [
                "4a12606c44b1af93"
            ]
        ]
    },
    {
        "id": "4a12606c44b1af93",
        "type": "debug",
        "z": "3e64b09dc7e19a92",
        "name": "debugging",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 410,
        "y": 220,
        "wires": []
    },
    {
        "id": "93bc37f7e166f1b6",
        "type": "inject",
        "z": "3e64b09dc7e19a92",
        "name": "Daten reseten",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.5",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 180,
        "y": 960,
        "wires": [
            [
                "70963a9a788696bc"
            ]
        ]
    },
    {
        "id": "70963a9a788696bc",
        "type": "function",
        "z": "3e64b09dc7e19a92",
        "name": "Alle Flow Vatiablen reseten",
        "func": "global.set('g_AlreadySetRequest', -1);\nglobal.set('g_Shelly', true); \n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 960,
        "wires": [
            [
                "79f4d3c839c54127",
                "14e29d746620b1a6",
                "8ac8f33c7698736f",
                "0bde999925e0bf9b",
                "62cd2ba175e4fc0c"
            ]
        ]
    },
    {
        "id": "0884fdc81958c468",
        "type": "link in",
        "z": "3e64b09dc7e19a92",
        "name": "link in 1",
        "links": [
            "5403fe28eeccd8a2"
        ],
        "x": 85,
        "y": 180,
        "wires": [
            [
                "5a185de77e5ad01a"
            ]
        ]
    },
    {
        "id": "c6dd763723512d5b",
        "type": "link out",
        "z": "3e64b09dc7e19a92",
        "name": "link out 2",
        "mode": "link",
        "links": [
            "801e406656b50148"
        ],
        "x": 515,
        "y": 820,
        "wires": []
    },
    {
        "id": "801e406656b50148",
        "type": "link in",
        "z": "3e64b09dc7e19a92",
        "name": "link in 2",
        "links": [
            "c6dd763723512d5b",
            "5fc64dcf3150b325",
            "9e546167a4149622"
        ],
        "x": 295,
        "y": 60,
        "wires": [
            [
                "6fea220bf218c24b"
            ]
        ]
    },
    {
        "id": "4588d758ca158c41",
        "type": "change",
        "z": "3e64b09dc7e19a92",
        "name": "setze g_Glättung",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "g_Glättung",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 970,
        "y": 980,
        "wires": [
            []
        ]
    },
    {
        "id": "10564dbbda029d64",
        "type": "change",
        "z": "3e64b09dc7e19a92",
        "name": "setze g_Timer",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "g_Timer",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1060,
        "y": 1160,
        "wires": [
            []
        ]
    },
    {
        "id": "267ac1ba08b1a781",
        "type": "ui_slider",
        "z": "3e64b09dc7e19a92",
        "name": "",
        "label": "Eingabe Überlagern",
        "tooltip": "",
        "group": "ec947780658325ac",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "outs": "end",
        "topic": "topic",
        "topicType": "msg",
        "min": 0,
        "max": "600",
        "step": 1,
        "className": "",
        "x": 180,
        "y": 860,
        "wires": [
            [
                "3be0065da751b2c1"
            ]
        ]
    },
    {
        "id": "808b0eda32ee3923",
        "type": "change",
        "z": "3e64b09dc7e19a92",
        "name": "setze g_Automatik",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "g_Automatik",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1030,
        "y": 860,
        "wires": [
            []
        ]
    },
    {
        "id": "a60b49cde866a1b0",
        "type": "change",
        "z": "3e64b09dc7e19a92",
        "name": "setze auf false",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 860,
        "wires": [
            [
                "ae2d05ed1dffe5b1"
            ]
        ]
    },
    {
        "id": "3be0065da751b2c1",
        "type": "function",
        "z": "3e64b09dc7e19a92",
        "name": "Überlagern",
        "func": "let nL_Überlagerung = msg.payload;\nmsg = { payload: { \"deviceId\": \"B\", \"timestamp\": Date.now(), \"properties\": { \"outputLimit\": nL_Überlagerung } } };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 860,
        "wires": [
            [
                "a60b49cde866a1b0",
                "c6dd763723512d5b"
            ]
        ]
    },
    {
        "id": "5b2cb7a531a0ab8e",
        "type": "ping",
        "z": "3e64b09dc7e19a92",
        "protocol": "Automatic",
        "mode": "timed",
        "name": "Kontrolle ob SolarFlow erreichbar",
        "host": "",
        "timer": "1800",
        "inputs": 0,
        "x": 210,
        "y": 500,
        "wires": [
            [
                "32d5859dc42b45bf"
            ]
        ]
    },
    {
        "id": "32d5859dc42b45bf",
        "type": "switch",
        "z": "3e64b09dc7e19a92",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 450,
        "y": 500,
        "wires": [
            [
                "197f5a828d4c1a77",
                "1ff7390143413599"
            ],
            [
                "7154a885f15fb27f"
            ]
        ]
    },
    {
        "id": "7154a885f15fb27f",
        "type": "change",
        "z": "3e64b09dc7e19a92",
        "name": "SolarFlow DNS ok",
        "rules": [
            {
                "t": "set",
                "p": "g_SFready",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "enable",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 690,
        "y": 600,
        "wires": [
            [
                "79eee5ab5d61c9f6"
            ]
        ]
    },
    {
        "id": "7d94eccc7117317f",
        "type": "link in",
        "z": "3e64b09dc7e19a92",
        "name": "Überlagern ein",
        "links": [
            "63d29120416db27b"
        ],
        "x": 265,
        "y": 820,
        "wires": [
            [
                "3be0065da751b2c1"
            ]
        ]
    },
    {
        "id": "d4c8315596f4f920",
        "type": "link in",
        "z": "3e64b09dc7e19a92",
        "name": "Automatik überlagern",
        "links": [
            "40f0537dd35ad50c"
        ],
        "x": 705,
        "y": 820,
        "wires": [
            [
                "ae2d05ed1dffe5b1"
            ]
        ]
    },
    {
        "id": "1ff7390143413599",
        "type": "change",
        "z": "3e64b09dc7e19a92",
        "name": "setze auf false",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "g_SFready",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "enable",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 680,
        "y": 560,
        "wires": [
            [
                "79eee5ab5d61c9f6"
            ]
        ]
    },
    {
        "id": "894c28b2c45efcbd",
        "type": "ui_button",
        "z": "3e64b09dc7e19a92",
        "name": "Shutdown",
        "group": "cb76b6e892fe5709",
        "order": 25,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Shutdown",
        "tooltip": "",
        "color": "",
        "bgcolor": "red",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 140,
        "y": 400,
        "wires": [
            [
                "f6f772016e4ba860"
            ]
        ]
    },
    {
        "id": "f6f772016e4ba860",
        "type": "exec",
        "z": "3e64b09dc7e19a92",
        "command": "sudo poweroff",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": true,
        "oldrc": false,
        "name": "poweroff",
        "x": 300,
        "y": 400,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "f2a3a7f4366b22bd",
        "type": "change",
        "z": "3e64b09dc7e19a92",
        "name": "setze g_SolarLimitierung",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "g_SolarLimitierung",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1110,
        "y": 1280,
        "wires": [
            []
        ]
    },
    {
        "id": "615f2a8f25c5d6eb",
        "type": "switch",
        "z": "3e64b09dc7e19a92",
        "name": "wenn true",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1060,
        "y": 1320,
        "wires": [
            [
                "ff907153ca3a7a51"
            ]
        ]
    },
    {
        "id": "ff907153ca3a7a51",
        "type": "change",
        "z": "3e64b09dc7e19a92",
        "name": "setze auf false",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1220,
        "y": 1320,
        "wires": [
            [
                "c94fca3f0233a47f"
            ]
        ]
    },
    {
        "id": "c94fca3f0233a47f",
        "type": "link out",
        "z": "3e64b09dc7e19a92",
        "d": true,
        "name": "link out 5",
        "mode": "link",
        "links": [
            "a3a58f54ab69022b"
        ],
        "x": 1335,
        "y": 1320,
        "wires": []
    },
    {
        "id": "a3a58f54ab69022b",
        "type": "link in",
        "z": "3e64b09dc7e19a92",
        "name": "Timer input",
        "links": [
            "c94fca3f0233a47f",
            "afcc27bcc24015b3"
        ],
        "x": 745,
        "y": 1140,
        "wires": [
            [
                "d72f06859cf1631d"
            ]
        ]
    },
    {
        "id": "44940dad208a8734",
        "type": "comment",
        "z": "3e64b09dc7e19a92",
        "name": "--- Sonstige Funktionen ---",
        "info": "September 9 Uhr false 16 true",
        "x": 190,
        "y": 340,
        "wires": []
    },
    {
        "id": "2826b329b1bf72cd",
        "type": "switch",
        "z": "3e64b09dc7e19a92",
        "name": "wenn Automatik an",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "regex",
                "v": "If (setze g_Automatik == true)",
                "vt": "str",
                "case": false
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1090,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "9e9daa7f03911855",
        "type": "change",
        "z": "3e64b09dc7e19a92",
        "name": "setze g_Winterbetrieb",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "g_Winterbetrieb",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1080,
        "y": 1200,
        "wires": [
            []
        ]
    },
    {
        "id": "90664065a1b3aead",
        "type": "link in",
        "z": "3e64b09dc7e19a92",
        "name": "Bypass übersteuern",
        "links": [
            "a5a8cffebb34f722",
            "b0d3289379f396fe"
        ],
        "x": 755,
        "y": 1300,
        "wires": [
            [
                "a79ccd3f3fad92f0"
            ]
        ]
    },
    {
        "id": "ac8b38e762b469ba",
        "type": "comment",
        "z": "3e64b09dc7e19a92",
        "name": "--- GUI ---",
        "info": "",
        "x": 140,
        "y": 780,
        "wires": []
    },
    {
        "id": "c8edcd4622f26bb6",
        "type": "link in",
        "z": "3e64b09dc7e19a92",
        "name": "Bypass input",
        "links": [
            "a5a8cffebb34f722",
            "f3cf896fcee21ba2"
        ],
        "x": 755,
        "y": 1340,
        "wires": [
            [
                "a79ccd3f3fad92f0"
            ]
        ]
    },
    {
        "id": "be68fb0d8344f8fc",
        "type": "ping",
        "z": "3e64b09dc7e19a92",
        "protocol": "Automatic",
        "mode": "timed",
        "name": "Kontrolle ob DNS/NAS erreichbar",
        "host": "192.168.1.4",
        "timer": "1800",
        "inputs": 0,
        "x": 210,
        "y": 660,
        "wires": [
            [
                "921889981d93ef99"
            ]
        ]
    },
    {
        "id": "921889981d93ef99",
        "type": "switch",
        "z": "3e64b09dc7e19a92",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 450,
        "y": 660,
        "wires": [
            [
                "bc054892ca1cedfd",
                "5ae0703e6ed0e1db"
            ],
            [
                "b2f05a5044726aec"
            ]
        ]
    },
    {
        "id": "b3803178e948e56e",
        "type": "telegram sender",
        "z": "3e64b09dc7e19a92",
        "name": "Telegram",
        "bot": "",
        "haserroroutput": true,
        "outputs": 2,
        "x": 1600,
        "y": 520,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "197f5a828d4c1a77",
        "type": "change",
        "z": "3e64b09dc7e19a92",
        "name": "setze Payload String SF nicht erreichbar",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Fehlermeldung von Energieserver: SolarFlow nicht erreichbar",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 760,
        "y": 480,
        "wires": [
            [
                "2826b329b1bf72cd",
                "19cfa21fa9f15179"
            ]
        ]
    },
    {
        "id": "bc054892ca1cedfd",
        "type": "change",
        "z": "3e64b09dc7e19a92",
        "name": "setze Payload String DNS NAS nicht erreichbar",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Fehlermeldung von Energieserver: DNS NAS nicht erreichbar",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 740,
        "y": 520,
        "wires": [
            [
                "2826b329b1bf72cd",
                "19cfa21fa9f15179"
            ]
        ]
    },
    {
        "id": "19cfa21fa9f15179",
        "type": "switch",
        "z": "3e64b09dc7e19a92",
        "name": "wenn Ready = true dann weiter",
        "property": "g_SFready",
        "propertyType": "global",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1130,
        "y": 520,
        "wires": [
            [
                "e96f78e7d35d597c"
            ]
        ]
    },
    {
        "id": "e96f78e7d35d597c",
        "type": "change",
        "z": "3e64b09dc7e19a92",
        "name": "setze Payload für Telegram",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "payload.content",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.type",
                "pt": "msg",
                "to": "message",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.chatId",
                "pt": "msg",
                "to": "-1002245995847",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "g_SFready",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1400,
        "y": 520,
        "wires": [
            [
                "b3803178e948e56e"
            ]
        ]
    },
    {
        "id": "59097f5b1c3c8792",
        "type": "change",
        "z": "3e64b09dc7e19a92",
        "name": "setze g_Shelly",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "g_Shelly",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 960,
        "y": 1020,
        "wires": [
            []
        ]
    },
    {
        "id": "79f4d3c839c54127",
        "type": "bool",
        "z": "3e64b09dc7e19a92",
        "name": "bool Invert",
        "outputs": 1,
        "inputField": "payload",
        "outputField": "payload",
        "outputFormat": "bool",
        "handleNull": "null",
        "invert": true,
        "strict": false,
        "x": 670,
        "y": 920,
        "wires": [
            [
                "ae2d05ed1dffe5b1"
            ]
        ]
    },
    {
        "id": "8ac8f33c7698736f",
        "type": "bool",
        "z": "3e64b09dc7e19a92",
        "name": "bool Invert",
        "outputs": 1,
        "inputField": "payload",
        "outputField": "payload",
        "outputFormat": "bool",
        "handleNull": "null",
        "invert": true,
        "strict": false,
        "x": 690,
        "y": 1180,
        "wires": [
            [
                "d72f06859cf1631d",
                "0747ae1748a6c953"
            ]
        ]
    },
    {
        "id": "5ae0703e6ed0e1db",
        "type": "change",
        "z": "3e64b09dc7e19a92",
        "name": "setze auf false",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "g_SFready",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "enable",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 680,
        "y": 640,
        "wires": [
            [
                "9a26e9f7f00ce0c1"
            ]
        ]
    },
    {
        "id": "b2f05a5044726aec",
        "type": "change",
        "z": "3e64b09dc7e19a92",
        "name": "SolarFlow DNS ok",
        "rules": [
            {
                "t": "set",
                "p": "g_SFready",
                "pt": "global",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "enable",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 690,
        "y": 680,
        "wires": [
            [
                "9a26e9f7f00ce0c1"
            ]
        ]
    },
    {
        "id": "a79ccd3f3fad92f0",
        "type": "ui_multistate_switch",
        "z": "3e64b09dc7e19a92",
        "name": "Solarleistung",
        "group": "cb76b6e892fe5709",
        "order": 5,
        "width": 0,
        "height": 0,
        "label": "",
        "stateField": "payload",
        "enableField": "enable",
        "passthroughField": "passthrough",
        "inputMsgField": "inputmsg",
        "rounded": true,
        "useThemeColors": false,
        "hideSelectedLabel": false,
        "multilineLabel": false,
        "passThrough": "change",
        "inputMsg": "all",
        "userInput": "enabled_show",
        "options": [
            {
                "label": "SolarLimit an",
                "value": "true",
                "valueType": "bool",
                "color": "#009933"
            },
            {
                "label": "SolarLimit aus",
                "value": "false",
                "valueType": "bool",
                "color": "#e01b24"
            }
        ],
        "topic": "",
        "x": 870,
        "y": 1320,
        "wires": [
            [
                "f2a3a7f4366b22bd",
                "615f2a8f25c5d6eb"
            ]
        ]
    },
    {
        "id": "d72f06859cf1631d",
        "type": "ui_multistate_switch",
        "z": "3e64b09dc7e19a92",
        "name": "Timer",
        "group": "cb76b6e892fe5709",
        "order": 6,
        "width": 0,
        "height": 0,
        "label": "",
        "stateField": "payload",
        "enableField": "enable",
        "passthroughField": "passthrough",
        "inputMsgField": "inputmsg",
        "rounded": true,
        "useThemeColors": false,
        "hideSelectedLabel": false,
        "multilineLabel": false,
        "passThrough": "change",
        "inputMsg": "all",
        "userInput": "enabled_show",
        "options": [
            {
                "label": "Timer an",
                "value": "true",
                "valueType": "bool",
                "color": "#009933"
            },
            {
                "label": "Timer aus",
                "value": "false",
                "valueType": "bool",
                "color": "#e01b24"
            }
        ],
        "topic": "",
        "x": 850,
        "y": 1160,
        "wires": [
            [
                "10564dbbda029d64"
            ]
        ]
    },
    {
        "id": "0bde999925e0bf9b",
        "type": "ui_multistate_switch",
        "z": "3e64b09dc7e19a92",
        "name": "Glättung",
        "group": "cb76b6e892fe5709",
        "order": 7,
        "width": 0,
        "height": 0,
        "label": "",
        "stateField": "payload",
        "enableField": "enable",
        "passthroughField": "passthrough",
        "inputMsgField": "inputmsg",
        "rounded": true,
        "useThemeColors": false,
        "hideSelectedLabel": false,
        "multilineLabel": false,
        "passThrough": "change",
        "inputMsg": "all",
        "userInput": "enabled_show",
        "options": [
            {
                "label": "Glättung",
                "value": "true",
                "valueType": "bool",
                "color": "#0080ff"
            },
            {
                "label": "Zeitlimit",
                "value": "false",
                "valueType": "bool",
                "color": "#ffc58a"
            }
        ],
        "topic": "",
        "x": 680,
        "y": 980,
        "wires": [
            [
                "4588d758ca158c41"
            ]
        ]
    },
    {
        "id": "ae2d05ed1dffe5b1",
        "type": "ui_multistate_switch",
        "z": "3e64b09dc7e19a92",
        "name": "Automatik",
        "group": "cb76b6e892fe5709",
        "order": 4,
        "width": 0,
        "height": 0,
        "label": "",
        "stateField": "payload",
        "enableField": "enable",
        "passthroughField": "passthrough",
        "inputMsgField": "inputmsg",
        "rounded": true,
        "useThemeColors": false,
        "hideSelectedLabel": false,
        "multilineLabel": false,
        "passThrough": "change",
        "inputMsg": "all",
        "userInput": "enabled_show",
        "options": [
            {
                "label": "Automatik an",
                "value": "true",
                "valueType": "bool",
                "color": "#009933"
            },
            {
                "label": "Auomatik aus",
                "value": "false",
                "valueType": "bool",
                "color": "#e01b24"
            }
        ],
        "topic": "",
        "x": 820,
        "y": 860,
        "wires": [
            [
                "808b0eda32ee3923"
            ]
        ]
    },
    {
        "id": "0747ae1748a6c953",
        "type": "ui_multistate_switch",
        "z": "3e64b09dc7e19a92",
        "name": "Sommer/Winter",
        "group": "cb76b6e892fe5709",
        "order": 3,
        "width": 0,
        "height": 0,
        "label": "",
        "stateField": "payload",
        "enableField": "enable",
        "passthroughField": "passthrough",
        "inputMsgField": "inputmsg",
        "rounded": true,
        "useThemeColors": false,
        "hideSelectedLabel": false,
        "multilineLabel": false,
        "passThrough": "change",
        "inputMsg": "all",
        "userInput": "enabled_show",
        "options": [
            {
                "label": "Sommerbetrieb",
                "value": "false",
                "valueType": "bool",
                "color": "#ffff80"
            },
            {
                "label": "Winterbetrieb",
                "value": "true",
                "valueType": "bool",
                "color": "#0080ff"
            }
        ],
        "topic": "",
        "x": 880,
        "y": 1200,
        "wires": [
            [
                "9e9daa7f03911855"
            ]
        ]
    },
    {
        "id": "79eee5ab5d61c9f6",
        "type": "ui_multistate_switch",
        "z": "3e64b09dc7e19a92",
        "name": "Solarflow",
        "group": "cb76b6e892fe5709",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "",
        "stateField": "payload",
        "enableField": "enable",
        "passthroughField": "passthrough",
        "inputMsgField": "inputmsg",
        "rounded": true,
        "useThemeColors": false,
        "hideSelectedLabel": false,
        "multilineLabel": false,
        "passThrough": "change",
        "inputMsg": "all",
        "userInput": "disabled",
        "options": [
            {
                "label": "SolarFlow ready",
                "value": "true",
                "valueType": "bool",
                "color": "#009933"
            },
            {
                "label": "SolarFlow unklar",
                "value": "false",
                "valueType": "bool",
                "color": "#e01b24"
            }
        ],
        "topic": "",
        "x": 880,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "9a26e9f7f00ce0c1",
        "type": "ui_multistate_switch",
        "z": "3e64b09dc7e19a92",
        "name": "DNS",
        "group": "cb76b6e892fe5709",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "",
        "stateField": "payload",
        "enableField": "enable",
        "passthroughField": "passthrough",
        "inputMsgField": "inputmsg",
        "rounded": true,
        "useThemeColors": false,
        "hideSelectedLabel": false,
        "multilineLabel": false,
        "passThrough": "change",
        "inputMsg": "all",
        "userInput": "disabled",
        "options": [
            {
                "label": "DNS ready",
                "value": "true",
                "valueType": "bool",
                "color": "#009933"
            },
            {
                "label": "DNS unklar",
                "value": "false",
                "valueType": "bool",
                "color": "#e01b24"
            }
        ],
        "topic": "",
        "x": 870,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "62cd2ba175e4fc0c",
        "type": "ui_multistate_switch",
        "z": "3e64b09dc7e19a92",
        "name": "Shelly/Kostal",
        "group": "974caebe33d50b82",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "",
        "stateField": "payload",
        "enableField": "enable",
        "passthroughField": "passthrough",
        "inputMsgField": "inputmsg",
        "rounded": true,
        "useThemeColors": false,
        "hideSelectedLabel": false,
        "multilineLabel": false,
        "passThrough": "change",
        "inputMsg": "all",
        "userInput": "enabled_show",
        "options": [
            {
                "label": "Kostal",
                "value": "true",
                "valueType": "bool",
                "color": "#0080ff"
            },
            {
                "label": "Shelly",
                "value": "false",
                "valueType": "bool",
                "color": "#ffc58a"
            }
        ],
        "topic": "",
        "x": 690,
        "y": 1040,
        "wires": [
            [
                "59097f5b1c3c8792"
            ]
        ]
    },
    {
        "id": "00bc2b4dd8a02f0c",
        "type": "ui_text",
        "z": "b463bd21812ac6b5",
        "group": "cb76b6e892fe5709",
        "order": 15,
        "width": 5,
        "height": 1,
        "name": "",
        "label": "Erzeugte Panel kWh",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1940,
        "y": 520,
        "wires": []
    },
    {
        "id": "6099967ad38da1ad",
        "type": "influxdb in",
        "z": "b463bd21812ac6b5",
        "influxdb": "e0fd073ca3007348",
        "name": "auslesen: Leistung Panele [kWh]",
        "query": "",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "organisation",
        "x": 1080,
        "y": 520,
        "wires": [
            [
                "e1adea217353009e"
            ]
        ]
    },
    {
        "id": "3445256655d39541",
        "type": "calculator",
        "z": "b463bd21812ac6b5",
        "name": "kWh Summieren",
        "inputMsgField": "payload",
        "outputMsgField": "payload",
        "operation": "sum",
        "constant": "",
        "round": true,
        "decimals": "3",
        "x": 1500,
        "y": 520,
        "wires": [
            [
                "5b4036e469e5c424",
                "78132bbb9c6a8afa"
            ]
        ]
    },
    {
        "id": "e1adea217353009e",
        "type": "function",
        "z": "b463bd21812ac6b5",
        "name": "Array zerlegen",
        "func": "let nA_Leistung = new Array();\nlet lenght;\n\nfor (var i = 0; i < msg.payload.length; i++) {\n  lenght = nA_Leistung.push(msg.payload[i].value)\n}\n\nmsg = { payload: nA_Leistung };\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1320,
        "y": 520,
        "wires": [
            [
                "3445256655d39541"
            ]
        ]
    },
    {
        "id": "b7c22027fe137073",
        "type": "function",
        "z": "b463bd21812ac6b5",
        "name": "Query erstellen",
        "func": "const today = new Date();\n\nlet Jahr = today.getFullYear();\nlet Monat = today.getMonth();\nlet Tag = today.getDate();\n\nMonat = Monat + 1\nif (Monat < 10) {\n    Monat = '0' + Monat\n}\n\nif (Tag < 10) {\n    Tag = '0' + Tag\n}\n\nlet Datum = `'` + Jahr + '-' + Monat + '-' + Tag + 'T00:00:00Z' + `'`;\nlet query = `SELECT * FROM \"LeistungPanele_kWh\" where time >= ` + Datum;\n//'2023-08-31T00:00:00Z'\nmsg.query = query;\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 520,
        "wires": [
            [
                "595202ee8a9ae857"
            ]
        ]
    },
    {
        "id": "5b4036e469e5c424",
        "type": "change",
        "z": "b463bd21812ac6b5",
        "name": "setze g_ErzeugteTagesPanelleistung",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "g_ErzeugteTagesPanelleistung",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1770,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "71eff70c62863ec2",
        "type": "cronplus",
        "z": "b463bd21812ac6b5",
        "name": "diverse Tasks ab 23 Uhr 32",
        "outputField": "payload",
        "timeZone": "",
        "storeName": "",
        "commandResponseMsgOutput": "output1",
        "defaultLocation": "",
        "defaultLocationType": "default",
        "outputs": 1,
        "options": [
            {
                "name": "schedule1",
                "topic": "TagesleistungPanel_BKW",
                "payloadType": "global",
                "payload": "g_ErzeugteTagesPanelleistung",
                "expressionType": "cron",
                "expression": "0 32 23 * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            },
            {
                "name": "schedule2",
                "topic": "Netzentnahme_Shelly",
                "payloadType": "global",
                "payload": "g_VerbrauchTotal_kWh",
                "expressionType": "cron",
                "expression": "0 33 23 * * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            },
            {
                "name": "schedule3",
                "topic": "LeistungInsHaus",
                "payloadType": "global",
                "payload": "g_ErzeugteTagesLeistungInsHaus",
                "expressionType": "cron",
                "expression": "0 34 23 * * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            },
            {
                "name": "schedule4",
                "topic": "Netzabgabe",
                "payloadType": "global",
                "payload": "g_Einspeiseleistung",
                "expressionType": "cron",
                "expression": "0 35 23 * * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            },
            {
                "name": "schedule5",
                "topic": "Netzbezug_Kostal",
                "payloadType": "global",
                "payload": "g_TagesNetzbezugKostal",
                "expressionType": "cron",
                "expression": "0 36 23 * * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            },
            {
                "name": "schedule6",
                "topic": "Hausverbrauch_Kostal",
                "payloadType": "global",
                "payload": "g_TagesHausverbrauchKostal",
                "expressionType": "cron",
                "expression": "0 37 23 * * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            },
            {
                "name": "schedule7",
                "topic": "Panelleistung_Kostal",
                "payloadType": "global",
                "payload": "g_TagesPanelleistungKostal_kWh",
                "expressionType": "cron",
                "expression": "0 38 23 * * * * ",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            },
            {
                "name": "schedule8",
                "topic": "Backup",
                "payloadType": "default",
                "payload": "",
                "expressionType": "cron",
                "expression": "0 44 23 * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            },
            {
                "name": "schedule9",
                "topic": "Reset",
                "payloadType": "default",
                "payload": "",
                "expressionType": "cron",
                "expression": "55 59 23 * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            },
            {
                "name": "schedule10",
                "topic": "A1",
                "payloadType": "date",
                "payload": "",
                "expressionType": "cron",
                "expression": "5 0,15,30,45 * * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            },
            {
                "name": "schedule11",
                "topic": "A2",
                "payloadType": "date",
                "payload": "",
                "expressionType": "cron",
                "expression": "12 0,15,30,45 * * * * ",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            },
            {
                "name": "schedule12",
                "topic": "A3",
                "payloadType": "date",
                "payload": "",
                "expressionType": "cron",
                "expression": "19 0,15,30,45 * * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            },
            {
                "name": "schedule13",
                "topic": "A4",
                "payloadType": "date",
                "payload": "",
                "expressionType": "cron",
                "expression": "26 0,15,30,45 * * * * ",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            },
            {
                "name": "schedule14",
                "topic": "Einspeiseleistung",
                "payloadType": "date",
                "payload": "",
                "expressionType": "cron",
                "expression": "0 39 23 * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            },
            {
                "name": "schedule15",
                "topic": "PanelleistungKostal",
                "payloadType": "date",
                "payload": "",
                "expressionType": "cron",
                "expression": "0 40 23 * * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            },
            {
                "name": "schedule16",
                "topic": "PanelleistungBKW",
                "payloadType": "date",
                "payload": "",
                "expressionType": "cron",
                "expression": "0 41 23 * * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            },
            {
                "name": "schedule17",
                "topic": "Netzentnahme",
                "payloadType": "date",
                "payload": "",
                "expressionType": "cron",
                "expression": "0 42 23 * * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            }
        ],
        "x": 160,
        "y": 340,
        "wires": [
            [
                "181b9bea7e2bba01"
            ]
        ]
    },
    {
        "id": "7898434c90c5696a",
        "type": "influxdb out",
        "z": "b463bd21812ac6b5",
        "influxdb": "0e08b360d673d9d4",
        "name": "speichern: Erzeugte Tages Panel Leistung [kWh]",
        "measurement": "ErzeugteTagesPanel_kWh",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 940,
        "y": 60,
        "wires": []
    },
    {
        "id": "19f60130a306d965",
        "type": "comment",
        "z": "b463bd21812ac6b5",
        "name": "--- Tagesaktuelle Leistung Panel ---",
        "info": "",
        "x": 300,
        "y": 520,
        "wires": []
    },
    {
        "id": "b43fb77e5ec3e080",
        "type": "comment",
        "z": "b463bd21812ac6b5",
        "name": "--- Tagesaktuell in LangzeitDB speichern ---",
        "info": "",
        "x": 280,
        "y": 60,
        "wires": []
    },
    {
        "id": "a62913ba1f95dfac",
        "type": "moment",
        "z": "b463bd21812ac6b5",
        "name": "einen Tag zurück",
        "topic": "",
        "input": "",
        "inputType": "msg",
        "inTz": "Europe/Berlin",
        "adjAmount": "1",
        "adjType": "days",
        "adjDir": "subtract",
        "format": "",
        "locale": "de-DE",
        "output": "payload",
        "outputType": "msg",
        "outTz": "Europe/Berlin",
        "x": 810,
        "y": 840,
        "wires": [
            [
                "affbc31583ff316e"
            ]
        ]
    },
    {
        "id": "5869043444722b13",
        "type": "influxdb out",
        "z": "b463bd21812ac6b5",
        "influxdb": "0e08b360d673d9d4",
        "name": "speichern: Verbrauch Total Langzeit [kWh]",
        "measurement": "VerbrauchTotalLangzeit_kWh",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 920,
        "y": 100,
        "wires": []
    },
    {
        "id": "affbc31583ff316e",
        "type": "function",
        "z": "b463bd21812ac6b5",
        "name": "Query erstellen",
        "func": "const today = new Date(msg.payload);\n\nlet Jahr = today.getFullYear();\nlet Monat = today.getMonth();\nlet Tag = today.getDate();\n\nMonat = Monat + 1\nif (Monat < 10) {\n    Monat = '0' + Monat\n}\n\nif (Tag < 10) {\n    Tag = '0' + Tag\n}\n\nlet Datum = `'` + Jahr + '-' + Monat + '-' + Tag + 'T00:00:00Z' + `'`;\nlet query = `SELECT * FROM \"VerbrauchTotalLangzeit_kWh\" where time >= ` + Datum;\nmsg.query = query\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 840,
        "wires": [
            [
                "d7c42dbc69a54f3e"
            ]
        ]
    },
    {
        "id": "fdea7db9ea87f9f7",
        "type": "calculator",
        "z": "b463bd21812ac6b5",
        "name": "",
        "inputMsgField": "payload",
        "outputMsgField": "payload",
        "operation": "max",
        "constant": "",
        "round": false,
        "decimals": 0,
        "x": 2700,
        "y": 840,
        "wires": [
            [
                "d6cae2a1c650be06"
            ]
        ]
    },
    {
        "id": "d7c42dbc69a54f3e",
        "type": "influxdb in",
        "z": "b463bd21812ac6b5",
        "influxdb": "0e08b360d673d9d4",
        "name": "auslesen: Verbrauch Langzeit",
        "query": "",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "organisation",
        "x": 1230,
        "y": 840,
        "wires": [
            [
                "ddf4c3733947bf28"
            ]
        ]
    },
    {
        "id": "ddf4c3733947bf28",
        "type": "function",
        "z": "b463bd21812ac6b5",
        "name": "Array zerlegen",
        "func": "let nA_Leistung = new Array();\nlet lenght;\n\nfor (var i = 0; i < msg.payload.length; i++) {\n  lenght = nA_Leistung.push(msg.payload[i].value)\n}\n\nmsg = { payload: nA_Leistung };\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1460,
        "y": 840,
        "wires": [
            [
                "838a4d36e5c929d7"
            ]
        ]
    },
    {
        "id": "d6cae2a1c650be06",
        "type": "function",
        "z": "b463bd21812ac6b5",
        "name": "Tagesleistung berechnen",
        "func": "var ergebniss\nlet nL_VerbrauchTotal = global.get('g_VerbrauchTotal_kWh');\nergebniss = nL_VerbrauchTotal - msg.payload\nergebniss = Math.round(ergebniss * 1000) / 1000;;\nmsg = { payload: ergebniss };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2890,
        "y": 840,
        "wires": [
            [
                "f2e390eace5ec9d6"
            ]
        ]
    },
    {
        "id": "5dda332857f71e2f",
        "type": "ui_text",
        "z": "b463bd21812ac6b5",
        "group": "cb76b6e892fe5709",
        "order": 21,
        "width": 5,
        "height": 1,
        "name": "",
        "label": "Netzbezug kWh",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 3320,
        "y": 820,
        "wires": []
    },
    {
        "id": "d78291046ac91140",
        "type": "comment",
        "z": "b463bd21812ac6b5",
        "name": "--- Tagesaktuelle Leistung ins Haus ---",
        "info": "",
        "x": 290,
        "y": 620,
        "wires": []
    },
    {
        "id": "ab19bf7de4784bbe",
        "type": "comment",
        "z": "b463bd21812ac6b5",
        "name": "--- Tagesaktueller Verbrauch von EON ---",
        "info": "",
        "x": 280,
        "y": 840,
        "wires": []
    },
    {
        "id": "595202ee8a9ae857",
        "type": "change",
        "z": "b463bd21812ac6b5",
        "name": "",
        "rules": [
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 820,
        "y": 520,
        "wires": [
            [
                "6099967ad38da1ad"
            ]
        ]
    },
    {
        "id": "717d4cbdadcdcab7",
        "type": "change",
        "z": "b463bd21812ac6b5",
        "name": "setze diverse Variablen zu 0",
        "rules": [
            {
                "t": "set",
                "p": "g_Temp",
                "pt": "global",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "g_Einspeiseleistung",
                "pt": "global",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "g_Temp2",
                "pt": "global",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "g_ReturnedTotal_kWh",
                "pt": "global",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "g_Temp3",
                "pt": "global",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "g_ErzeugteTagesLeistungInsHaus",
                "pt": "global",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "g_ErzeugteTagesPanelleistung",
                "pt": "global",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "g_TagesNetzbezugKostal",
                "pt": "global",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "g_TagesReturnedKostal",
                "pt": "global",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "g_TagesHausverbrauchKostal",
                "pt": "global",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "g_TagesPVverbrauchKostal",
                "pt": "global",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "g_TagesAkkuverbrauchKostal",
                "pt": "global",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "g_Darstellung",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 660,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "e4123db945a4d403",
        "type": "comment",
        "z": "b463bd21812ac6b5",
        "name": "--- Tagesaktuelle Eingespeiste Leistung  ---",
        "info": "",
        "x": 280,
        "y": 720,
        "wires": []
    },
    {
        "id": "33c7711a89e7c1c9",
        "type": "function",
        "z": "b463bd21812ac6b5",
        "name": "Query erstellen",
        "func": "const today = new Date();\n\nlet Jahr = today.getFullYear();\nlet Monat = today.getMonth();\nlet Tag = today.getDate();\n\nMonat = Monat + 1\nif (Monat < 10) {\n    Monat = '0' + Monat\n}\n\nif (Tag < 10) {\n    Tag = '0' + Tag\n}\n\nlet Datum = `'` + Jahr + '-' + Monat + '-' + Tag + 'T00:00:00Z' + `'`;\nlet query = `SELECT * FROM \"EingespeisteLeistung_Watt\" where time >= ` + Datum;\n//'2023-08-31T00:00:00Z'\nmsg.query = query;\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 720,
        "wires": [
            [
                "2c721316ac7d1945"
            ]
        ]
    },
    {
        "id": "2c721316ac7d1945",
        "type": "change",
        "z": "b463bd21812ac6b5",
        "name": "",
        "rules": [
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1000,
        "y": 720,
        "wires": [
            [
                "0cbae37cc87d7fcc"
            ]
        ]
    },
    {
        "id": "0cbae37cc87d7fcc",
        "type": "influxdb in",
        "z": "b463bd21812ac6b5",
        "influxdb": "e0fd073ca3007348",
        "name": "auslesen: Eingespeiste Leistung [Watt]",
        "query": "",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "organisation",
        "x": 1280,
        "y": 720,
        "wires": [
            [
                "340eed6ede6145c8"
            ]
        ]
    },
    {
        "id": "bdc5e36de887d89a",
        "type": "change",
        "z": "b463bd21812ac6b5",
        "name": "setze g_Einspeiseleistung",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "g_Einspeiseleistung",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1910,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "13fec0ffed9d7e4c",
        "type": "ui_text",
        "z": "b463bd21812ac6b5",
        "group": "cb76b6e892fe5709",
        "order": 19,
        "width": 5,
        "height": 1,
        "name": "",
        "label": "Netzabgabe kWh",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#5e5c64",
        "x": 2090,
        "y": 720,
        "wires": []
    },
    {
        "id": "ec3296a8ca16288f",
        "type": "influxdb out",
        "z": "b463bd21812ac6b5",
        "influxdb": "0e08b360d673d9d4",
        "name": "speichern: Eingespeiste Leistung Langzeit [kWh]",
        "measurement": "EingespeisteLeistungLangzeit_kWh",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 940,
        "y": 180,
        "wires": []
    },
    {
        "id": "d6dfc9f29db56a99",
        "type": "change",
        "z": "b463bd21812ac6b5",
        "name": "setze g_ErzeugteTagesLeistungInsHaus",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "g_ErzeugteTagesLeistungInsHaus",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1780,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "f925fabce6abb920",
        "type": "ui_text",
        "z": "b463bd21812ac6b5",
        "group": "cb76b6e892fe5709",
        "order": 17,
        "width": 5,
        "height": 1,
        "name": "",
        "label": "Abg. ins Haus kWh",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1910,
        "y": 620,
        "wires": []
    },
    {
        "id": "7a55a0417c9eef5a",
        "type": "influxdb out",
        "z": "b463bd21812ac6b5",
        "influxdb": "0e08b360d673d9d4",
        "name": "speichern: Tagesleistung ins Haus Langzeit [kWh]",
        "measurement": "TagesleistungInsHausLangzeit_kWh",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 950,
        "y": 140,
        "wires": []
    },
    {
        "id": "510b6f9709dd79e4",
        "type": "exec",
        "z": "b463bd21812ac6b5",
        "command": "sudo mount -t nfs -o soft 192.168..:/export/Backup_Energie /mnt/Backup_Energieserver",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "NFS mounten",
        "x": 620,
        "y": 360,
        "wires": [
            [],
            [],
            [
                "0c332e9219cf7fe3",
                "e091816dd98f94c2"
            ]
        ]
    },
    {
        "id": "90f9f6eb85a19f32",
        "type": "exec",
        "z": "b463bd21812ac6b5",
        "command": "sudo umount /mnt/Backup_Energieserver",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "umount NFS",
        "x": 1810,
        "y": 360,
        "wires": [
            [],
            [],
            [
                "07881f42ce64dfd6"
            ]
        ]
    },
    {
        "id": "0c332e9219cf7fe3",
        "type": "delay",
        "z": "b463bd21812ac6b5",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 840,
        "y": 360,
        "wires": [
            [
                "f6e2f292566c9433"
            ]
        ]
    },
    {
        "id": "520e3088fe3a5a85",
        "type": "delay",
        "z": "b463bd21812ac6b5",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1620,
        "y": 360,
        "wires": [
            [
                "90f9f6eb85a19f32"
            ]
        ]
    },
    {
        "id": "07881f42ce64dfd6",
        "type": "switch",
        "z": "b463bd21812ac6b5",
        "name": "",
        "property": "payload.code",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "gt",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "-1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 1970,
        "y": 420,
        "wires": [
            [
                "065f053a9c6bd022"
            ],
            [
                "6b26040b4c25dc53"
            ],
            [
                "369ae6aab2b45aca"
            ]
        ]
    },
    {
        "id": "065f053a9c6bd022",
        "type": "change",
        "z": "b463bd21812ac6b5",
        "name": "setze true",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "enable",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2130,
        "y": 380,
        "wires": [
            [
                "429c4a62d5dacbb1"
            ]
        ]
    },
    {
        "id": "369ae6aab2b45aca",
        "type": "change",
        "z": "b463bd21812ac6b5",
        "name": "setze läuft",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "läuft",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2130,
        "y": 460,
        "wires": [
            [
                "429c4a62d5dacbb1"
            ]
        ]
    },
    {
        "id": "146fe17b16c9dc54",
        "type": "function",
        "z": "b463bd21812ac6b5",
        "name": "Query erstellen",
        "func": "const today = new Date();\n\nlet Jahr = today.getFullYear();\nlet Monat = today.getMonth();\nlet Tag = today.getDate();\n\nMonat = Monat + 1\nif (Monat < 10) {\n    Monat = '0' + Monat\n}\n\nif (Tag < 10) {\n    Tag = '0' + Tag\n}\n\nlet Datum = `'` + Jahr + '-' + Monat + '-' + Tag + 'T00:00:00Z' + `'`;\nlet query = `SELECT * FROM \"LeistungInsHaus_Watt\" where time >= ` + Datum;\n//'2023-08-31T00:00:00Z'\nmsg.query = query;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 620,
        "wires": [
            [
                "9b152b3a2d9c0730"
            ]
        ]
    },
    {
        "id": "9b152b3a2d9c0730",
        "type": "change",
        "z": "b463bd21812ac6b5",
        "name": "",
        "rules": [
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 820,
        "y": 620,
        "wires": [
            [
                "05c1224b2d582738"
            ]
        ]
    },
    {
        "id": "05c1224b2d582738",
        "type": "influxdb in",
        "z": "b463bd21812ac6b5",
        "influxdb": "e0fd073ca3007348",
        "name": "auslesen: Leistung ins Haus [Watt]",
        "query": "",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "organisation",
        "x": 1120,
        "y": 620,
        "wires": [
            [
                "45a025ba3794c488"
            ]
        ]
    },
    {
        "id": "45a025ba3794c488",
        "type": "function",
        "z": "b463bd21812ac6b5",
        "name": "Array zerlegen und summieren",
        "func": "let nL_firstTime, nL_secondTime, nL_Power, nL_Sekunden, nL_PowerSave, nL_PowerTemp;\nvar nl_kWattStunden=0;\nvar nL_TimeSave=0;\n \nfor (var i = 0; i < msg.payload.length; i++) {\n  nL_secondTime = msg.payload[i].time.getTime();\n  nL_Power = msg.payload[i].value;\n  \n  if (nL_TimeSave == 0) {\n    nL_TimeSave = nL_secondTime;\n    nL_PowerSave = nL_Power;\n  } else {\n    nL_firstTime = nL_TimeSave;\n    nL_PowerTemp = nL_PowerSave;\n    nL_Sekunden = (nL_secondTime - nL_firstTime) / 1000 //Sekunden;\n    nL_TimeSave = nL_secondTime;\n    nL_PowerSave = nL_Power;\n    nl_kWattStunden = (((nL_PowerTemp * nL_Sekunden) / 3600) / 1000) + nl_kWattStunden;\n  };\n};\n\nnl_kWattStunden = Math.round(nl_kWattStunden * 1000) / 1000;\n\nmsg = { payload: nl_kWattStunden};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1450,
        "y": 620,
        "wires": [
            [
                "d6dfc9f29db56a99",
                "c87103bbdca3bc06"
            ]
        ]
    },
    {
        "id": "340eed6ede6145c8",
        "type": "function",
        "z": "b463bd21812ac6b5",
        "name": "Array zerlegen und summieren",
        "func": "let nL_firstTime, nL_secondTime, nL_Power, nL_Sekunden, nL_PowerSave, nL_PowerTemp;\nvar nl_kWattStunden=0;\nvar nL_TimeSave=0;\n \nfor (var i = 0; i < msg.payload.length; i++) {\n  nL_secondTime = msg.payload[i].time.getTime();\n  nL_Power = msg.payload[i].value;\n  \n  if (nL_TimeSave == 0) {\n    nL_TimeSave = nL_secondTime;\n    nL_PowerSave = nL_Power;\n  } else {\n    nL_firstTime = nL_TimeSave;\n    nL_PowerTemp = nL_PowerSave;\n    nL_Sekunden = (nL_secondTime - nL_firstTime) / 1000 //Sekunden;\n    nL_TimeSave = nL_secondTime;\n    nL_PowerSave = nL_Power;\n    nl_kWattStunden = (((nL_PowerTemp * nL_Sekunden) / 3600) / 1000) + nl_kWattStunden;\n  };\n};\n\nnl_kWattStunden = (Math.round(nl_kWattStunden * 1000) / 1000) *-1;\n\nmsg = { payload: nl_kWattStunden};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1590,
        "y": 720,
        "wires": [
            [
                "bdc5e36de887d89a",
                "35db43c60e537051"
            ]
        ]
    },
    {
        "id": "838a4d36e5c929d7",
        "type": "switch",
        "z": "b463bd21812ac6b5",
        "name": "ist nicht 0 |1  ist 0 |2",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1650,
        "y": 840,
        "wires": [
            [
                "fdea7db9ea87f9f7"
            ],
            [
                "5fa634244ab20037"
            ]
        ]
    },
    {
        "id": "5fa634244ab20037",
        "type": "moment",
        "z": "b463bd21812ac6b5",
        "name": "zwei Tage zurück",
        "topic": "",
        "input": "",
        "inputType": "msg",
        "inTz": "Europe/Berlin",
        "adjAmount": "2",
        "adjType": "days",
        "adjDir": "subtract",
        "format": "",
        "locale": "de-DE",
        "output": "payload",
        "outputType": "msg",
        "outTz": "Europe/Berlin",
        "x": 1870,
        "y": 860,
        "wires": [
            [
                "3bc136ee725b192a"
            ]
        ]
    },
    {
        "id": "3bc136ee725b192a",
        "type": "function",
        "z": "b463bd21812ac6b5",
        "name": "Query erstellen",
        "func": "const today = new Date(msg.payload);\n\nlet Jahr = today.getFullYear();\nlet Monat = today.getMonth();\nlet Tag = today.getDate();\n\nMonat = Monat + 1\nif (Monat < 10) {\n    Monat = '0' + Monat\n}\n\nif (Tag < 10) {\n    Tag = '0' + Tag\n}\n\nlet Datum = `'` + Jahr + '-' + Monat + '-' + Tag + 'T00:00:00Z' + `'`;\nlet query = `SELECT * FROM \"VerbrauchTotalLangzeit_kWh\" where time >= ` + Datum;\nmsg.query = query\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2060,
        "y": 860,
        "wires": [
            [
                "42c927e13ee29f0e"
            ]
        ]
    },
    {
        "id": "42c927e13ee29f0e",
        "type": "influxdb in",
        "z": "b463bd21812ac6b5",
        "influxdb": "0e08b360d673d9d4",
        "name": "auslesen: Verbrauch Langzeit",
        "query": "",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "organisation",
        "x": 2290,
        "y": 860,
        "wires": [
            [
                "88f936d432036f37"
            ]
        ]
    },
    {
        "id": "88f936d432036f37",
        "type": "function",
        "z": "b463bd21812ac6b5",
        "name": "Array zerlegen",
        "func": "let nA_Leistung = new Array();\nlet lenght;\n\nfor (var i = 0; i < msg.payload.length; i++) {\n  lenght = nA_Leistung.push(msg.payload[i].value)\n}\n\nmsg = { payload: nA_Leistung };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2520,
        "y": 860,
        "wires": [
            [
                "fdea7db9ea87f9f7"
            ]
        ]
    },
    {
        "id": "cc3b4b6e115ba406",
        "type": "influxdb out",
        "z": "b463bd21812ac6b5",
        "influxdb": "0e08b360d673d9d4",
        "name": "speichern: Netzbezug Langzeit Kostal [kWh]",
        "measurement": "NetzbezugLangzeitKostal_kWh",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 930,
        "y": 220,
        "wires": []
    },
    {
        "id": "56bff76a8910765f",
        "type": "switch",
        "z": "b463bd21812ac6b5",
        "name": "Shelly aktiviert?",
        "property": "g_Shelly",
        "propertyType": "global",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 620,
        "y": 840,
        "wires": [
            [
                "a62913ba1f95dfac"
            ],
            []
        ]
    },
    {
        "id": "1f43f5f38b276547",
        "type": "switch",
        "z": "b463bd21812ac6b5",
        "name": "Kostal aktiviert",
        "property": "g_Shelly",
        "propertyType": "global",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 2920,
        "y": 800,
        "wires": [
            [
                "f2e390eace5ec9d6"
            ],
            []
        ]
    },
    {
        "id": "4b5ab809e12ce333",
        "type": "link in",
        "z": "b463bd21812ac6b5",
        "name": "Aktuelle Leistung von EON Kostal QUT",
        "links": [
            "6d785c5f02c33b2c"
        ],
        "x": 2795,
        "y": 800,
        "wires": [
            [
                "1f43f5f38b276547"
            ]
        ]
    },
    {
        "id": "1b96efd3f0d6955f",
        "type": "switch",
        "z": "b463bd21812ac6b5",
        "name": "Shelly aktiviert?",
        "property": "g_Shelly",
        "propertyType": "global",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 620,
        "y": 720,
        "wires": [
            [
                "33c7711a89e7c1c9"
            ],
            []
        ]
    },
    {
        "id": "45389fe27255d06d",
        "type": "switch",
        "z": "b463bd21812ac6b5",
        "name": "Kostal aktiviert?",
        "property": "g_Shelly",
        "propertyType": "global",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1640,
        "y": 760,
        "wires": [
            [
                "bdc5e36de887d89a",
                "35db43c60e537051"
            ],
            []
        ]
    },
    {
        "id": "d636a7f066fcbd94",
        "type": "link in",
        "z": "b463bd21812ac6b5",
        "name": "Aktuelle Leistung zu EON von Kostal QUT",
        "links": [
            "1475c2f0867ed8a1"
        ],
        "x": 1515,
        "y": 760,
        "wires": [
            [
                "45389fe27255d06d"
            ]
        ]
    },
    {
        "id": "b986c5b54fccaa32",
        "type": "influxdb out",
        "z": "b463bd21812ac6b5",
        "influxdb": "0e08b360d673d9d4",
        "name": "speichern: Tages Hausverbrauch Langzeit Kostal [kWh]",
        "measurement": "TagesHausverbrauch_kWh",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 970,
        "y": 260,
        "wires": []
    },
    {
        "id": "051cb642b50f8964",
        "type": "influxdb out",
        "z": "b463bd21812ac6b5",
        "influxdb": "0e08b360d673d9d4",
        "name": "speichern: Tages Panelleistung kWh Langzeit Kostal [kWh]",
        "measurement": "TagesPanelleistung_kWh_Kostal",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 980,
        "y": 300,
        "wires": []
    },
    {
        "id": "f6e2f292566c9433",
        "type": "influxdb backup",
        "z": "b463bd21812ac6b5",
        "name": "",
        "folder": "/mnt/Backup_Energieserver",
        "folderType": "str",
        "database": "Energie",
        "databaseType": "str",
        "host": "localhost",
        "hostType": "str",
        "port": "8088",
        "portType": "str",
        "clearfolder": "false",
        "clearfolderType": "bool",
        "unzip": "true",
        "unzipType": "bool",
        "prefix": "",
        "prefixType": "str",
        "x": 1040,
        "y": 360,
        "wires": [
            [],
            [],
            [
                "030e6de62dcc8372",
                "f6bbc70a9ac86846"
            ]
        ]
    },
    {
        "id": "ad2a66b17dd3e8bf",
        "type": "influxdb backup",
        "z": "b463bd21812ac6b5",
        "name": "",
        "folder": "/mnt/Backup_Energieserver",
        "folderType": "str",
        "database": "EnergieLangzeit",
        "databaseType": "str",
        "host": "localhost",
        "hostType": "str",
        "port": "8088",
        "portType": "str",
        "clearfolder": "false",
        "clearfolderType": "bool",
        "unzip": "true",
        "unzipType": "bool",
        "prefix": "",
        "prefixType": "str",
        "x": 1420,
        "y": 360,
        "wires": [
            [],
            [],
            [
                "ccbcb88817027f9d",
                "520e3088fe3a5a85"
            ]
        ]
    },
    {
        "id": "3bd18c52f634c311",
        "type": "function",
        "z": "b463bd21812ac6b5",
        "name": "Query erstellen",
        "func": "const today = new Date(msg.payload);\nconst topic = msg.topic;\n\nlet Jahr  = today.getFullYear();\nlet Monat = today.getMonth();\nlet Tag   = today.getDate();\nlet bL_DoIt        = false;\nlet sL_Measurement = '';\nlet bL_Kostal      = global.get('g_Shelly');\n\nvar TagStart, TagEnd;\n\nMonat = Monat + 1; //beginnt von Null\n\nswitch (Monat) {\n  case 1:\n    TagEnd = '31';\n    if (Tag == 31) {\n      bL_DoIt = true;\n    }\n    break;\n  case 2:\n    TagEnd = '28';\n    if (Tag == 28) {\n      bL_DoIt = true;\n    }\n    break;\n  case 3:\n    TagEnd = '31';\n    if (Tag == 31) {\n      bL_DoIt = true;\n    }\n    break;\n  case 4:\n    TagEnd = '30';\n    if (Tag == 30) {\n      bL_DoIt = true;\n    }\n    break;\n  case 5:\n    TagEnd = '31';\n    if (Tag == 31) {\n      bL_DoIt = true;\n    }\n    break;\n  case 6:\n    TagEnd = '30';\n    if (Tag == 30) {\n      bL_DoIt = true;\n    }\n    break;\n  case 7:\n    TagEnd = '31';\n    if (Tag == 31) {\n      bL_DoIt = true;\n    }\n    break;\n  case 8:\n    TagEnd = '31';\n    if (Tag == 31) {\n      bL_DoIt = true;\n    }\n    break;\n  case 9:\n    TagEnd = '30';\n    if (Tag == 30) {\n      bL_DoIt = true;\n    }\n    break;\n  case 10:\n    TagEnd = '31';\n    if (Tag == 1) {\n      bL_DoIt = true;\n    }\n    break;\n  case 11:\n    TagEnd = '30';\n    if (Tag == 30) {\n      bL_DoIt = true;\n    }\n    break;\n  case 12:\n    TagEnd = '31';\n    if (Tag == 31) {\n      bL_DoIt = true;\n    }\n    break;\n  default:\n    TagEnd = 'nix'\n}\n\nif (Monat == 1) {\n  Monat = '12';\n}\n\nif (Monat < 10) {\n    Monat = '0' + Monat; \n}\n\nTagStart = '01'; \n\nif (topic == 'Einspeiseleistung') {\n  sL_Measurement = 'EingespeisteLeistungLangzeit_kWh';\n} else if (topic == 'PanelleistungKostal') {\n  sL_Measurement = 'TagesPanelleistung_kWh_Kostal';\n} else if (topic == 'PanelleistungBKW') {\n  sL_Measurement = 'ErzeugteTagesPanel_kWh';\n} else if (topic == 'Netzentnahme') {\n  if (bL_Kostal == true) {\n    sL_Measurement = 'NetzbezugLangzeitKostal_kWh';\n  } else {\n    sL_Measurement = 'VerbrauchTotalLangzeit_kWh';\n  }\n}\n\nlet Datum = `'` + Jahr + '-' + Monat + '-' + TagStart + 'T00:00:00Z' + `'`;\nlet Datum2 = `'` + Jahr + '-' + Monat + '-' + TagEnd + 'T23:59:59Z' + `'`;\nlet query = `SELECT * FROM \"` + sL_Measurement + `\\\" where time >= ` + Datum + ' and time <= ' + Datum2;\n\nmsg.query = query;\nmsg.doit = bL_DoIt;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 1000,
        "wires": [
            [
                "9c89913299c81f33"
            ]
        ]
    },
    {
        "id": "78df78b055e6cafd",
        "type": "influxdb in",
        "z": "b463bd21812ac6b5",
        "influxdb": "0e08b360d673d9d4",
        "name": "auslesen: LangzeitDB",
        "query": "",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "organisation",
        "x": 960,
        "y": 1000,
        "wires": [
            [
                "5c7e3915eb1dd450"
            ]
        ]
    },
    {
        "id": "f6bbc70a9ac86846",
        "type": "delay",
        "z": "b463bd21812ac6b5",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1240,
        "y": 360,
        "wires": [
            [
                "ad2a66b17dd3e8bf"
            ]
        ]
    },
    {
        "id": "5c7e3915eb1dd450",
        "type": "function",
        "z": "b463bd21812ac6b5",
        "name": "Array zerlegen und summieren",
        "func": "const topic = msg.topic;\n\nlet nL_Summe = 0;\nlet nL_Temp = 0;\n \nfor (var i = 0; i < msg.payload.length; i++) {\n  nL_Temp = msg.payload[i].value;\n  nL_Summe += nL_Temp;\n};\n\nmsg = { payload: nL_Summe};\nmsg.topic = topic;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1230,
        "y": 1000,
        "wires": [
            [
                "4044395432fa779f"
            ]
        ]
    },
    {
        "id": "9c89913299c81f33",
        "type": "switch",
        "z": "b463bd21812ac6b5",
        "name": "doit?",
        "property": "doit",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 770,
        "y": 1000,
        "wires": [
            [
                "78df78b055e6cafd"
            ],
            []
        ]
    },
    {
        "id": "b3034a2db04a597a",
        "type": "influxdb out",
        "z": "b463bd21812ac6b5",
        "influxdb": "0e08b360d673d9d4",
        "name": "speichern: monatliche Einspeiseleistung kWh",
        "measurement": "sumNetzeinspeisung_kWh",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 1930,
        "y": 940,
        "wires": []
    },
    {
        "id": "4044395432fa779f",
        "type": "switch",
        "z": "b463bd21812ac6b5",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Einspeiseleistung",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "PanelleistungKostal",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "PanelleistungBKW",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Netzentnahme",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 1450,
        "y": 1000,
        "wires": [
            [
                "f1030ba93b15ef49"
            ],
            [
                "905e2aaed4a0a35c"
            ],
            [
                "e9befea07a77fadc"
            ],
            [
                "c687c05a39113e94"
            ]
        ]
    },
    {
        "id": "f1030ba93b15ef49",
        "type": "change",
        "z": "b463bd21812ac6b5",
        "name": "",
        "rules": [
            {
                "t": "delete",
                "p": "topic",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1630,
        "y": 940,
        "wires": [
            [
                "b3034a2db04a597a"
            ]
        ]
    },
    {
        "id": "905e2aaed4a0a35c",
        "type": "change",
        "z": "b463bd21812ac6b5",
        "name": "",
        "rules": [
            {
                "t": "delete",
                "p": "topic",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1630,
        "y": 980,
        "wires": [
            [
                "5b92676467625d5a"
            ]
        ]
    },
    {
        "id": "5b92676467625d5a",
        "type": "influxdb out",
        "z": "b463bd21812ac6b5",
        "influxdb": "0e08b360d673d9d4",
        "name": "speichern: monatliche Panelleistung kWh Kostal",
        "measurement": "sumKostalPanelleistung_kWh",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 1940,
        "y": 980,
        "wires": []
    },
    {
        "id": "e9befea07a77fadc",
        "type": "change",
        "z": "b463bd21812ac6b5",
        "name": "",
        "rules": [
            {
                "t": "delete",
                "p": "topic",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1630,
        "y": 1020,
        "wires": [
            [
                "ac859970c98a2411"
            ]
        ]
    },
    {
        "id": "ac859970c98a2411",
        "type": "influxdb out",
        "z": "b463bd21812ac6b5",
        "influxdb": "0e08b360d673d9d4",
        "name": "speichern: monatliche Panelleistung kWh BKW",
        "measurement": "sumBKWpanelleistung_kWh",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 1940,
        "y": 1020,
        "wires": []
    },
    {
        "id": "c687c05a39113e94",
        "type": "change",
        "z": "b463bd21812ac6b5",
        "name": "",
        "rules": [
            {
                "t": "delete",
                "p": "topic",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1630,
        "y": 1060,
        "wires": [
            [
                "600908809c5d2bf2"
            ]
        ]
    },
    {
        "id": "461f5b7789dafc3e",
        "type": "influxdb out",
        "z": "b463bd21812ac6b5",
        "influxdb": "0e08b360d673d9d4",
        "name": "speichern: monatliche Netzbezug kWh",
        "measurement": "sumNetzbezug_kWh",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 2110,
        "y": 1060,
        "wires": []
    },
    {
        "id": "600908809c5d2bf2",
        "type": "switch",
        "z": "b463bd21812ac6b5",
        "name": "Kostal aktiviert",
        "property": "g_Shelly",
        "propertyType": "global",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1840,
        "y": 1060,
        "wires": [
            [
                "461f5b7789dafc3e"
            ],
            []
        ]
    },
    {
        "id": "181b9bea7e2bba01",
        "type": "switch",
        "z": "b463bd21812ac6b5",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "TagesleistungPanel_BKW",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Netzentnahme_Shelly",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "LeistungInsHaus",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Netzabgabe",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Netzbezug_Kostal",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Hausverbrauch_Kostal",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Panelleistung_Kostal",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Backup",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Reset",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "A1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "A2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "A3",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "A4",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 14,
        "x": 370,
        "y": 340,
        "wires": [
            [
                "105dd1306731fca7"
            ],
            [
                "556a4c22ca61e2c2"
            ],
            [
                "0c78acb03d1f8e6f"
            ],
            [
                "fd7d94071b37beec"
            ],
            [
                "95ccfe643ed23093"
            ],
            [
                "7b696ab50b2f3a62"
            ],
            [
                "318cf19e8026ef5a"
            ],
            [
                "510b6f9709dd79e4"
            ],
            [
                "717d4cbdadcdcab7"
            ],
            [
                "b7c22027fe137073"
            ],
            [
                "146fe17b16c9dc54"
            ],
            [
                "1b96efd3f0d6955f"
            ],
            [
                "56bff76a8910765f"
            ],
            [
                "3bd18c52f634c311"
            ]
        ]
    },
    {
        "id": "105dd1306731fca7",
        "type": "change",
        "z": "b463bd21812ac6b5",
        "name": "",
        "rules": [
            {
                "t": "delete",
                "p": "topic",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 630,
        "y": 60,
        "wires": [
            [
                "7898434c90c5696a"
            ]
        ]
    },
    {
        "id": "556a4c22ca61e2c2",
        "type": "change",
        "z": "b463bd21812ac6b5",
        "name": "",
        "rules": [
            {
                "t": "delete",
                "p": "topic",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 630,
        "y": 100,
        "wires": [
            [
                "5869043444722b13"
            ]
        ]
    },
    {
        "id": "0c78acb03d1f8e6f",
        "type": "change",
        "z": "b463bd21812ac6b5",
        "name": "",
        "rules": [
            {
                "t": "delete",
                "p": "topic",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 630,
        "y": 140,
        "wires": [
            [
                "7a55a0417c9eef5a"
            ]
        ]
    },
    {
        "id": "fd7d94071b37beec",
        "type": "change",
        "z": "b463bd21812ac6b5",
        "name": "",
        "rules": [
            {
                "t": "delete",
                "p": "topic",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 630,
        "y": 180,
        "wires": [
            [
                "ec3296a8ca16288f"
            ]
        ]
    },
    {
        "id": "95ccfe643ed23093",
        "type": "change",
        "z": "b463bd21812ac6b5",
        "name": "",
        "rules": [
            {
                "t": "delete",
                "p": "topic",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 630,
        "y": 220,
        "wires": [
            [
                "cc3b4b6e115ba406"
            ]
        ]
    },
    {
        "id": "7b696ab50b2f3a62",
        "type": "change",
        "z": "b463bd21812ac6b5",
        "name": "",
        "rules": [
            {
                "t": "delete",
                "p": "topic",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 630,
        "y": 260,
        "wires": [
            [
                "b986c5b54fccaa32"
            ]
        ]
    },
    {
        "id": "318cf19e8026ef5a",
        "type": "change",
        "z": "b463bd21812ac6b5",
        "name": "",
        "rules": [
            {
                "t": "delete",
                "p": "topic",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 630,
        "y": 300,
        "wires": [
            [
                "051cb642b50f8964"
            ]
        ]
    },
    {
        "id": "d791125664384691",
        "type": "comment",
        "z": "b463bd21812ac6b5",
        "name": "--- Monatlicher Langzeit Check - Start um 23 Uhr 39 ---",
        "info": "",
        "x": 260,
        "y": 1000,
        "wires": []
    },
    {
        "id": "78132bbb9c6a8afa",
        "type": "ui_digital_display",
        "z": "b463bd21812ac6b5",
        "name": "Erzeugte Panel kWh",
        "group": "cb76b6e892fe5709",
        "order": 16,
        "width": 2,
        "height": 1,
        "digits": "6",
        "decimals": "3",
        "x": 1720,
        "y": 520,
        "wires": []
    },
    {
        "id": "c87103bbdca3bc06",
        "type": "ui_digital_display",
        "z": "b463bd21812ac6b5",
        "name": "Abg. kWh ins Haus ",
        "group": "cb76b6e892fe5709",
        "order": 18,
        "width": 2,
        "height": 1,
        "digits": "6",
        "decimals": "3",
        "x": 1710,
        "y": 620,
        "wires": []
    },
    {
        "id": "35db43c60e537051",
        "type": "ui_digital_display",
        "z": "b463bd21812ac6b5",
        "name": "Netzabgabe kWh",
        "group": "cb76b6e892fe5709",
        "order": 20,
        "width": 2,
        "height": 1,
        "digits": "6",
        "decimals": "3",
        "x": 1890,
        "y": 720,
        "wires": []
    },
    {
        "id": "f2e390eace5ec9d6",
        "type": "ui_digital_display",
        "z": "b463bd21812ac6b5",
        "name": "Netzbezug kWh",
        "group": "cb76b6e892fe5709",
        "order": 22,
        "width": 2,
        "height": 1,
        "digits": "6",
        "decimals": "3",
        "x": 3140,
        "y": 820,
        "wires": []
    },
    {
        "id": "429c4a62d5dacbb1",
        "type": "ui_multistate_switch",
        "z": "b463bd21812ac6b5",
        "name": "Backup",
        "group": "cb76b6e892fe5709",
        "order": 9,
        "width": 0,
        "height": 0,
        "label": "",
        "stateField": "payload",
        "enableField": "enable",
        "passthroughField": "passthrough",
        "inputMsgField": "inputmsg",
        "rounded": true,
        "useThemeColors": false,
        "hideSelectedLabel": false,
        "multilineLabel": false,
        "passThrough": "change",
        "inputMsg": "all",
        "userInput": "disabled",
        "options": [
            {
                "label": "Backup ready",
                "value": "true",
                "valueType": "bool",
                "color": "#009933"
            },
            {
                "label": "Backup Fehler",
                "value": "false",
                "valueType": "bool",
                "color": "#e01b24"
            },
            {
                "label": "Backup läuft",
                "value": "läuft",
                "valueType": "str",
                "color": "#ff80c0"
            }
        ],
        "topic": "",
        "x": 2300,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "53e4a78f3510b9b9",
        "type": "change",
        "z": "b463bd21812ac6b5",
        "name": "Backup gestartet",
        "rules": [
            {
                "t": "set",
                "p": "payload.code",
                "pt": "msg",
                "to": "-1",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 930,
        "y": 420,
        "wires": [
            [
                "030e6de62dcc8372"
            ]
        ]
    },
    {
        "id": "6b26040b4c25dc53",
        "type": "change",
        "z": "b463bd21812ac6b5",
        "name": "setze false",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "enable",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2130,
        "y": 420,
        "wires": [
            [
                "429c4a62d5dacbb1"
            ]
        ]
    },
    {
        "id": "3dc59d158d7b3217",
        "type": "ui_template",
        "z": "bcc357ac7ecec1c1",
        "group": "f9873af6c102601e",
        "name": "Eingebetteten Frame laden",
        "order": 2,
        "width": 0,
        "height": 0,
        "format": "<script>\n(function() {\n    (function(scope) {\n        scope.send({payload: \"preload\"}); // dies wird gesendet, wenn die Ansicht im Browser geöffnet wird\n    })(scope);\n})();\n</script>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 680,
        "y": 180,
        "wires": [
            [
                "07293384fa973c4d"
            ]
        ]
    },
    {
        "id": "fe5edf8b3905558d",
        "type": "ui_button",
        "z": "bcc357ac7ecec1c1",
        "name": "",
        "group": "f9873af6c102601e",
        "order": 7,
        "width": 3,
        "height": 1,
        "passthru": true,
        "label": "24 Stunden",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "24",
        "payloadType": "num",
        "topic": "",
        "topicType": "str",
        "x": 910,
        "y": 220,
        "wires": [
            [
                "e0167c8785ae3b84"
            ]
        ]
    },
    {
        "id": "e0167c8785ae3b84",
        "type": "function",
        "z": "bcc357ac7ecec1c1",
        "name": "SetTimeRange",
        "func": "var p_30d  = 1000*60*60*24*30 ; //30 Days\nvar p_7d  = 1000*60*60*24*7 ; //7 Days\nvar p_1d   =  1000*60*60*24 ; // 1 Day\nvar p_hr = 1000*60*60; //1 Hour\n\nvar d = new Date();\nvar current = d.getTime();\n\n\nmsg.fromdate = \"now-\" + msg.payload +\"h\";\nmsg.enddate = \"now\";\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1140,
        "y": 180,
        "wires": [
            [
                "91b6d483cc8f2d2b"
            ]
        ]
    },
    {
        "id": "948eca73014e6aad",
        "type": "function",
        "z": "bcc357ac7ecec1c1",
        "name": "BuildTemplate",
        "func": "//HINWEIS, mehr als ein Diagramm auf einer Seite dann\n//benennen Sie in der zweiten und den folgenden Vorlagen die Variable \"myframe\"\n//damit jede Vorlage einen eindeutigen Namen hat\n\nlet panelid=2\n\n//erste Variante mit Einspeisekurve\nmsg.payload = \"http://192.168.1.150:3000/d/g7onBOZRk/ausgabe-panels-ausgabe-ins-haus?orgId=1\"+\"&refresh=1m\"+\"&theme=dark\"+\"&from=\"+ msg.fromdate + \"&to=\"+ msg.enddate + \"&panelId=\"+panelid;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1660,
        "y": 220,
        "wires": [
            [
                "cdaa05ea3b139a9f"
            ]
        ]
    },
    {
        "id": "cdaa05ea3b139a9f",
        "type": "ui_template",
        "z": "bcc357ac7ecec1c1",
        "group": "f9873af6c102601e",
        "name": "Eingebetteten Frame",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<html>\n<iframe id=\"myFrame\" width=\"700px\" height=\"410px\" style = \"overflow:hidden; margin:auto; border:0px solid orange;\"></iframe>\n\n<script>\n//HINWEIS, mehr als ein Diagramm auf einer Seite, umbenennen in der zweiten und folgenden\n//Vorlagen die Variable \"myframe\", damit jede Vorlage einen eindeutigen Namen hat.\n(function(scope) {\n    // watch msg object from Node-RED\n    scope.$watch('msg', function(msg) {\n        // new message received\n        var x = document.getElementById('myFrame');\n        x.setAttribute('src', msg.payload); \n        });\n})(scope);\n</script>\n</html>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1900,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "07293384fa973c4d",
        "type": "ui_button",
        "z": "bcc357ac7ecec1c1",
        "name": "",
        "group": "f9873af6c102601e",
        "order": 6,
        "width": 3,
        "height": 1,
        "passthru": true,
        "label": "12 Stunden",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "12",
        "payloadType": "num",
        "topic": "",
        "topicType": "str",
        "x": 910,
        "y": 180,
        "wires": [
            [
                "e0167c8785ae3b84"
            ]
        ]
    },
    {
        "id": "e2c337dc627801fe",
        "type": "ui_button",
        "z": "bcc357ac7ecec1c1",
        "name": "",
        "group": "f9873af6c102601e",
        "order": 4,
        "width": 2,
        "height": 1,
        "passthru": true,
        "label": "6 Stunden",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "6",
        "payloadType": "num",
        "topic": "",
        "topicType": "str",
        "x": 910,
        "y": 140,
        "wires": [
            [
                "e0167c8785ae3b84"
            ]
        ]
    },
    {
        "id": "fba7ecc746a81b08",
        "type": "ui_button",
        "z": "bcc357ac7ecec1c1",
        "name": "",
        "group": "f9873af6c102601e",
        "order": 5,
        "width": 2,
        "height": 1,
        "passthru": true,
        "label": "1 Stunde",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "1",
        "payloadType": "num",
        "topic": "",
        "topicType": "str",
        "x": 920,
        "y": 100,
        "wires": [
            [
                "e0167c8785ae3b84"
            ]
        ]
    },
    {
        "id": "a69691ee5fc9547e",
        "type": "function",
        "z": "bcc357ac7ecec1c1",
        "name": "SetTimeYesterday",
        "func": "var p_30d  = 1000*60*60*24*30 ; //30 Days\nvar p_7d  = 1000*60*60*24*7 ; //7 Days\nvar p_1d   =  1000*60*60*24 ; // 1 Day\nvar p_hr = 1000*60*60; //1 Hour\n\nvar d = new Date();\nvar current = d.getTime();\nvar today0h = d.setHours(0,0,0,0); //Timestamp midnight\n\nmsg.fromdate = today0h - p_1d\nmsg.enddate = today0h\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1130,
        "y": 260,
        "wires": [
            [
                "91b6d483cc8f2d2b"
            ]
        ]
    },
    {
        "id": "01c5b890d9551690",
        "type": "function",
        "z": "bcc357ac7ecec1c1",
        "name": "SetTimeTodaySofar",
        "func": "msg.fromdate = \"now/d\";\nmsg.enddate = \"now\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1130,
        "y": 300,
        "wires": [
            [
                "91b6d483cc8f2d2b"
            ]
        ]
    },
    {
        "id": "b232cecad03209b8",
        "type": "ui_button",
        "z": "bcc357ac7ecec1c1",
        "name": "",
        "group": "f9873af6c102601e",
        "order": 9,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Heute",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "today",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 930,
        "y": 300,
        "wires": [
            [
                "01c5b890d9551690"
            ]
        ]
    },
    {
        "id": "cb4a2b5dc5b11df4",
        "type": "ui_button",
        "z": "bcc357ac7ecec1c1",
        "name": "",
        "group": "f9873af6c102601e",
        "order": 8,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Gestern",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "yesterday",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 920,
        "y": 260,
        "wires": [
            [
                "a69691ee5fc9547e"
            ]
        ]
    },
    {
        "id": "37ec371a7d432e62",
        "type": "comment",
        "z": "bcc357ac7ecec1c1",
        "name": "--- mit Grafana visualisieren / eingebetteter Frame auf Haupseite ---",
        "info": "",
        "x": 320,
        "y": 60,
        "wires": []
    },
    {
        "id": "a3f5b90c4c6f05bc",
        "type": "ui_template",
        "z": "bcc357ac7ecec1c1",
        "group": "bbc3532f.41ca7",
        "name": "Übersicht laden",
        "order": 3,
        "width": 0,
        "height": 0,
        "format": "<script>\n(function() {\n    (function(scope) {\n        scope.send({payload: \"preload\"}); // dies wird gesendet, wenn die Ansicht im Browser geöffnet wird\n    })(scope);\n})();\n</script>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 160,
        "y": 440,
        "wires": [
            [
                "18e5f2fe3bf1832c"
            ]
        ]
    },
    {
        "id": "0d2c5af522a08fe3",
        "type": "function",
        "z": "bcc357ac7ecec1c1",
        "name": "BuildTemplate",
        "func": "//HINWEIS, mehr als ein Diagramm auf einer Seite dann\n//benennen Sie in der zweiten und den folgenden Vorlagen die Variable \"myframe\"\n//damit jede Vorlage einen eindeutigen Namen hat\n\nlet panelid=3\n\n//msg.payload = \"http://192.168.1.150:3000/d/LPE6bDZgz/solar?orgId=1\"+\"&refresh=1m\"+\"&theme=dark\"+\"&from=\"+ msg.fromdate + \"&to=\"+ msg.enddate + \"&panelId=\"+panelid;\n\nmsg.payload = \"http://192.168.1.150:3000/d/LPE6bDZgz/solar?orgId=1&from=1674906687046&to=1706442687046\"+\"&refresh=1m\"+\"&theme=dark\"+\"&from=\"+ msg.fromdate + \"&to=\"+ msg.enddate + \"&panelId=\"+panelid;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 440,
        "wires": [
            [
                "29076c3a64600cdb"
            ]
        ]
    },
    {
        "id": "29076c3a64600cdb",
        "type": "ui_template",
        "z": "bcc357ac7ecec1c1",
        "group": "bbc3532f.41ca7",
        "name": "Übersicht",
        "order": 2,
        "width": 0,
        "height": 0,
        "format": "<html>\n<iframe id=\"myFrame\" width=\"1500px\" height=\"1800px\" style = \"overflow:hidden; margin:auto; border:0px solid orange;\"></iframe>\n\n<script>\n//HINWEIS, mehr als ein Diagramm auf einer Seite, umbenennen in der zweiten und folgenden\n//Vorlagen die Variable \"myframe\", damit jede Vorlage einen eindeutigen Namen hat.\n(function(scope) {\n    // watch msg object from Node-RED\n    scope.$watch('msg', function(msg) {\n        // new message received\n        var x = document.getElementById('myFrame');\n        x.setAttribute('src', msg.payload); \n        });\n})(scope);\n</script>\n</html>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 760,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "4f4d6f2342964626",
        "type": "comment",
        "z": "bcc357ac7ecec1c1",
        "name": "--- mit Grafana visualisieren / Übersicht Seite 2 ---",
        "info": "",
        "x": 260,
        "y": 400,
        "wires": []
    },
    {
        "id": "18e5f2fe3bf1832c",
        "type": "function",
        "z": "bcc357ac7ecec1c1",
        "name": "SetTime Last Year",
        "func": "var p_1y = 1000 * 60 * 60 * 24 * 30 * 12; //1 Year\nvar p_30d  = 1000*60*60*24*30 ; //30 Days\nvar p_7d  = 1000*60*60*24*7 ; //7 Days\nvar p_1d   =  1000*60*60*24 ; // 1 Day\nvar p_hr = 1000*60*60; //1 Hour\n\nvar d = new Date();\nvar current = d.getTime();\nvar today0h = d.setHours(0,0,0,0); //Timestamp midnight\n\nmsg.fromdate = today0h - p_1y\nmsg.enddate = today0h\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 440,
        "wires": [
            [
                "0d2c5af522a08fe3"
            ]
        ]
    },
    {
        "id": "b2ea5b2fb45e5849",
        "type": "ui_template",
        "z": "bcc357ac7ecec1c1",
        "group": "cd1dcc072d49f690",
        "name": "Eingebetteten Frame laden",
        "order": 2,
        "width": 0,
        "height": 0,
        "format": "<script>\n(function() {\n    (function(scope) {\n        scope.send({payload: \"preload\"}); // dies wird gesendet, wenn die Ansicht im Browser geöffnet wird\n    })(scope);\n})();\n</script>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 200,
        "y": 660,
        "wires": [
            [
                "df2c76267809295e"
            ]
        ]
    },
    {
        "id": "ee939009ba663068",
        "type": "ui_button",
        "z": "bcc357ac7ecec1c1",
        "name": "",
        "group": "cd1dcc072d49f690",
        "order": 3,
        "width": 3,
        "height": 1,
        "passthru": true,
        "label": "24 Stunden",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "24",
        "payloadType": "num",
        "topic": "",
        "topicType": "str",
        "x": 430,
        "y": 700,
        "wires": [
            [
                "e508eff624ff5c45"
            ]
        ]
    },
    {
        "id": "e508eff624ff5c45",
        "type": "function",
        "z": "bcc357ac7ecec1c1",
        "name": "SetTimeRange",
        "func": "var p_30d  = 1000*60*60*24*30 ; //30 Days\nvar p_7d  = 1000*60*60*24*7 ; //7 Days\nvar p_1d   =  1000*60*60*24 ; // 1 Day\nvar p_hr = 1000*60*60; //1 Hour\n\nvar d = new Date();\nvar current = d.getTime();\n\n\nmsg.fromdate = \"now-\" + msg.payload +\"h\";\nmsg.enddate = \"now\";\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 660,
        "wires": [
            [
                "973917ca95f06f54"
            ]
        ]
    },
    {
        "id": "973917ca95f06f54",
        "type": "function",
        "z": "bcc357ac7ecec1c1",
        "name": "BuildTemplate",
        "func": "//HINWEIS, mehr als ein Diagramm auf einer Seite dann\n//benennen Sie in der zweiten und den folgenden Vorlagen die Variable \"myframe\"\n//damit jede Vorlage einen eindeutigen Namen hat\n\nlet panelid=2\n\n//erste Variante mit Einspeisekurve\n//msg.payload = \"http://192.168.1.150:3000/d/g7onBOZRk/ausgabe-panels-ausgabe-ins-haus?orgId=1\"+\"&refresh=1m\"+\"&theme=dark\"+\"&from=\"+ msg.fromdate + \"&to=\"+ msg.enddate + \"&panelId=\"+panelid;\n\n//zweite Variante ohne Einspeisekurve\nmsg.payload = \"http://192.168.1.150:3000/d/BZuLPzZRk/kostal?orgId=1\" + \"&refresh=1m\" + \"&theme=dark\" + \"&from=\" + msg.fromdate + \"&to=\" + msg.enddate + \"&panelId=\" + panelid;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 660,
        "wires": [
            [
                "32e277fd55dd946c"
            ]
        ]
    },
    {
        "id": "32e277fd55dd946c",
        "type": "ui_template",
        "z": "bcc357ac7ecec1c1",
        "group": "cd1dcc072d49f690",
        "name": "Eingebetteten Frame",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<html>\n<iframe id=\"myFrame\" width=\"760px\" height=\"420px\" style = \"overflow:hidden; margin:auto; border:0px solid orange;\"></iframe>\n\n<script>\n//HINWEIS, mehr als ein Diagramm auf einer Seite, umbenennen in der zweiten und folgenden\n//Vorlagen die Variable \"myframe\", damit jede Vorlage einen eindeutigen Namen hat.\n(function(scope) {\n    // watch msg object from Node-RED\n    scope.$watch('msg', function(msg) {\n        // new message received\n        var x = document.getElementById('myFrame');\n        x.setAttribute('src', msg.payload); \n        });\n})(scope);\n</script>\n</html>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1060,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "df2c76267809295e",
        "type": "ui_button",
        "z": "bcc357ac7ecec1c1",
        "name": "",
        "group": "cd1dcc072d49f690",
        "order": 4,
        "width": 3,
        "height": 1,
        "passthru": true,
        "label": "12 Stunden",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "12",
        "payloadType": "num",
        "topic": "",
        "topicType": "str",
        "x": 430,
        "y": 660,
        "wires": [
            [
                "e508eff624ff5c45"
            ]
        ]
    },
    {
        "id": "5d7552df70bba147",
        "type": "ui_button",
        "z": "bcc357ac7ecec1c1",
        "name": "",
        "group": "cd1dcc072d49f690",
        "order": 5,
        "width": 2,
        "height": 1,
        "passthru": true,
        "label": "6 Stunden",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "6",
        "payloadType": "num",
        "topic": "",
        "topicType": "str",
        "x": 430,
        "y": 620,
        "wires": [
            [
                "e508eff624ff5c45"
            ]
        ]
    },
    {
        "id": "77160f46d86f69ce",
        "type": "ui_button",
        "z": "bcc357ac7ecec1c1",
        "name": "",
        "group": "cd1dcc072d49f690",
        "order": 6,
        "width": 2,
        "height": 1,
        "passthru": true,
        "label": "1 Stunde",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "1",
        "payloadType": "num",
        "topic": "",
        "topicType": "str",
        "x": 440,
        "y": 580,
        "wires": [
            [
                "e508eff624ff5c45"
            ]
        ]
    },
    {
        "id": "f1cf76a1ae70da1f",
        "type": "function",
        "z": "bcc357ac7ecec1c1",
        "name": "SetTimeYesterday",
        "func": "var p_30d  = 1000*60*60*24*30 ; //30 Days\nvar p_7d  = 1000*60*60*24*7 ; //7 Days\nvar p_1d   =  1000*60*60*24 ; // 1 Day\nvar p_hr = 1000*60*60; //1 Hour\n\nvar d = new Date();\nvar current = d.getTime();\nvar today0h = d.setHours(0,0,0,0); //Timestamp midnight\n\nmsg.fromdate = today0h - p_1d\nmsg.enddate = today0h\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 740,
        "wires": [
            [
                "973917ca95f06f54"
            ]
        ]
    },
    {
        "id": "cb7f48b1240f380e",
        "type": "function",
        "z": "bcc357ac7ecec1c1",
        "name": "SetTimeTodaySofar",
        "func": "msg.fromdate = \"now/d\";\nmsg.enddate = \"now\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 650,
        "y": 780,
        "wires": [
            [
                "973917ca95f06f54"
            ]
        ]
    },
    {
        "id": "bbeef0fdec436037",
        "type": "ui_button",
        "z": "bcc357ac7ecec1c1",
        "name": "",
        "group": "cd1dcc072d49f690",
        "order": 8,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Heute",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "today",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 450,
        "y": 780,
        "wires": [
            [
                "cb7f48b1240f380e"
            ]
        ]
    },
    {
        "id": "afbdedfb4fe598a2",
        "type": "ui_button",
        "z": "bcc357ac7ecec1c1",
        "name": "",
        "group": "cd1dcc072d49f690",
        "order": 9,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Gestern",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "yesterday",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 440,
        "y": 740,
        "wires": [
            [
                "f1cf76a1ae70da1f"
            ]
        ]
    },
    {
        "id": "bc55ce251e5d8f21",
        "type": "comment",
        "z": "bcc357ac7ecec1c1",
        "name": "--- mit Grafana visualisieren / eingebetteter Frame Kostal ---",
        "info": "",
        "x": 290,
        "y": 540,
        "wires": []
    },
    {
        "id": "7747a009b32a1d2e",
        "type": "function",
        "z": "bcc357ac7ecec1c1",
        "name": "BuildTemplate",
        "func": "//HINWEIS, mehr als ein Diagramm auf einer Seite dann\n//benennen Sie in der zweiten und den folgenden Vorlagen die Variable \"myframe\"\n//damit jede Vorlage einen eindeutigen Namen hat\n\nlet panelid=2\n\n//erste Variante mit Einspeisekurve\n//msg.payload = \"http://192.168.1.150:3000/d/g7onBOZRk/ausgabe-panels-ausgabe-ins-haus?orgId=1\"+\"&refresh=1m\"+\"&theme=dark\"+\"&from=\"+ msg.fromdate + \"&to=\"+ msg.enddate + \"&panelId=\"+panelid;\n\n//zweite Variante ohne Einspeisekurve\nmsg.payload = \"http://192.168.1.150:3000/d/18A0BkWRk/only-bkw?orgId=1\" + \"&refresh=1m\" + \"&theme=dark\" + \"&from=\" + msg.fromdate + \"&to=\" + msg.enddate + \"&panelId=\" + panelid;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1660,
        "y": 260,
        "wires": [
            [
                "cdaa05ea3b139a9f"
            ]
        ]
    },
    {
        "id": "91b6d483cc8f2d2b",
        "type": "switch",
        "z": "bcc357ac7ecec1c1",
        "name": "kleine Darstellung=1 / große=2",
        "property": "g_Darstellung",
        "propertyType": "global",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1410,
        "y": 240,
        "wires": [
            [
                "948eca73014e6aad"
            ],
            [
                "7747a009b32a1d2e"
            ]
        ]
    },
    {
        "id": "71b72fc0194b6a9d",
        "type": "change",
        "z": "bcc357ac7ecec1c1",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "g_Darstellung",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 180,
        "wires": [
            [
                "3dc59d158d7b3217"
            ]
        ]
    },
    {
        "id": "455b8666c416f332",
        "type": "ui_multistate_switch",
        "z": "bcc357ac7ecec1c1",
        "name": "Grafik switch",
        "group": "f9873af6c102601e",
        "order": 3,
        "width": 0,
        "height": 0,
        "label": "",
        "stateField": "payload",
        "enableField": "enable",
        "passthroughField": "passthrough",
        "inputMsgField": "inputmsg",
        "rounded": true,
        "useThemeColors": false,
        "hideSelectedLabel": false,
        "multilineLabel": false,
        "passThrough": "never",
        "inputMsg": "all",
        "userInput": "enabled_show",
        "options": [
            {
                "label": "nur BKW",
                "value": "true",
                "valueType": "bool",
                "color": "#efe856"
            },
            {
                "label": "Komplett mit Panelleistung",
                "value": "false",
                "valueType": "bool",
                "color": "#ffcce6"
            }
        ],
        "topic": "",
        "x": 190,
        "y": 180,
        "wires": [
            [
                "71b72fc0194b6a9d"
            ]
        ]
    },
    {
        "id": "8d341e6b3a26de10",
        "type": "exec",
        "z": "527eabae6d22e77a",
        "command": "sudo pidof rtl_433",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "find Prozess ID",
        "x": 1120,
        "y": 600,
        "wires": [
            [
                "283e1e8be413e93a"
            ],
            [],
            []
        ]
    },
    {
        "id": "283e1e8be413e93a",
        "type": "exec",
        "z": "527eabae6d22e77a",
        "command": "sudo kill",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "kill rtl_433",
        "x": 1300,
        "y": 600,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "23e002d826fa5626",
        "type": "inject",
        "z": "527eabae6d22e77a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "WetterTempAktiv",
        "payload": "true",
        "payloadType": "bool",
        "x": 300,
        "y": 560,
        "wires": [
            [
                "eb5876d493d62abe",
                "859c58d98c7ba2ad"
            ]
        ]
    },
    {
        "id": "2e18ea36e68f22b8",
        "type": "exec",
        "z": "527eabae6d22e77a",
        "command": "rtl_433 -f 868355000 -Y classic -s 250k -F json | mosquitto_pub -h localhost -u V652 -P 59FFB -t home/rtl_433 -l",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "rtl_433 starten und Json in den Broker schieben",
        "x": 1420,
        "y": 680,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "926ab547831dfbbf",
        "type": "mqtt in",
        "z": "527eabae6d22e77a",
        "name": "",
        "topic": "home/rtl_433",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "d23ecbe757e22be2",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 130,
        "y": 280,
        "wires": [
            [
                "30941834779a8bbf",
                "fdf695757db73524"
            ]
        ]
    },
    {
        "id": "30941834779a8bbf",
        "type": "json",
        "z": "527eabae6d22e77a",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 310,
        "y": 280,
        "wires": [
            [
                "a6f8282b2adf7d86",
                "0025ec596a558d4c"
            ]
        ]
    },
    {
        "id": "a6f8282b2adf7d86",
        "type": "switch",
        "z": "527eabae6d22e77a",
        "name": "Device identifizieren",
        "property": "payload.model",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Fineoffset-WHx080",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 500,
        "y": 280,
        "wires": [
            [
                "184659236b6318e4"
            ]
        ]
    },
    {
        "id": "4d163537762411d1",
        "type": "change",
        "z": "527eabae6d22e77a",
        "name": "Temperatur filten",
        "rules": [
            {
                "t": "move",
                "p": "payload.temperature_C",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "move",
                "p": "payload.temperature_C",
                "pt": "msg",
                "to": "g_Temperatur",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1010,
        "y": 280,
        "wires": [
            [
                "c71216b929112187",
                "39ac96b8fbb09d04",
                "d6552e5e3991a31d"
            ]
        ]
    },
    {
        "id": "eb5876d493d62abe",
        "type": "trigger",
        "z": "527eabae6d22e77a",
        "name": "",
        "op1": "",
        "op2": "Kurzschluss",
        "op1type": "nul",
        "op2type": "str",
        "duration": "5",
        "extend": true,
        "overrideDelay": false,
        "units": "min",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 530,
        "y": 760,
        "wires": [
            [
                "625efa8d3e735c75"
            ]
        ]
    },
    {
        "id": "5e7145b2b359f758",
        "type": "delay",
        "z": "527eabae6d22e77a",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1130,
        "y": 680,
        "wires": [
            [
                "2e18ea36e68f22b8"
            ]
        ]
    },
    {
        "id": "39ac96b8fbb09d04",
        "type": "influxdb out",
        "z": "527eabae6d22e77a",
        "influxdb": "b3285c9ad9c3f4bd",
        "name": "speichern: Temperatur",
        "measurement": "Temperatur_Celsius",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 1260,
        "y": 320,
        "wires": []
    },
    {
        "id": "cab98ed3afd52126",
        "type": "influxdb out",
        "z": "527eabae6d22e77a",
        "influxdb": "b3285c9ad9c3f4bd",
        "name": "speichern: Luftfeuchte",
        "measurement": "Luftfeuchte",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 1260,
        "y": 360,
        "wires": []
    },
    {
        "id": "8d766ee22c5d58c3",
        "type": "change",
        "z": "527eabae6d22e77a",
        "name": "setze g_Luftfeuchte",
        "rules": [
            {
                "t": "move",
                "p": "payload.humidity",
                "pt": "msg",
                "to": "g_Luftfeuchte",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1010,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "8cb046e2852a2933",
        "type": "change",
        "z": "527eabae6d22e77a",
        "name": "setze g_Windrichtung",
        "rules": [
            {
                "t": "move",
                "p": "payload.wind_dir_deg",
                "pt": "msg",
                "to": "g_Windrichtung",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1020,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "5b79349e7fe07aef",
        "type": "influxdb out",
        "z": "527eabae6d22e77a",
        "d": true,
        "influxdb": "b3285c9ad9c3f4bd",
        "name": "speichern: Windrichtung",
        "measurement": "Windrichtung",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 1270,
        "y": 400,
        "wires": []
    },
    {
        "id": "79fceb45bf4bc59a",
        "type": "change",
        "z": "527eabae6d22e77a",
        "name": "setze g_Windgeschwindigkeit",
        "rules": [
            {
                "t": "move",
                "p": "payload.wind_max_km_h",
                "pt": "msg",
                "to": "g_Windgeschwindigkeit",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1050,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "2ea00686cb70a204",
        "type": "change",
        "z": "527eabae6d22e77a",
        "name": "setze g_Luftdruck",
        "rules": [
            {
                "t": "move",
                "p": "payload.rain_mm",
                "pt": "msg",
                "to": "g_Luftdruck",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1010,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "2c588ce91a74a866",
        "type": "influxdb out",
        "z": "527eabae6d22e77a",
        "influxdb": "b3285c9ad9c3f4bd",
        "name": "speichern: Niederschlag",
        "measurement": "Niederschlag",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 1270,
        "y": 440,
        "wires": []
    },
    {
        "id": "c71216b929112187",
        "type": "switch",
        "z": "527eabae6d22e77a",
        "name": "ist kleiner 3 Grad Celsius",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lt",
                "v": "6",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1270,
        "y": 240,
        "wires": [
            [
                "fbd7a1c6dd4225ab"
            ]
        ]
    },
    {
        "id": "fbd7a1c6dd4225ab",
        "type": "change",
        "z": "527eabae6d22e77a",
        "name": "Bypass aktivieren",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "TemperaturGemessen",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1510,
        "y": 240,
        "wires": [
            [
                "57a39c18bb888695"
            ]
        ]
    },
    {
        "id": "b0d3289379f396fe",
        "type": "link out",
        "z": "527eabae6d22e77a",
        "name": "zu Bypass übersteuern",
        "mode": "link",
        "links": [
            "90664065a1b3aead"
        ],
        "x": 2015,
        "y": 240,
        "wires": []
    },
    {
        "id": "d873810106c70e79",
        "type": "change",
        "z": "527eabae6d22e77a",
        "name": "setze g_Aussentemperatur",
        "rules": [
            {
                "t": "move",
                "p": "payload.temperature_C",
                "pt": "msg",
                "to": "g_Aussentemperatur",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1040,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "ed3315bc201fca52",
        "type": "change",
        "z": "527eabae6d22e77a",
        "name": "Luftfeuchte filten",
        "rules": [
            {
                "t": "move",
                "p": "payload.humidity",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1000,
        "y": 360,
        "wires": [
            [
                "cab98ed3afd52126"
            ]
        ]
    },
    {
        "id": "18d8f27ca675d809",
        "type": "change",
        "z": "527eabae6d22e77a",
        "name": "Windrichtung filten",
        "rules": [
            {
                "t": "move",
                "p": "payload.wind_dir_deg",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1010,
        "y": 400,
        "wires": [
            [
                "5b79349e7fe07aef"
            ]
        ]
    },
    {
        "id": "7d5d3a2065996ceb",
        "type": "change",
        "z": "527eabae6d22e77a",
        "name": "Niederschlag filten",
        "rules": [
            {
                "t": "move",
                "p": "payload.rain_mm",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1010,
        "y": 440,
        "wires": [
            [
                "2c588ce91a74a866"
            ]
        ]
    },
    {
        "id": "dff1a4ae0f1888e7",
        "type": "timed-counter",
        "z": "527eabae6d22e77a",
        "name": "weiterleiten wenn 2x in 6 Minuten",
        "timelimit": "6",
        "timeunit": "60000",
        "withhold": true,
        "fixedtimeout": false,
        "pertopic": true,
        "countlimit": "2",
        "x": 460,
        "y": 1100,
        "wires": [
            []
        ]
    },
    {
        "id": "772505cd0f9a4853",
        "type": "inject",
        "z": "527eabae6d22e77a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 220,
        "y": 1100,
        "wires": [
            [
                "dff1a4ae0f1888e7"
            ]
        ]
    },
    {
        "id": "e306fb1bc0731159",
        "type": "switch",
        "z": "527eabae6d22e77a",
        "name": "setze true",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 320,
        "y": 640,
        "wires": [
            [
                "0c3e69725f9ce68f"
            ]
        ]
    },
    {
        "id": "378017ab0d5b5bb6",
        "type": "catch",
        "z": "527eabae6d22e77a",
        "name": "prüfen ob rtl_433 startet",
        "scope": [
            "2e18ea36e68f22b8"
        ],
        "uncaught": false,
        "x": 140,
        "y": 640,
        "wires": [
            [
                "e306fb1bc0731159"
            ]
        ]
    },
    {
        "id": "99ef1fe2f881fa7f",
        "type": "RailwaySwitchUltimate",
        "z": "527eabae6d22e77a",
        "name": "Railway Switch",
        "triggertopic": "WetterTempAktiv",
        "initializewith": "0",
        "payloadPropName": "payload",
        "translatorConfig": "",
        "x": 760,
        "y": 520,
        "wires": [
            [
                "8d341e6b3a26de10"
            ],
            [
                "0f51af8007fad65f"
            ],
            [],
            [],
            []
        ]
    },
    {
        "id": "64f9945a25f7223f",
        "type": "switch",
        "z": "527eabae6d22e77a",
        "name": "1 wenn false | 2 wenn true",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 730,
        "y": 600,
        "wires": [
            [
                "63c29a4a30318530"
            ],
            [
                "63c29a4a30318530",
                "9c502dc8cffe8892"
            ]
        ]
    },
    {
        "id": "625efa8d3e735c75",
        "type": "RailwaySwitchUltimate",
        "z": "527eabae6d22e77a",
        "name": "Railway Switch",
        "triggertopic": "WetterTempAktiv",
        "initializewith": "0",
        "payloadPropName": "payload",
        "translatorConfig": "",
        "x": 800,
        "y": 760,
        "wires": [
            [],
            [
                "5a15a3026051c377"
            ],
            [],
            [],
            []
        ]
    },
    {
        "id": "0f51af8007fad65f",
        "type": "link out",
        "z": "527eabae6d22e77a",
        "name": "link out 9",
        "mode": "link",
        "links": [
            "54f6ab72f8fef055"
        ],
        "x": 985,
        "y": 520,
        "wires": []
    },
    {
        "id": "54f6ab72f8fef055",
        "type": "link in",
        "z": "527eabae6d22e77a",
        "name": "link in 8",
        "links": [
            "0f51af8007fad65f"
        ],
        "x": 385,
        "y": 760,
        "wires": [
            [
                "eb5876d493d62abe"
            ]
        ]
    },
    {
        "id": "0c3e69725f9ce68f",
        "type": "BlinkerUltimate",
        "z": "527eabae6d22e77a",
        "name": "Blinker",
        "stopbehaviorPIN1": "1",
        "stopbehaviorPIN2": "0",
        "blinkfrequency": "500",
        "initializewith": "0",
        "payloadPropName": "payload",
        "x": 480,
        "y": 640,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "2e02c61f8da2a14e",
        "type": "link out",
        "z": "527eabae6d22e77a",
        "name": "link out 10",
        "mode": "link",
        "links": [
            "22afa45ff412852e"
        ],
        "x": 635,
        "y": 460,
        "wires": []
    },
    {
        "id": "57a39c18bb888695",
        "type": "RailwaySwitchUltimate",
        "z": "527eabae6d22e77a",
        "name": "Railway Switch",
        "triggertopic": "TemperaturGemessen",
        "initializewith": "0",
        "payloadPropName": "payload",
        "translatorConfig": "f79bfcdd1abf60d7",
        "x": 1800,
        "y": 240,
        "wires": [
            [
                "b0d3289379f396fe"
            ],
            [
                "b0d3289379f396fe"
            ],
            [],
            [],
            []
        ]
    },
    {
        "id": "106179fe06238d06",
        "type": "link in",
        "z": "527eabae6d22e77a",
        "name": "link in 10",
        "links": [
            "f3cf896fcee21ba2"
        ],
        "x": 1585,
        "y": 200,
        "wires": [
            [
                "57a39c18bb888695"
            ]
        ]
    },
    {
        "id": "0025ec596a558d4c",
        "type": "debug",
        "z": "527eabae6d22e77a",
        "name": "Wetterstationsdaten",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 500,
        "y": 240,
        "wires": []
    },
    {
        "id": "184659236b6318e4",
        "type": "switch",
        "z": "527eabae6d22e77a",
        "name": "Device identifizieren",
        "property": "payload.subtype",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 740,
        "y": 280,
        "wires": [
            [
                "4d163537762411d1",
                "7d5d3a2065996ceb",
                "18d8f27ca675d809",
                "ed3315bc201fca52",
                "8cb046e2852a2933",
                "8d766ee22c5d58c3",
                "d873810106c70e79",
                "79fceb45bf4bc59a",
                "2ea00686cb70a204",
                "0e93cbbeaecb15f0"
            ]
        ]
    },
    {
        "id": "0e93cbbeaecb15f0",
        "type": "change",
        "z": "527eabae6d22e77a",
        "name": "setze g_Temperatur",
        "rules": [
            {
                "t": "move",
                "p": "payload.temperature_C",
                "pt": "msg",
                "to": "g_Temperatur",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1020,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "d6552e5e3991a31d",
        "type": "ui_widget_thermometer",
        "z": "527eabae6d22e77a",
        "group": "734b3edda0b2df2b",
        "order": 6,
        "width": 3,
        "height": 4,
        "name": "Aussentemperatur",
        "title": "Lufttemperatur",
        "numColor": 3,
        "colorTop": "#c01c28",
        "colorMiddle": "#8bc34a",
        "colorBottom": "#1c71d8",
        "unit": "°C",
        "scale": "small",
        "minTemp": "-20",
        "maxTemp": "50",
        "minTempMoreThanMaxTemp": "1",
        "numberOfDecimals": "0",
        "showPercentage": "0",
        "currentTempFontSize": "1.2",
        "x": 1250,
        "y": 280,
        "wires": []
    },
    {
        "id": "859c58d98c7ba2ad",
        "type": "ui_multistate_switch",
        "z": "527eabae6d22e77a",
        "name": "Wetter",
        "group": "cb76b6e892fe5709",
        "order": 8,
        "width": 0,
        "height": 0,
        "label": "",
        "stateField": "payload",
        "enableField": "enable",
        "passthroughField": "passthrough",
        "inputMsgField": "inputmsg",
        "rounded": true,
        "useThemeColors": false,
        "hideSelectedLabel": false,
        "multilineLabel": false,
        "passThrough": "change",
        "inputMsg": "all",
        "userInput": "enabled_show",
        "options": [
            {
                "label": "Temp/Wetter an",
                "value": "true",
                "valueType": "bool",
                "color": "#009933"
            },
            {
                "label": "Temp/Wetter aus",
                "value": "false",
                "valueType": "bool",
                "color": "#e01b24"
            }
        ],
        "topic": "WetterTempAktiv",
        "x": 490,
        "y": 560,
        "wires": [
            [
                "2e02c61f8da2a14e",
                "99ef1fe2f881fa7f",
                "64f9945a25f7223f"
            ]
        ]
    },
    {
        "id": "0f29d6518dd0be06",
        "type": "openweathermap",
        "z": "a8c42bb58872b9c4",
        "name": "Wetter für Kirchberg",
        "wtype": "forecast",
        "lon": "",
        "lat": "",
        "city": "Kirchberg im Wald",
        "country": "Germany",
        "language": "de",
        "x": 920,
        "y": 140,
        "wires": [
            [
                "ec6839c52da5022e"
            ]
        ]
    },
    {
        "id": "da79928bbb700436",
        "type": "function",
        "z": "a8c42bb58872b9c4",
        "name": "Wetter auswerten",
        "func": "var MinTemp, MaxTemp, Wolken, Bypass, Datum, Uhrzeit;\n\nlet Heute          = global.get('g_Heute').slice(0, 10);\nlet Morgen         = global.get('g_Morgen').slice(0, 10);\nlet Heute_plus2    = global.get('g_Heute_plus2').slice(0, 10);\nlet Heute_plus3    = global.get('g_Heute_plus3').slice(0, 10);\nlet Heute_plus4    = global.get('g_Heute_plus4').slice(0, 10);\nlet b_Morgen       = false;\nlet b_Heute_plus2  = false;\nlet b_Heute_plus3  = false;\nlet b_Heute_plus4  = false;\nconst Count        = [0, 0, 0, 0];\nconst CountW       = [0, 0, 0, 0];\nlet AuswertungTemp     = \"\";\nlet AuswertungWolken   = \"\";\nlet nL_LimitWolken     = 80;\nlet nL_LimitTemperatur = 4;\n//let Tag = new Array() = 0;\n\n\nfor (var i = 0; i < 39; i++) {\n    Datum = msg.payload[i].dt_txt.slice(0, 10);\n    Uhrzeit = msg.payload[i].dt_txt.slice(11, 13);\n\n    //Bewölkung\n    if (Uhrzeit == '09' || Uhrzeit == '12' || Uhrzeit == '15') {\n        if (msg.payload[i].clouds.all > nL_LimitWolken) {\n            if (Datum == Morgen) {\n                CountW[0] += 1;\n            }\n            if (Datum == Heute_plus2) {\n                CountW[1] += 1;\n            }\n            if (Datum == Heute_plus3) {\n                CountW[2] += 1;\n            }\n            if (Datum == Heute_plus4) {\n                CountW[3] += 1;\n            }\n        } \n    }\n\n    //Temperatur\n    if (Uhrzeit == '12') {\n        if (msg.payload[i].main.temp_min < nL_LimitTemperatur || msg.payload[i].main.temp_max < nL_LimitTemperatur) {\n            if (Datum == Morgen) {\n                Count[0] += 1;\n            }\n            if (Datum == Heute_plus2) {\n                Count[1] += 1;\n            }\n            if (Datum == Heute_plus3) {\n                Count[2] += 1;\n            }\n            if (Datum == Heute_plus4) {\n                Count[3] += 1;\n            }\n        }\n    }\n}\n\n//Temperatur String zusammenbauen\nfor (var i = 0; i < 4; i++) {\n    if (Count[i] > 0) {\n        AuswertungTemp = AuswertungTemp + \"1\"\n    } else {\n        AuswertungTemp = AuswertungTemp + \"0\"\n    }\n}\n\n//Wolken String zusammenbauen\nfor (var i = 0; i < 4; i++) {\n    if (CountW[i] > 0) {\n        AuswertungWolken = AuswertungWolken + \"1\"\n    } else {\n        AuswertungWolken = AuswertungWolken + \"0\"\n    }\n}\n\n//Auswertung\nif (AuswertungTemp == \"1100\" || AuswertungTemp == \"1110\" || AuswertungTemp == \"1111\") {\n    Bypass = true;\n} else {\n    Bypass = false;\n}\n\nif (AuswertungWolken == \"1100\" || AuswertungWolken == \"1110\" || AuswertungWolken == \"1111\") {\n    global.set('g_CloudLimit', true);\n} else {\n    global.set('g_CloudLimit', false);\n}\n\nmsg = { topic:\"TemperaturWetterbericht\" ,payload: Bypass };\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1230,
        "y": 140,
        "wires": [
            [
                "67a6651d8b0c2287"
            ]
        ]
    },
    {
        "id": "fcef6f827fc6d66a",
        "type": "moment",
        "z": "a8c42bb58872b9c4",
        "name": "Morgen",
        "topic": "",
        "input": "",
        "inputType": "msg",
        "inTz": "Europe/Berlin",
        "adjAmount": "1",
        "adjType": "days",
        "adjDir": "add",
        "format": "",
        "locale": "de-DE",
        "output": "g_Morgen",
        "outputType": "global",
        "outTz": "Europe/Berlin",
        "x": 700,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "5fe6c7a10651e24f",
        "type": "moment",
        "z": "a8c42bb58872b9c4",
        "name": "Heute",
        "topic": "",
        "input": "",
        "inputType": "msg",
        "inTz": "Europe/Berlin",
        "adjAmount": "0",
        "adjType": "days",
        "adjDir": "add",
        "format": "",
        "locale": "de-DE",
        "output": "g_Heute",
        "outputType": "global",
        "outTz": "Europe/Berlin",
        "x": 690,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "f3c75a64ed06c12e",
        "type": "moment",
        "z": "a8c42bb58872b9c4",
        "name": "Heute+2",
        "topic": "",
        "input": "",
        "inputType": "msg",
        "inTz": "Europe/Berlin",
        "adjAmount": "2",
        "adjType": "days",
        "adjDir": "add",
        "format": "",
        "locale": "de-DE",
        "output": "g_Heute_plus2",
        "outputType": "global",
        "outTz": "Europe/Berlin",
        "x": 700,
        "y": 140,
        "wires": [
            [
                "0f29d6518dd0be06"
            ]
        ]
    },
    {
        "id": "fb46ab895adecb5f",
        "type": "moment",
        "z": "a8c42bb58872b9c4",
        "name": "Heute+3",
        "topic": "",
        "input": "",
        "inputType": "msg",
        "inTz": "Europe/Berlin",
        "adjAmount": "3",
        "adjType": "days",
        "adjDir": "add",
        "format": "",
        "locale": "de-DE",
        "output": "g_Heute_plus3",
        "outputType": "global",
        "outTz": "Europe/Berlin",
        "x": 700,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "29e169efbea94649",
        "type": "moment",
        "z": "a8c42bb58872b9c4",
        "name": "Heute+4",
        "topic": "",
        "input": "",
        "inputType": "msg",
        "inTz": "Europe/Berlin",
        "adjAmount": "4",
        "adjType": "days",
        "adjDir": "add",
        "format": "",
        "locale": "de-DE",
        "output": "g_Heute_plus4",
        "outputType": "global",
        "outTz": "Europe/Berlin",
        "x": 700,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "22afa45ff412852e",
        "type": "link in",
        "z": "a8c42bb58872b9c4",
        "name": "link in 9",
        "links": [
            "2e02c61f8da2a14e"
        ],
        "x": 225,
        "y": 120,
        "wires": [
            [
                "b685154ad02edf1e"
            ]
        ]
    },
    {
        "id": "b685154ad02edf1e",
        "type": "RailwaySwitchUltimate",
        "z": "a8c42bb58872b9c4",
        "name": "Railway Switch",
        "triggertopic": "WetterTempAktiv",
        "initializewith": "0",
        "payloadPropName": "payload",
        "translatorConfig": "",
        "x": 420,
        "y": 120,
        "wires": [
            [],
            [
                "f3c75a64ed06c12e",
                "5fe6c7a10651e24f",
                "fcef6f827fc6d66a",
                "fb46ab895adecb5f",
                "29e169efbea94649"
            ],
            [],
            [],
            []
        ]
    },
    {
        "id": "f3cf896fcee21ba2",
        "type": "link out",
        "z": "a8c42bb58872b9c4",
        "name": "Wetter raus",
        "mode": "link",
        "links": [
            "106179fe06238d06",
            "c8edcd4622f26bb6"
        ],
        "x": 1915,
        "y": 140,
        "wires": []
    },
    {
        "id": "378587d7a1ef1f15",
        "type": "cronplus",
        "z": "a8c42bb58872b9c4",
        "name": "täglich um 6 Uhr 2",
        "outputField": "payload",
        "timeZone": "",
        "storeName": "",
        "commandResponseMsgOutput": "output1",
        "defaultLocation": "",
        "defaultLocationType": "default",
        "outputs": 1,
        "options": [
            {
                "name": "schedule1",
                "topic": "topic1",
                "payloadType": "date",
                "payload": "",
                "expressionType": "cron",
                "expression": "0 2 6 * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            }
        ],
        "x": 150,
        "y": 80,
        "wires": [
            [
                "b685154ad02edf1e"
            ]
        ]
    },
    {
        "id": "360ebd61a619e388",
        "type": "debug",
        "z": "a8c42bb58872b9c4",
        "name": "Debug Wetterdaten",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1230,
        "y": 100,
        "wires": []
    },
    {
        "id": "67a6651d8b0c2287",
        "type": "trigger",
        "z": "a8c42bb58872b9c4",
        "name": "",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "-5",
        "extend": false,
        "overrideDelay": false,
        "units": "min",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1530,
        "y": 140,
        "wires": [
            [
                "43558f83c9c60803"
            ]
        ]
    },
    {
        "id": "9889cbdb0541e589",
        "type": "function",
        "z": "a8c42bb58872b9c4",
        "name": "Format Daten",
        "func": "var fcdata = {};\nvar temp, bild, wochentag, bewoelkung;\nvar units=flow.get('units');\n\nlet Heute = global.get('g_Heute').slice(0, 10);\nlet Morgen = global.get('g_Morgen').slice(0, 10);\nlet Heute_plus2 = global.get('g_Heute_plus2').slice(0, 10);\nlet Heute_plus3 = global.get('g_Heute_plus3').slice(0, 10);\nlet Heute_plus4 = global.get('g_Heute_plus4').slice(0, 10);\n\nif (units===undefined)\n{\n  units=\"metric\";\n}\n\nfunction formatTemp(high, low){\n    if (units == \"imperial\") {\n        if (low){\n          temp = parseFloat(high).toFixed() + '/' + parseFloat(low).toFixed()\n        }\n        else {\n          temp = parseFloat(high).toFixed() + '°F'\n        }\n    }\n    else { // metric\n        if (low){\n          temp = parseFloat(high).toFixed() + '/' + parseFloat(low).toFixed()\n        }\n        else {\n          temp = parseFloat(high).toFixed() + '°C'\n        }\n    }\n    return temp;\n}\n\n\nfunction iconSuche(Stunde, Tag, Icon) {\n  var Datum, Uhrzeit;\n  for (var i = 0; i < 39; i++) {\n    Datum = msg.payload[i].dt_txt.slice(0, 10);\n    Uhrzeit = msg.payload[i].dt_txt.slice(11, 13);\n\n    if (Uhrzeit == Stunde && Datum == Tag) {\n      Icon = msg.payload[i].weather[0].icon\n    }\n  }\n  return Icon;\n}\n\nfunction tempSuche(Stunde, Tag, Temp) {\n  var Datum, Uhrzeit;\n  for (var i = 0; i < 39; i++) {\n    Datum = msg.payload[i].dt_txt.slice(0, 10);\n    Uhrzeit = msg.payload[i].dt_txt.slice(11, 13);\n\n    if (Uhrzeit == Stunde && Datum == Tag) {\n      Temp = parseFloat(msg.payload[i].main.temp).toFixed() + '°C'  \n    }\n  }\n  return Temp;\n}\n\nfunction tagSuche(Stunde, Tag, Wochentag) {\n  var Datum, Uhrzeit;\n  for (var i = 0; i < 39; i++) {\n    Datum = msg.payload[i].dt_txt.slice(0, 10);\n    Uhrzeit = msg.payload[i].dt_txt.slice(11, 13);\n\n    if (Uhrzeit == Stunde && Datum == Tag) {\n      var dateObject = new Date(msg.payload[i].dt * 1000);\n      Wochentag = dateObject.toLocaleString(flow.get('de'), { timezone: msg.payload[i].dt, weekday: 'short' });\n      //Wochentag = { timezone: msg.payload[i].sys.dt, weekday: 'short' };\n    }\n  }\n  return Wochentag;\n}\n\nfunction bewoelkungSuche(Stunde, Tag, Bewoelkung) {\n  var Datum, Uhrzeit;\n  for (var i = 0; i < 39; i++) {\n    Datum = msg.payload[i].dt_txt.slice(0, 10);\n    Uhrzeit = msg.payload[i].dt_txt.slice(11, 13);\n\n    if (Uhrzeit == Stunde && Datum == Tag) {\n      Bewoelkung = parseFloat(msg.payload[i].clouds.all).toFixed() + '%' \n      //Bewoelkung = msg.payload[i].clouds.all\n    }\n  }\n  return Bewoelkung;\n}\n\n\n// prepare forecast data for CSS based ui widget\nfcdata.payload = {\n  rowtext: {\n    data01: {\n      cell01: tagSuche('09', Heute, wochentag),\n      cell02: tagSuche('12', Heute, wochentag),\n      cell03: tagSuche('15', Heute, wochentag),\n      cell04: tagSuche('09', Morgen, wochentag),\n      cell05: tagSuche('12', Morgen, wochentag),\n      cell06: tagSuche('15', Morgen, wochentag),\n      cell07: tagSuche('09', Heute_plus2, wochentag),\n      cell08: tagSuche('12', Heute_plus2, wochentag),\n      cell09: tagSuche('15', Heute_plus2, wochentag),\n      cell10: tagSuche('09', Heute_plus3, wochentag),\n      cell11: tagSuche('12', Heute_plus3, wochentag),\n      cell12: tagSuche('15', Heute_plus3, wochentag),\n      cell13: tagSuche('09', Heute_plus4, wochentag),\n      cell14: tagSuche('12', Heute_plus4, wochentag),\n      cell15: tagSuche('15', Heute_plus4, wochentag),\n    },\n  \tdata02: {\n      cell01: '09:00',\n      cell02: '12:00',\n      cell03: '15:00',\n      cell04: '09:00',\n      cell05: '12:00',\n      cell06: '15:00',\n      cell07: '09:00',\n      cell08: '12:00',\n      cell09: '15:00',\n      cell10: '09:00',\n      cell11: '12:00',\n      cell12: '15:00',\n      cell13: '09:00',\n      cell14: '12:00',\n      cell15: '15:00',\n  \t},\n    data03: {\n      cell01: bewoelkungSuche('09', Heute, bewoelkung),\n      cell02: bewoelkungSuche('12', Heute, bewoelkung),\n      cell03: bewoelkungSuche('15', Heute, bewoelkung),\n      cell04: bewoelkungSuche('09', Morgen, bewoelkung),\n      cell05: bewoelkungSuche('12', Morgen, bewoelkung),\n      cell06: bewoelkungSuche('15', Morgen, bewoelkung),\n      cell07: bewoelkungSuche('09', Heute_plus2, bewoelkung),\n      cell08: bewoelkungSuche('12', Heute_plus2, bewoelkung),\n      cell09: bewoelkungSuche('15', Heute_plus2, bewoelkung),\n      cell10: bewoelkungSuche('09', Heute_plus3, bewoelkung),\n      cell11: bewoelkungSuche('12', Heute_plus3, bewoelkung),\n      cell12: bewoelkungSuche('15', Heute_plus3, bewoelkung),\n      cell13: bewoelkungSuche('09', Heute_plus4, bewoelkung),\n      cell14: bewoelkungSuche('12', Heute_plus4, bewoelkung),\n      cell15: bewoelkungSuche('15', Heute_plus4, bewoelkung),\n    },\n  \tdata04: {\n      cell01: tempSuche('09', Heute, temp),\n      cell02: tempSuche('12', Heute, temp),\n      cell03: tempSuche('15', Heute, temp),\n      cell04: tempSuche('09', Morgen, temp),\n      cell05: tempSuche('12', Morgen, temp),\n      cell06: tempSuche('15', Morgen, temp),\n      cell07: tempSuche('09', Heute_plus2, temp),\n      cell08: tempSuche('12', Heute_plus2, temp),\n      cell09: tempSuche('15', Heute_plus2, temp),\n      cell10: tempSuche('09', Heute_plus3, temp),\n      cell11: tempSuche('12', Heute_plus3, temp),\n      cell12: tempSuche('15', Heute_plus3, temp),\n      cell13: tempSuche('09', Heute_plus4, temp),\n      cell14: tempSuche('12', Heute_plus4, temp),\n      cell15: tempSuche('15', Heute_plus4, temp),\n  \t}\n  },\n  rowicons: {\n  \tdata01: {\n      cell01: iconSuche('09', Heute, bild),\n      cell02: iconSuche('12', Heute, bild),\n      cell03: iconSuche('15', Heute, bild),\n      cell04: iconSuche('09', Morgen, bild),\n      cell05: iconSuche('12', Morgen, bild),\n      cell06: iconSuche('15', Morgen, bild),\n      cell07: iconSuche('09', Heute_plus2, bild),\n      cell08: iconSuche('12', Heute_plus2, bild),\n      cell09: iconSuche('15', Heute_plus2, bild),\n      cell10: iconSuche('09', Heute_plus3, bild),\n      cell11: iconSuche('12', Heute_plus3, bild),\n      cell12: iconSuche('15', Heute_plus3, bild),\n      cell13: iconSuche('09', Heute_plus4, bild),\n      cell14: iconSuche('12', Heute_plus4, bild),\n      cell15: iconSuche('15', Heute_plus4, bild),\n  \t}\n  }\n}\n\nreturn fcdata;",
        "outputs": 1,
        "timeout": "",
        "noerr": 15,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1500,
        "y": 180,
        "wires": [
            [
                "c59f36d5e14adca8"
            ]
        ]
    },
    {
        "id": "c59f36d5e14adca8",
        "type": "ui_template",
        "z": "a8c42bb58872b9c4",
        "group": "70fb931.dfc146c",
        "name": "CSS ausgeben",
        "order": 14,
        "width": 20,
        "height": 4,
        "format": "<link rel=\"stylesheet\" href=\"/css/weather-icons.css\">\n<style>\n    .windrose {\n        //background-color: rgb(0,255,0) !important;\n        foreground-color: rgb(0,255,0) !important;\n        //background-image: url(\"https://image.flaticon.com/icons/svg/60/60993.svg\") !important;\n        background: url(\"https://image.flaticon.com/icons/svg/60/60993.svg\") 0 0 / 50px 30px repeat !important;\n    }\n    .windrose > .units {\n    font-size: 150px !important;\n    }\n    .windrose > .nr-dashboard-gauge > svg > text {\n        font-size: 20px !important;\n        font-weight: bold !important;\n        //fill: rgb(0,255,0) !important;\n        //color: rgb(0,255,0) !important;\n    }\n</style>\n\n<div style=\"height: 100%; justify-content: center; align-items: center;\">\n <div layout=\"rowicons\" layout-align=\"space-around center\" ng-repeat=\"data in msg.payload.rowicons\" style=\"font-size:150%;padding-top: 10px;padding-bottom: 10px\">\n  <span flex style=\"color: #0c0b0b;text-align: center\"><i class=\"wi wi-owm-{{data.cell01}}\"></i></span>\n  <span flex style=\"color: #035fec;text-align: center\"><i class=\"wi wi-owm-{{data.cell02}}\"></i></span>\n  <span flex style=\"color: #ec2a03;text-align: center\"><i class=\"wi wi-owm-{{data.cell03}}\"></i></span>\n  <span flex style=\"color: #0c0b0b;text-align: center\"><i class=\"wi wi-owm-{{data.cell04}}\"></i></span>\n  <span flex style=\"color: #035fec;text-align: center\"><i class=\"wi wi-owm-{{data.cell05}}\"></i></span>\n  <span flex style=\"color: #ec2a03;text-align: center\"><i class=\"wi wi-owm-{{data.cell06}}\"></i></span>\n  <span flex style=\"color: #0c0b0b;text-align: center\"><i class=\"wi wi-owm-{{data.cell07}}\"></i></span>\n  <span flex style=\"color: #035fec;text-align: center\"><i class=\"wi wi-owm-{{data.cell08}}\"></i></span>\n  <span flex style=\"color: #ec2a03;text-align: center\"><i class=\"wi wi-owm-{{data.cell09}}\"></i></span>\n  <span flex style=\"color: #0c0b0b;text-align: center\"><i class=\"wi wi-owm-{{data.cell10}}\"></i></span>\n  <span flex style=\"color: #035fec;text-align: center\"><i class=\"wi wi-owm-{{data.cell11}}\"></i></span>\n  <span flex style=\"color: #ec2a03;text-align: center\"><i class=\"wi wi-owm-{{data.cell12}}\"></i></span>\n  <span flex style=\"color: #0c0b0b;text-align: center\"><i class=\"wi wi-owm-{{data.cell13}}\"></i></span>\n  <span flex style=\"color: #035fec;text-align: center\"><i class=\"wi wi-owm-{{data.cell14}}\"></i></span>\n  <span flex style=\"color: #ec2a03;text-align: center\"><i class=\"wi wi-owm-{{data.cell15}}\"></i></span>\n </div>\n <div layout=\"rowtext\" layout-align=\"space-around center\" ng-repeat=\"data in msg.payload.rowtext\" style=\"line-height: 150%\">\n  <span flex style=\"color: #0c0b0b;text-align: center\">{{data.cell01}}</span>\n  <span flex style=\"color: #035fec;text-align: center\">{{data.cell02}}</span>\n  <span flex style=\"color: #ec2a03;text-align: center\">{{data.cell03}}</span>\n  <span flex style=\"color: #0c0b0b;text-align: center\">{{data.cell04}}</span>\n  <span flex style=\"color: #035fec;text-align: center\">{{data.cell05}}</span>\n  <span flex style=\"color: #ec2a03;text-align: center\">{{data.cell06}}</span>\n  <span flex style=\"color: #0c0b0b;text-align: center\">{{data.cell07}}</span>\n  <span flex style=\"color: #035fec;text-align: center\">{{data.cell08}}</span>\n  <span flex style=\"color: #ec2a03;text-align: center\">{{data.cell09}}</span>\n  <span flex style=\"color: #0c0b0b;text-align: center\">{{data.cell10}}</span>\n  <span flex style=\"color: #035fec;text-align: center\">{{data.cell11}}</span>\n  <span flex style=\"color: #ec2a03;text-align: center\">{{data.cell12}}</span>\n  <span flex style=\"color: #0c0b0b;text-align: center\">{{data.cell13}}</span>\n  <span flex style=\"color: #035fec;text-align: center\">{{data.cell14}}</span>\n  <span flex style=\"color: #ec2a03;text-align: center\">{{data.cell15}}</span>\n </div>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1780,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "5457847e29a98fff",
        "type": "ui_text",
        "z": "a8c42bb58872b9c4",
        "group": "70fb931.dfc146c",
        "order": 10,
        "width": 4,
        "height": 2,
        "name": "SunsetTime",
        "label": "",
        "format": "<i class=\"wi wi-wu-sunny\"></i>&nbsp;<i class=\"fa fa-arrow-down\"></i>&nbsp;&nbsp;{{msg.Sonnenuntergang}}",
        "layout": "row-center",
        "className": "",
        "style": true,
        "font": "Arial Black,Arial Black,Gadget,sans-serif",
        "fontSize": "30",
        "color": "#000000",
        "x": 1770,
        "y": 440,
        "wires": []
    },
    {
        "id": "f360cc5d5024104c",
        "type": "ui_text",
        "z": "a8c42bb58872b9c4",
        "group": "70fb931.dfc146c",
        "order": 4,
        "width": 4,
        "height": 2,
        "name": "SunriseTime",
        "label": "",
        "format": "<i class=\"wi wi-owm-01d\"></i>&nbsp;<i class=\"fa fa-arrow-up\"></i>&nbsp;&nbsp;{{msg.Sonnenaufgang}}",
        "layout": "row-center",
        "className": "",
        "style": true,
        "font": "Arial Black,Arial Black,Gadget,sans-serif",
        "fontSize": "30",
        "color": "#000000",
        "x": 1770,
        "y": 400,
        "wires": []
    },
    {
        "id": "1f6a08bd2d3a3937",
        "type": "ui_text",
        "z": "a8c42bb58872b9c4",
        "group": "70fb931.dfc146c",
        "order": 2,
        "width": 5,
        "height": 2,
        "name": "Temperatur",
        "label": "",
        "format": "<i class=\"fa fa-thermometer-half\" wi-5x></i>&nbsp;&nbsp;{{msg.payload.toFixed(1) + ' °C'}}",
        "layout": "row-center",
        "className": "",
        "style": true,
        "font": "Arial Black,Arial Black,Gadget,sans-serif",
        "fontSize": "40",
        "color": "#000000",
        "x": 1770,
        "y": 220,
        "wires": []
    },
    {
        "id": "e1f73b81b67718aa",
        "type": "change",
        "z": "a8c42bb58872b9c4",
        "name": "",
        "rules": [
            {
                "t": "move",
                "p": "g_Temperatur",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1540,
        "y": 220,
        "wires": [
            [
                "1f6a08bd2d3a3937"
            ]
        ]
    },
    {
        "id": "c6463117310268bb",
        "type": "trigger",
        "z": "a8c42bb58872b9c4",
        "name": "",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "-15",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1240,
        "y": 180,
        "wires": [
            [
                "9889cbdb0541e589"
            ]
        ]
    },
    {
        "id": "29fc8108c4914fc7",
        "type": "trigger",
        "z": "a8c42bb58872b9c4",
        "name": "",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "-30",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1240,
        "y": 240,
        "wires": [
            [
                "e1f73b81b67718aa",
                "0ca6b5898c878222",
                "39c3e050663f1930"
            ]
        ]
    },
    {
        "id": "39c3e050663f1930",
        "type": "change",
        "z": "a8c42bb58872b9c4",
        "name": "bewege g_Luftfeuchte",
        "rules": [
            {
                "t": "move",
                "p": "g_Luftfeuchte",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1520,
        "y": 260,
        "wires": [
            [
                "7945b368594573cb"
            ]
        ]
    },
    {
        "id": "7945b368594573cb",
        "type": "ui_text",
        "z": "a8c42bb58872b9c4",
        "group": "70fb931.dfc146c",
        "order": 9,
        "width": 3,
        "height": 2,
        "name": "Luftfeuchte",
        "label": "",
        "format": "<link rel=\"stylesheet\" href=\"/css/weather-icons.css\"><i class=\"wi wi-humidity\"></i>&nbsp;&nbsp;{{msg.payload.toFixed(0)}}",
        "layout": "col-center",
        "className": "",
        "style": true,
        "font": "Arial Black,Arial Black,Gadget,sans-serif",
        "fontSize": "40",
        "color": "#000000",
        "x": 1770,
        "y": 260,
        "wires": []
    },
    {
        "id": "ce9ddeac61d3daea",
        "type": "sunrise",
        "z": "a8c42bb58872b9c4",
        "name": "",
        "lat": "48.8981633",
        "lon": "13.1822262",
        "start": "sunrise",
        "end": "sunsetStart",
        "soff": 0,
        "eoff": 0,
        "x": 1270,
        "y": 420,
        "wires": [
            [
                "e6d8f2c28045bddc",
                "f1e4d415bc64a9b5"
            ],
            [
                "0c36ede54ded6f13"
            ]
        ]
    },
    {
        "id": "0c36ede54ded6f13",
        "type": "debug",
        "z": "a8c42bb58872b9c4",
        "name": "Sunset debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1500,
        "y": 480,
        "wires": []
    },
    {
        "id": "e6d8f2c28045bddc",
        "type": "moment",
        "z": "a8c42bb58872b9c4",
        "name": "",
        "topic": "",
        "input": "start",
        "inputType": "msg",
        "inTz": "Europe/Berlin",
        "adjAmount": 0,
        "adjType": "days",
        "adjDir": "add",
        "format": "HH:mm",
        "locale": "de-DE",
        "output": "Sonnenaufgang",
        "outputType": "msg",
        "outTz": "Europe/Berlin",
        "x": 1520,
        "y": 400,
        "wires": [
            [
                "f360cc5d5024104c"
            ]
        ]
    },
    {
        "id": "f1e4d415bc64a9b5",
        "type": "moment",
        "z": "a8c42bb58872b9c4",
        "name": "",
        "topic": "",
        "input": "end",
        "inputType": "msg",
        "inTz": "Europe/Berlin",
        "adjAmount": 0,
        "adjType": "days",
        "adjDir": "add",
        "format": "HH:mm",
        "locale": "de-DE",
        "output": "Sonnenuntergang",
        "outputType": "msg",
        "outTz": "Europe/Berlin",
        "x": 1520,
        "y": 440,
        "wires": [
            [
                "5457847e29a98fff"
            ]
        ]
    },
    {
        "id": "64da6180f472e98b",
        "type": "ui_gauge",
        "z": "a8c42bb58872b9c4",
        "name": "Windrose",
        "group": "70fb931.dfc146c",
        "order": 3,
        "width": 4,
        "height": 4,
        "gtype": "compass",
        "title": "",
        "label": "{{msg.topic}}",
        "format": "{{value}}",
        "min": 0,
        "max": "359",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "windrose",
        "x": 1760,
        "y": 300,
        "wires": []
    },
    {
        "id": "0ca6b5898c878222",
        "type": "function",
        "z": "a8c42bb58872b9c4",
        "name": "Windrichtung",
        "func": "var sL_Windrichtungsname;\n\nlet nL_Windrichtung = global.get('g_Windrichtung');\n\nif (isNaN(nL_Windrichtung)) {\n  nL_Windrichtung = -1;\n}\n\nvar degreesToCardinal = function(deg){\n  if (deg>11.25 && deg<=33.75){return \"NNO\";}\n  else if (deg>33.75 && deg<56.25){return \"NO\";}\n  else if (deg>56.25 && deg<78.75){return \"ONO\";}\n  else if (deg>78.75 && deg<101.25){return \"O\";}\n  else if (deg>101.25 && deg<123.75){return \"OSO\";}\n  else if (deg>123.75 && deg<146.25){return \"SO\";}\n  else if (deg>146.25 && deg<168.75){return \"SSO\";}\n  else if (deg>168.75 && deg<191.25){return \"S\";}\n  else if (deg>191.25 && deg<213.75){return \"SSW\";}\n  else if (deg>213.75 && deg<236.25){return \"SW\";}\n  else if (deg>236.25 && deg<258.75){return \"WSW\";}\n  else if (deg>258.75 && deg<281.25){return \"W\";}\n  else if (deg>281.25 && deg<303.75){return \"WNW\";}\n  else if (deg>303.75 && deg<326.25){return \"NW\";}\n  else if (deg>326.25 && deg<348.75){return \"NNW\";}\n  else {return \"N\";}\n}\n\nsL_Windrichtungsname = degreesToCardinal(nL_Windrichtung);\n\nmsg.payload = nL_Windrichtung;\nmsg.topic = sL_Windrichtungsname;\n\nreturn [msg];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1490,
        "y": 300,
        "wires": [
            [
                "64da6180f472e98b"
            ]
        ]
    },
    {
        "id": "afcc27bcc24015b3",
        "type": "link out",
        "z": "a8c42bb58872b9c4",
        "name": "Wetter raus zum Timer",
        "mode": "link",
        "links": [
            "a3a58f54ab69022b"
        ],
        "x": 1915,
        "y": 100,
        "wires": []
    },
    {
        "id": "e3c1b281413800c0",
        "type": "bool",
        "z": "a8c42bb58872b9c4",
        "name": "",
        "outputs": 1,
        "inputField": "payload",
        "outputField": "payload",
        "outputFormat": "bool",
        "handleNull": "null",
        "invert": true,
        "strict": false,
        "x": 1830,
        "y": 100,
        "wires": [
            [
                "afcc27bcc24015b3"
            ]
        ]
    },
    {
        "id": "43558f83c9c60803",
        "type": "switch",
        "z": "a8c42bb58872b9c4",
        "name": "ist true",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1710,
        "y": 140,
        "wires": [
            [
                "e3c1b281413800c0",
                "f3cf896fcee21ba2"
            ]
        ]
    },
    {
        "id": "1f282dc46c217f8a",
        "type": "comment",
        "z": "a8c42bb58872b9c4",
        "name": "Bypass einschalten wenn lange kalt oder bewölkt",
        "info": "",
        "x": 2140,
        "y": 140,
        "wires": []
    },
    {
        "id": "47c911790505353e",
        "type": "comment",
        "z": "a8c42bb58872b9c4",
        "name": "Timer ausschalten wenn lange kalt oder bewölkt",
        "info": "",
        "x": 2140,
        "y": 100,
        "wires": []
    },
    {
        "id": "952ffcf0.f84ac",
        "type": "ui_text",
        "z": "3d0c8966401fefce",
        "group": "d182ad5fad0e8e1a",
        "order": 1,
        "width": 16,
        "height": 2,
        "name": "CRON Beschreibung",
        "label": "Expression Description (updates as you type)...",
        "format": "{{msg.payload.result.description}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 740,
        "y": 220,
        "wires": []
    },
    {
        "id": "d657bcf5.0f961",
        "type": "cronplus",
        "z": "3d0c8966401fefce",
        "name": "",
        "outputField": "payload",
        "timeZone": "",
        "storeName": "",
        "commandResponseMsgOutput": "output1",
        "defaultLocation": "",
        "defaultLocationType": "default",
        "outputs": 1,
        "options": [],
        "x": 540,
        "y": 220,
        "wires": [
            [
                "952ffcf0.f84ac"
            ]
        ]
    },
    {
        "id": "8a3b6d25.2cc45",
        "type": "function",
        "z": "3d0c8966401fefce",
        "name": "command schreiben",
        "func": "msg.payload = {\n    \"command\": \"describe\",\n    \"expression\": msg.payload\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 220,
        "wires": [
            [
                "d657bcf5.0f961"
            ]
        ]
    },
    {
        "id": "7f182a47.6a92d4",
        "type": "change",
        "z": "3d0c8966401fefce",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "ui_add_schedule_name",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "178c29c6.469c26",
        "type": "change",
        "z": "3d0c8966401fefce",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "ui_add_schedule_payload",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "4e82804c.deec8",
        "type": "change",
        "z": "3d0c8966401fefce",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "ui_add_schedule_expression",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 400,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "b5b431d9.bfb55",
        "type": "change",
        "z": "3d0c8966401fefce",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "payload.payload",
                "pt": "msg",
                "to": "ui_add_schedule_payload",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "payload.name",
                "pt": "msg",
                "to": "ui_add_schedule_name",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "payload.expression",
                "pt": "msg",
                "to": "ui_add_schedule_expression",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "payload.command",
                "pt": "msg",
                "to": "add",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.type",
                "pt": "msg",
                "to": "str",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 330,
        "y": 500,
        "wires": [
            [
                "f78bacd7.fd897",
                "3d53337b9767e737",
                "3f284188.fdf30e"
            ]
        ]
    },
    {
        "id": "3f284188.fdf30e",
        "type": "cronplus",
        "z": "3d0c8966401fefce",
        "name": "",
        "outputField": "payload",
        "timeZone": "",
        "storeName": "",
        "commandResponseMsgOutput": "output1",
        "defaultLocation": "",
        "defaultLocationType": "default",
        "outputs": 1,
        "options": [],
        "x": 690,
        "y": 500,
        "wires": [
            [
                "abf40655.039a88"
            ]
        ]
    },
    {
        "id": "be8bc068.715f3",
        "type": "ui_toast",
        "z": "3d0c8966401fefce",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1160,
        "y": 500,
        "wires": []
    },
    {
        "id": "abf40655.039a88",
        "type": "switch",
        "z": "3d0c8966401fefce",
        "name": "1=Cron Event   2=List Results ",
        "property": "cronplus.triggerTimestamp",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 900,
        "y": 500,
        "wires": [
            [
                "624bcd90c236223f",
                "be8bc068.715f3"
            ],
            [
                "7ae8d780.88fc08"
            ]
        ]
    },
    {
        "id": "eba9438.7bf69c",
        "type": "catch",
        "z": "3d0c8966401fefce",
        "name": "Fehler abfangen",
        "scope": null,
        "uncaught": false,
        "x": 140,
        "y": 840,
        "wires": [
            [
                "d860d2d.5afc53",
                "92cbfc6f.77ad5",
                "6dea6db1e66c69ec",
                "c73a36baba02a13c"
            ]
        ]
    },
    {
        "id": "92cbfc6f.77ad5",
        "type": "ui_toast",
        "z": "3d0c8966401fefce",
        "position": "top right",
        "displayTime": "3",
        "highlight": "red",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "Error...",
        "name": "",
        "x": 380,
        "y": 920,
        "wires": []
    },
    {
        "id": "f78bacd7.fd897",
        "type": "ui_button",
        "z": "3d0c8966401fefce",
        "name": "Refresh",
        "group": "d182ad5fad0e8e1a",
        "order": 18,
        "width": 1,
        "height": 1,
        "passthru": true,
        "label": "",
        "tooltip": "Get status of jobs",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "fa-refresh",
        "payload": "{\"command\":\"list-all\"}",
        "payloadType": "json",
        "topic": "",
        "topicType": "str",
        "x": 530,
        "y": 520,
        "wires": [
            [
                "3f284188.fdf30e"
            ]
        ]
    },
    {
        "id": "2e128d0.3fb4a74",
        "type": "ui_text_input",
        "z": "3d0c8966401fefce",
        "name": "",
        "label": "Expression",
        "tooltip": "CRON expression or date/csv list of dates",
        "group": "d182ad5fad0e8e1a",
        "order": 15,
        "width": 4,
        "height": 1,
        "passthru": true,
        "mode": "text",
        "delay": "100",
        "topic": "",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 130,
        "y": 180,
        "wires": [
            [
                "8a3b6d25.2cc45",
                "4e82804c.deec8"
            ]
        ]
    },
    {
        "id": "bda83091.c7f44",
        "type": "ui_text_input",
        "z": "3d0c8966401fefce",
        "name": "",
        "label": "Name",
        "tooltip": "Schedule Name",
        "group": "d182ad5fad0e8e1a",
        "order": 14,
        "width": 4,
        "height": 1,
        "passthru": true,
        "mode": "text",
        "delay": "100",
        "topic": "",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 110,
        "y": 100,
        "wires": [
            [
                "7f182a47.6a92d4"
            ]
        ]
    },
    {
        "id": "96463052.88a8d",
        "type": "ui_button",
        "z": "3d0c8966401fefce",
        "name": "",
        "group": "d182ad5fad0e8e1a",
        "order": 17,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Add",
        "tooltip": "Add or update named schedule",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "send",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 150,
        "y": 500,
        "wires": [
            [
                "b5b431d9.bfb55"
            ]
        ]
    },
    {
        "id": "5bb3aee1.5fc43",
        "type": "ui_text_input",
        "z": "3d0c8966401fefce",
        "name": "",
        "label": "Payload",
        "tooltip": "Payload to send when schedule fires",
        "group": "d182ad5fad0e8e1a",
        "order": 16,
        "width": 4,
        "height": 1,
        "passthru": true,
        "mode": "text",
        "delay": "100",
        "topic": "",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 120,
        "y": 140,
        "wires": [
            [
                "178c29c6.469c26"
            ]
        ]
    },
    {
        "id": "e15ad659.7d0128",
        "type": "ui_template",
        "z": "3d0c8966401fefce",
        "group": "d182ad5fad0e8e1a",
        "name": "",
        "order": 19,
        "width": 16,
        "height": 7,
        "format": "<style type=\"text/css\">\n.t1  {border-collapse:collapse;border-spacing:0;border-color:#ccc;}\n.t1 td{font-family:Arial, sans-serif;font-size:14px;padding:8px 3px;border-style:solid;border-width:0px;overflow:hidden;word-break:normal;border-top-width:1px;border-bottom-width:1px;border-color:#ccc;color:#333;background-color:#fff;}\n.t1 th{font-family:Arial, sans-serif;font-size:14px;font-weight:normal;padding:10px 5px;border-style:solid;border-width:1px;overflow:hidden;word-break:normal;border-color:#ccc;color:#333;background-color:#f0f0f0;}\n.t1 .t1-36r9{background-color:#000000;color:#ffffff;text-align:left;vertical-align:top}\n.t1 .t1-x2zo{background-color:#c0c0c0;font-size:small;text-align:left;vertical-align:top}\n.t1 .t1-o73e{background-color:#c0c0c0;font-size:small;text-align:center;vertical-align:top}\n.t1 .t1-5qt9{font-size:small;text-align:left;vertical-align:top}\n.t1 .t1-5qta{font-size:small;text-align:center;vertical-align:middle}\n</style>\n<table class=\"t1\">\n  <tr>\n    <th class=\"t1-36r9\" colspan=\"9\">CRON Schedules</th>\n  </tr>\n  <tr>\n    <td class=\"t1-x2zo\">Name</td>\n    <td class=\"t1-x2zo\">Expression</td>\n    <td class=\"t1-x2zo\">Payload</td>\n    <td class=\"t1-x2zo\">Description</td>\n    <td class=\"t1-x2zo\">Next run</td>\n    <td class=\"t1-x2zo\">State</td>\n    <td class=\"t1-o73e\">Delete</td>\n    <td class=\"t1-o73e\">Pause</td>\n    <td class=\"t1-o73e\">Resume</td>\n  </tr>\n  <tr  ng-repeat=\"item in msg.payload\">\n    <td class=\"t1-5qt9\">{{item.config.name}}</td>\n    <td class=\"t1-5qt9\" style=\"white-space: nowrap\" nowrap>{{item.config.expression}}</td>\n    <td class=\"t1-5qt9\">{{item.config.payload}}</td>\n    <td class=\"t1-5qt9\">{{item.status.description}}</td>\n    <td class=\"t1-5qt9\">{{item.status.nextDescription}}</td>\n    <td class=\"t1-5qta\"><i class=\"fa fa-{{item.status.isRunning ? 'play' : 'pause'}}\"> </i></td>\n\n   <td class=\"t1-5qta\">\n       <md-button class=\"md-raised\"\n        ng-click=\"send([[{payload:{command:'remove', name: item.config.name}}, {payload:{command:'list-all'}}]]);\"> <i class=\"fa fa-trash\"> </i></md-button>\n   </td>\n   <td class=\"t1-5qta\">\n       <md-button class=\"button\" \n       ng-click=\"send([[{payload:{command:'pause', name: item.config.name}}, {payload:{command:'list-all'}}]]);\"> <i class=\"fa fa-pause\"> </i></md-button>\n   </td>\n   <td class=\"t1-5qta\">\n       <md-button class=\"button\" \n       ng-click=\"send([[{payload:{command:'start', name: item.config.name}}, {payload:{command:'list-all'}}]]);\"> <i class=\"fa fa-play\"> </i></md-button>\n   </td>\n\n  </tr>\n\n </tbody>\n</table>\n\n<!--<table id=\"table\" class=\"table table-striped table-responsive-md btn-table\" >-->\n<!--     <tr>-->\n<!--        <th>Name</th> -->\n<!--        <th>Expression</th> -->\n<!--        <th>Payload</th> -->\n<!--        <th>Description</th>-->\n<!--        <th>Next run</th>-->\n<!--        <th>State</th>-->\n<!--        <th>Delete</th>-->\n<!--        <th>Pause</th>-->\n<!--        <th>Resume</th>-->\n<!-- </tr>-->\n<!-- <tbody>-->\n<!-- <tr ng-repeat=\"item in msg.payload\">-->\n<!--   <td >{{item.config.name}}</td>-->\n<!--   <td style=\"white-space: nowrap\" nowrap>{{item.config.expression}}</td>-->\n<!--   <td >{{item.config.payload}}</td>-->\n<!--   <td >{{item.status.description}}</td>-->\n<!--   <td >{{item.status.nextDescription}}</td>-->\n<!--   <td >{{item.status.isRunning ? 'Running' : 'Paused'}}</td>-->\n<!--   <td>-->\n<!--       <md-button class=\"md-raised\"-->\n<!--        ng-click=\"send([[{payload:{command:'remove', name: item.config.name}}, {payload:{command:'list-all'}}]]);\"> <i class=\"fa fa-trash\"> </i></md-button>-->\n<!--   </td>-->\n<!--   <td>-->\n<!--       <md-button class=\"button\" -->\n<!--       ng-click=\"send([[{payload:{command:'pause', name: item.config.name}}, {payload:{command:'list-all'}}]]);\"> <i class=\"fa fa-pause\"> </i></md-button>-->\n<!--   </td>-->\n<!--   <td>-->\n<!--       <md-button class=\"button\" -->\n<!--       ng-click=\"send([[{payload:{command:'start', name: item.config.name}}, {payload:{command:'list-all'}}]]);\"> <i class=\"fa fa-play\"> </i></md-button>-->\n<!--   </td>-->\n<!-- </tr>-->\n<!-- </tbody>-->\n<!--</table>-->\n\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1340,
        "y": 540,
        "wires": [
            [
                "851d95e5.61cc58"
            ]
        ]
    },
    {
        "id": "7ae8d780.88fc08",
        "type": "function",
        "z": "3d0c8966401fefce",
        "name": "Tabelle schreiben",
        "func": "if(!msg.payload || !msg.payload.result || !msg.payload.result.length){\n    msg.payload = [];\n    return msg;\n}\n\nmsg.payload = msg.payload.result;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1170,
        "y": 540,
        "wires": [
            [
                "e15ad659.7d0128"
            ]
        ]
    },
    {
        "id": "d860d2d.5afc53",
        "type": "debug",
        "z": "3d0c8966401fefce",
        "name": "catch msg",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 370,
        "y": 880,
        "wires": []
    },
    {
        "id": "851d95e5.61cc58",
        "type": "link out",
        "z": "3d0c8966401fefce",
        "name": "Timer Output",
        "mode": "link",
        "links": [
            "e48ee70d.63d348"
        ],
        "x": 1445,
        "y": 540,
        "wires": []
    },
    {
        "id": "e73772df.72258",
        "type": "ui_template",
        "z": "3d0c8966401fefce",
        "group": "d182ad5fad0e8e1a",
        "name": "CRON Info",
        "order": 20,
        "width": 16,
        "height": 12,
        "format": "<div>\n<pre>CRON Format...\n\n    s  m  h  md m  wd y\n    |  |  |  |  |  |  |\n    *  *  *  *  *  *  *    Field              Allowed values    Special symbols\n    |  |  |  |  |  |  |    -----------------  ---------------   ---------------\n    `--|--|--|--|--|--|->  Second (optional)  0-59              * / , -\n       `--|--|--|--|--|->  Minute             0-59              * / , -\n          `--|--|--|--|->  Hour               0-23              * / , -\n             `--|--|--|->  Day of Month       1-31              * / , - L W\n                `--|--|->  Month              1-12 or JAN-DEC   * / , -\n                   `--|->  Day of Week        0-7 or SUN-SAT    * / , - L #\n                      `->  Year (optional)    1970-2099         * / , -\n\n  Name:irgendwas  Payload Values: Wert grösser -1 Regelung wird überlagert / bei -1 Automatik wird wieder aktiviert\n  Name:Abgabelimit  Payload Values: Wert grösser -1 -> Limit wird gesetzt\n  Name:Bypass       ein-> Payload:true / aus-> Payload:false\n  Name:Automatik    ein-> Payload:true / aus-> Payload:false\n  Name:WLAN         ein-> Payload:true / aus-> Payload:false           \n</pre>    \n</div>\n\n<style type=\"text/css\">\n.t2  {border-collapse:collapse;border-spacing:0;border-color:#ccc;}\n.t2 td{font-family:Arial, sans-serif;font-size:14px;padding:2px 2px;border-style:solid;border-width:1px;overflow:hidden;word-break:normal;border-color:#ccc;color:#333;background-color:#fff;}\n.t2 th{font-family:Arial, sans-serif;font-size:14px;font-weight:normal;padding:10px 5px;border-style:solid;border-width:1px;overflow:hidden;word-break:normal;border-color:#ccc;color:#333;background-color:#f0f0f0;}\n.t2 .t2-dg6o{background-color:#000000;color:#ffffff;text-align:left;vertical-align:top}\n.t2 .t2-6e8n{font-weight:bold;background-color:#c0c0c0;border-color:inherit;text-align:left;vertical-align:top}\n.t2 .t2-0pky{border-color:inherit;text-align:left;vertical-align:top}\n</style>\n<table class=\"t2\">\n  <tr>\n    <th class=\"t2-dg6o\" colspan=\"2\">Example CRON Expressions</th>\n  </tr>\n  <tr>\n    <td class=\"t2-6e8n\">Expression</td>\n    <td class=\"t2-6e8n\">Description</td>\n  </tr>\n  <tr>\n    <td class=\"t2-0pky\">* * * * * *</td>\n    <td class=\"t2-0pky\">Every Second</td>\n  </tr>\n  <tr>\n    <td class=\"t2-0pky\">0 * * * * *</td>\n    <td class=\"t2-0pky\">Every minute</td>\n  </tr>\n  <tr>\n    <td class=\"t2-0pky\">0 */10 * * * *</td>\n    <td class=\"t2-0pky\">Every 10 minutes</td>\n  </tr>\n  <tr>\n    <td class=\"t2-0pky\">0 */20 1 * * *</td>\n    <td class=\"t2-0pky\">Every 20 minutes, between 01:00 AM and 01:59 AM</td>\n  </tr>\n  <tr>\n    <td class=\"t2-0pky\">0 15,30,45 * * * *</td>\n    <td class=\"t2-0pky\">At 15, 30, and 45 minutes past the hour</td>\n  </tr>\n  <tr>\n    <td class=\"t2-0pky\">0 0 12 * * *</td>\n    <td class=\"t2-0pky\">Every day at noon - 12pm</td>\n  </tr>\n  <tr>\n    <td class=\"t2-0pky\">0 0 2 29 FEB * 2020-2040</td>\n    <td class=\"t2-0pky\">At 02:00 AM, on day 29 of the month, only in February, every 4 years, 2020 through 2040</td>\n  </tr>\n  <tr>\n    <td class=\"t2-0pky\">0 0 7 * *</td>\n    <td class=\"t2-0pky\">MON#1 * At 07:00 AM, on the first Monday of the month</td>\n  </tr>\n  <tr>\n    <td class=\"t2-0pky\">0 0 12 * JAN,FEB,MAR,APR *</td>\n    <td class=\"t2-0pky\">Every day at noon in January, February, March and April</td>\n  </tr>\n  <tr>\n    <td class=\"t2-0pky\">* * 1W * *</td>\n    <td class=\"t2-0pky\">Every minute, on the first weekday of the month</td>\n  </tr>\n  <tr>\n    <td class=\"t2-0pky\">* * * * Tue#3</td>\n    <td class=\"t2-0pky\">Every minute, on the third Tuesday of the month</td>\n  </tr>\n  <tr>\n    <td class=\"t2-0pky\">0 12 * * MONL</td>\n    <td class=\"t2-0pky\">At 12:00 PM, on the last Monday of the month</td>\n  </tr>\n</table>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1350,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "e48ee70d.63d348",
        "type": "link in",
        "z": "3d0c8966401fefce",
        "name": "Tmer Input",
        "links": [
            "851d95e5.61cc58",
            "db506709a279b52a"
        ],
        "x": 585,
        "y": 480,
        "wires": [
            [
                "3f284188.fdf30e"
            ]
        ]
    },
    {
        "id": "8e086099820beea7",
        "type": "switch",
        "z": "3d0c8966401fefce",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "-1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "-1",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 2370,
        "y": 600,
        "wires": [
            [
                "3d5be6c402ca8c62"
            ],
            [
                "95f0feaf7ec1c399"
            ]
        ]
    },
    {
        "id": "63d29120416db27b",
        "type": "link out",
        "z": "3d0c8966401fefce",
        "name": "Überlagern Eingabe",
        "mode": "link",
        "links": [
            "7d94eccc7117317f"
        ],
        "x": 2595,
        "y": 580,
        "wires": []
    },
    {
        "id": "40f0537dd35ad50c",
        "type": "link out",
        "z": "3d0c8966401fefce",
        "name": "Automatik überlagern Eingabe",
        "mode": "link",
        "links": [
            "d4c8315596f4f920",
            "81d4dcc23b75fd3a"
        ],
        "x": 2655,
        "y": 620,
        "wires": []
    },
    {
        "id": "95f0feaf7ec1c399",
        "type": "change",
        "z": "3d0c8966401fefce",
        "name": "setze auf true",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2540,
        "y": 620,
        "wires": [
            [
                "40f0537dd35ad50c"
            ]
        ]
    },
    {
        "id": "29a976195317aa20",
        "type": "comment",
        "z": "3d0c8966401fefce",
        "name": "--- Timer ---",
        "info": "um 22 Uhr auf 100 Watt\num 7 Uhr 15 auf 0 Watt\num 9 Uhr Automatik ein",
        "x": 130,
        "y": 40,
        "wires": []
    },
    {
        "id": "af5e5707b4a8d8c5",
        "type": "switch",
        "z": "3d0c8966401fefce",
        "name": "1=Abgabelimit 2=Sonstiges",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "Abgabelimit",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1440,
        "y": 460,
        "wires": [
            [
                "3cc5faa2c548d7c8",
                "c7b593325c97a03e"
            ],
            [
                "5c6bc3f5508f178b"
            ]
        ]
    },
    {
        "id": "3d5be6c402ca8c62",
        "type": "json",
        "z": "3d0c8966401fefce",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 2510,
        "y": 580,
        "wires": [
            [
                "63d29120416db27b"
            ]
        ]
    },
    {
        "id": "5c6bc3f5508f178b",
        "type": "switch",
        "z": "3d0c8966401fefce",
        "name": "1=Bypass 2=Weiter",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "Bypass",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1710,
        "y": 500,
        "wires": [
            [
                "a5ab068840032048"
            ],
            [
                "e8f697e9808dedc4"
            ]
        ]
    },
    {
        "id": "a5a8cffebb34f722",
        "type": "link out",
        "z": "3d0c8966401fefce",
        "name": "zum Bypass",
        "mode": "link",
        "links": [
            "90664065a1b3aead",
            "c8edcd4622f26bb6"
        ],
        "x": 1985,
        "y": 480,
        "wires": []
    },
    {
        "id": "a5ab068840032048",
        "type": "bool",
        "z": "3d0c8966401fefce",
        "name": "",
        "outputs": 1,
        "inputField": "payload",
        "outputField": "payload",
        "outputFormat": "bool",
        "handleNull": "null",
        "invert": false,
        "strict": false,
        "x": 1890,
        "y": 480,
        "wires": [
            [
                "a5a8cffebb34f722"
            ]
        ]
    },
    {
        "id": "624bcd90c236223f",
        "type": "switch",
        "z": "3d0c8966401fefce",
        "name": "wurde Timer aktiviert",
        "property": "g_Timer",
        "propertyType": "global",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1180,
        "y": 460,
        "wires": [
            [
                "af5e5707b4a8d8c5"
            ]
        ]
    },
    {
        "id": "646bb6fed63fcec4",
        "type": "change",
        "z": "3d0c8966401fefce",
        "name": "setze g_Abgabelimit",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "g_Abgabelimit",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1860,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "0f841305c2bccbf9",
        "type": "switch",
        "z": "3d0c8966401fefce",
        "name": "1=Automatik 2=Sonstiges",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "Automatik",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 2170,
        "y": 560,
        "wires": [
            [],
            [
                "8e086099820beea7"
            ]
        ]
    },
    {
        "id": "b5bac3e9dae0db0a",
        "type": "ui_text",
        "z": "3d0c8966401fefce",
        "group": "cb76b6e892fe5709",
        "order": 11,
        "width": 5,
        "height": 1,
        "name": "",
        "label": "Abgabelimit",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 2050,
        "y": 420,
        "wires": []
    },
    {
        "id": "3cc5faa2c548d7c8",
        "type": "json",
        "z": "3d0c8966401fefce",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1690,
        "y": 360,
        "wires": [
            [
                "646bb6fed63fcec4"
            ]
        ]
    },
    {
        "id": "e8f697e9808dedc4",
        "type": "switch",
        "z": "3d0c8966401fefce",
        "name": "1=WLAN 2=Weiter",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "WLAN",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1930,
        "y": 520,
        "wires": [
            [
                "137f423c54aac025"
            ],
            [
                "0f841305c2bccbf9"
            ]
        ]
    },
    {
        "id": "a9f6bcafcc311ecf",
        "type": "ui_text_input",
        "z": "3d0c8966401fefce",
        "name": "",
        "label": "Dateiname",
        "tooltip": "Schedule Name",
        "group": "d182ad5fad0e8e1a",
        "order": 5,
        "width": 9,
        "height": 1,
        "passthru": true,
        "mode": "text",
        "delay": "100",
        "topic": "",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 130,
        "y": 260,
        "wires": [
            [
                "825d8a47bb6d700d"
            ]
        ]
    },
    {
        "id": "5a37246a9fd7a043",
        "type": "file",
        "z": "3d0c8966401fefce",
        "name": "",
        "filename": "filename",
        "filenameType": "msg",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 1220,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "536e6b6d2955e68b",
        "type": "json",
        "z": "3d0c8966401fefce",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1170,
        "y": 620,
        "wires": [
            [
                "db506709a279b52a"
            ]
        ]
    },
    {
        "id": "d01d76fc6e8e76a3",
        "type": "ui_button",
        "z": "3d0c8966401fefce",
        "name": "",
        "group": "d182ad5fad0e8e1a",
        "order": 3,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "REC",
        "tooltip": "Add or update named schedule",
        "color": "",
        "bgcolor": "{(msg.bgcolor}}",
        "className": "",
        "icon": "send",
        "payload": "true",
        "payloadType": "bool",
        "topic": "Record",
        "topicType": "str",
        "x": 150,
        "y": 420,
        "wires": [
            [
                "8434d6b6faf0239d"
            ]
        ]
    },
    {
        "id": "bb24f2ea0f48909e",
        "type": "ui_button",
        "z": "3d0c8966401fefce",
        "name": "",
        "group": "d182ad5fad0e8e1a",
        "order": 4,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Stop",
        "tooltip": "Add or update named schedule",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "send",
        "payload": "false",
        "payloadType": "bool",
        "topic": "Record",
        "topicType": "str",
        "x": 150,
        "y": 380,
        "wires": [
            [
                "b69d318fe298185e",
                "8434d6b6faf0239d"
            ]
        ]
    },
    {
        "id": "5cb88b7e677f6472",
        "type": "ui_button",
        "z": "3d0c8966401fefce",
        "name": "",
        "group": "d182ad5fad0e8e1a",
        "order": 7,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Import",
        "tooltip": "Add or update named schedule",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "send",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 150,
        "y": 620,
        "wires": [
            [
                "f72d6c53c86d4f93"
            ]
        ]
    },
    {
        "id": "825d8a47bb6d700d",
        "type": "change",
        "z": "3d0c8966401fefce",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "ui_dateiname",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 350,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "3d53337b9767e737",
        "type": "RailwaySwitchUltimate",
        "z": "3d0c8966401fefce",
        "name": "Railway Switch",
        "triggertopic": "Record",
        "initializewith": "0",
        "payloadPropName": "payload",
        "translatorConfig": "",
        "x": 590,
        "y": 420,
        "wires": [
            [],
            [
                "b8ba95760e396274"
            ],
            [],
            [],
            []
        ]
    },
    {
        "id": "b8ba95760e396274",
        "type": "change",
        "z": "3d0c8966401fefce",
        "name": "",
        "rules": [
            {
                "t": "delete",
                "p": "event",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "socketid",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "_msgid",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 830,
        "y": 400,
        "wires": [
            [
                "75462e0f71203b1c"
            ]
        ]
    },
    {
        "id": "75462e0f71203b1c",
        "type": "function",
        "z": "3d0c8966401fefce",
        "name": "Pfad und Dateiname",
        "func": "let sL_Dateiname = flow.get('ui_dateiname');\nmsg.filename = \"/home/pi/Cronjobs/\" + sL_Dateiname;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 400,
        "wires": [
            [
                "5a37246a9fd7a043"
            ]
        ]
    },
    {
        "id": "f7d7024777ce2933",
        "type": "BlinkerUltimate",
        "z": "3d0c8966401fefce",
        "name": "Blinker",
        "stopbehaviorPIN1": "1",
        "stopbehaviorPIN2": "0",
        "blinkfrequency": "500",
        "initializewith": "0",
        "payloadPropName": "payload",
        "x": 360,
        "y": 380,
        "wires": [
            [
                "fb4392c2f7b840c9"
            ],
            []
        ]
    },
    {
        "id": "fb4392c2f7b840c9",
        "type": "ui_led",
        "z": "3d0c8966401fefce",
        "order": 2,
        "group": "d182ad5fad0e8e1a",
        "width": 1,
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#c0bfbc",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#0000ff",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "",
        "x": 530,
        "y": 360,
        "wires": []
    },
    {
        "id": "b69d318fe298185e",
        "type": "delay",
        "z": "3d0c8966401fefce",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 360,
        "y": 340,
        "wires": [
            [
                "fb4392c2f7b840c9"
            ]
        ]
    },
    {
        "id": "6768503a8b73e2a8",
        "type": "file in",
        "z": "3d0c8966401fefce",
        "name": "",
        "filename": "filename",
        "filenameType": "msg",
        "format": "lines",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 1040,
        "y": 620,
        "wires": [
            [
                "536e6b6d2955e68b"
            ]
        ]
    },
    {
        "id": "f72d6c53c86d4f93",
        "type": "olfnf-folder-listing",
        "z": "3d0c8966401fefce",
        "folder": "/home/pi/Cronjobs",
        "folder_type": "str",
        "subfolder": false,
        "ignoreempty": true,
        "masks": "*.*",
        "masksregex": false,
        "name": "",
        "x": 310,
        "y": 620,
        "wires": [
            [
                "2715d510cddd5cef"
            ]
        ]
    },
    {
        "id": "2d3e0baa4b5562eb",
        "type": "ui_dropdown",
        "z": "3d0c8966401fefce",
        "name": "",
        "label": "Dropbox Import",
        "tooltip": "",
        "place": "Select option",
        "group": "d182ad5fad0e8e1a",
        "order": 9,
        "width": 9,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "",
                "value": "",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 680,
        "y": 620,
        "wires": [
            [
                "8267b7a3145ae9e2"
            ]
        ]
    },
    {
        "id": "2715d510cddd5cef",
        "type": "change",
        "z": "3d0c8966401fefce",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "options",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 490,
        "y": 620,
        "wires": [
            [
                "2d3e0baa4b5562eb"
            ]
        ]
    },
    {
        "id": "8267b7a3145ae9e2",
        "type": "change",
        "z": "3d0c8966401fefce",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 870,
        "y": 620,
        "wires": [
            [
                "6768503a8b73e2a8"
            ]
        ]
    },
    {
        "id": "db506709a279b52a",
        "type": "link out",
        "z": "3d0c8966401fefce",
        "name": "link out 11",
        "mode": "link",
        "links": [
            "e48ee70d.63d348"
        ],
        "x": 1265,
        "y": 620,
        "wires": []
    },
    {
        "id": "ab4f74f2b1294a03",
        "type": "ui_button",
        "z": "3d0c8966401fefce",
        "name": "",
        "group": "d182ad5fad0e8e1a",
        "order": 11,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Löschen",
        "tooltip": "Add or update named schedule",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "send",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 160,
        "y": 700,
        "wires": [
            [
                "2b1fa1c1102766dc"
            ]
        ]
    },
    {
        "id": "2b1fa1c1102766dc",
        "type": "olfnf-folder-listing",
        "z": "3d0c8966401fefce",
        "folder": "/home/pi/Cronjobs",
        "folder_type": "str",
        "subfolder": false,
        "ignoreempty": true,
        "masks": "*.*",
        "masksregex": false,
        "name": "",
        "x": 310,
        "y": 700,
        "wires": [
            [
                "f9547c57b45cf8b1"
            ]
        ]
    },
    {
        "id": "f9547c57b45cf8b1",
        "type": "change",
        "z": "3d0c8966401fefce",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "options",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 490,
        "y": 700,
        "wires": [
            [
                "5560a756c603cf15"
            ]
        ]
    },
    {
        "id": "5560a756c603cf15",
        "type": "ui_dropdown",
        "z": "3d0c8966401fefce",
        "name": "",
        "label": "Dropbox Löschen",
        "tooltip": "",
        "place": "Select option",
        "group": "d182ad5fad0e8e1a",
        "order": 13,
        "width": 9,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "",
                "value": "",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 690,
        "y": 700,
        "wires": [
            [
                "a4f60673e41161fb"
            ]
        ]
    },
    {
        "id": "a4f60673e41161fb",
        "type": "change",
        "z": "3d0c8966401fefce",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 890,
        "y": 700,
        "wires": [
            [
                "9c27da869266f91e"
            ]
        ]
    },
    {
        "id": "9c27da869266f91e",
        "type": "file",
        "z": "3d0c8966401fefce",
        "name": "",
        "filename": "filename",
        "filenameType": "msg",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "delete",
        "encoding": "none",
        "x": 1050,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "42122255674e7494",
        "type": "function",
        "z": "3d0c8966401fefce",
        "name": "payload aufbereiten",
        "func": "var payload = { \"NewX_AVM-DE_WLANGlobalEnable\" : msg.payload };\nreturn { payload: payload };\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2350,
        "y": 480,
        "wires": [
            [
                "e3b55f33c864e199"
            ]
        ]
    },
    {
        "id": "e3b55f33c864e199",
        "type": "fritzbox-in",
        "z": "3d0c8966401fefce",
        "device": "965b9b1b3a720b68",
        "name": "WLAN aus",
        "service": "urn:dslforum-org:service:WLANConfiguration:1",
        "action": "X_AVM-DE_SetWLANGlobalEnable",
        "arguments": "{\n  \"NewX_AVM-DE_WLANGlobalEnable\": \"value\"\n}",
        "x": 2530,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "137f423c54aac025",
        "type": "change",
        "z": "3d0c8966401fefce",
        "name": "setze payload zu 0",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2150,
        "y": 480,
        "wires": [
            [
                "42122255674e7494"
            ]
        ]
    },
    {
        "id": "ddbb57f8505e1a2b",
        "type": "switch",
        "z": "3d0c8966401fefce",
        "d": true,
        "name": "1=Bypass 2=Weiter",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "Bypass",
                "vt": "str"
            },
            {
                "t": "jsonata_exp",
                "v": "{\t    \"payload\": {\t    \"bypassDetected\":\t    $contains(msg.topic, 'Bypass2')\t    }\t}",
                "vt": "jsonata"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 950,
        "y": 940,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "cb4f9d53e5127342",
        "type": "telegram sender",
        "z": "3d0c8966401fefce",
        "name": "Telegram",
        "bot": "a82214386cf5651a",
        "haserroroutput": false,
        "outputs": 1,
        "x": 980,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "699b0ee0b5c5bb3b",
        "type": "change",
        "z": "3d0c8966401fefce",
        "name": "setze Payload für Telegram",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "payload.content",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.type",
                "pt": "msg",
                "to": "message",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.chatId",
                "pt": "msg",
                "to": "-1002245995847",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 780,
        "y": 820,
        "wires": [
            [
                "cb4f9d53e5127342"
            ]
        ]
    },
    {
        "id": "f91a55d85a03891d",
        "type": "join",
        "z": "3d0c8966401fefce",
        "name": "",
        "mode": "custom",
        "build": "string",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 590,
        "y": 820,
        "wires": [
            [
                "699b0ee0b5c5bb3b"
            ]
        ]
    },
    {
        "id": "c73a36baba02a13c",
        "type": "change",
        "z": "3d0c8966401fefce",
        "name": "setze Payload String",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Meldung von Energieserver: ",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 400,
        "y": 840,
        "wires": [
            [
                "f91a55d85a03891d"
            ]
        ]
    },
    {
        "id": "6dea6db1e66c69ec",
        "type": "delay",
        "z": "3d0c8966401fefce",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 380,
        "y": 800,
        "wires": [
            [
                "f91a55d85a03891d"
            ]
        ]
    },
    {
        "id": "c7b593325c97a03e",
        "type": "ui_template",
        "z": "3d0c8966401fefce",
        "group": "cb76b6e892fe5709",
        "name": "",
        "order": 26,
        "width": 0,
        "height": 0,
        "format": "<style>\n    .nr-dashboard-ui_digital_display.visible svg path {\n        --nr-dashboard-pageTitlebarBackgroundColor: black\n    }\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1700,
        "y": 420,
        "wires": [
            [
                "c3b629d06b6aa45f"
            ]
        ]
    },
    {
        "id": "c3b629d06b6aa45f",
        "type": "ui_digital_display",
        "z": "3d0c8966401fefce",
        "name": "Abgabelimit",
        "group": "cb76b6e892fe5709",
        "order": 12,
        "width": 2,
        "height": 1,
        "digits": "6",
        "decimals": "0",
        "x": 1870,
        "y": 420,
        "wires": []
    },
    {
        "id": "91e617a7d7abd695",
        "type": "ui_gauge",
        "z": "d004b552dbe23508",
        "name": "",
        "group": "e5ec260ae3e0440b",
        "order": 1,
        "width": 3,
        "height": 2,
        "gtype": "gage",
        "title": "Delta Verbrauch",
        "label": "Watt",
        "format": "{{value}}",
        "min": "-8000",
        "max": "6000",
        "colors": [
            "#99c1f1",
            "#008000",
            "#ed333b"
        ],
        "seg1": "-10",
        "seg2": "20",
        "diff": true,
        "className": "",
        "x": 180,
        "y": 60,
        "wires": []
    },
    {
        "id": "74892427cb3eaa06",
        "type": "link in",
        "z": "d004b552dbe23508",
        "name": "Aktuelle Leistung von Kostal QUT",
        "links": [
            "35f06c91d0d95ab4"
        ],
        "x": 55,
        "y": 60,
        "wires": [
            [
                "91e617a7d7abd695"
            ]
        ]
    },
    {
        "id": "5c74b2672bcb04db",
        "type": "ui_gauge",
        "z": "d004b552dbe23508",
        "name": "",
        "group": "e5ec260ae3e0440b",
        "order": 2,
        "width": 3,
        "height": 2,
        "gtype": "gage",
        "title": "Leistung Panele",
        "label": "Watt",
        "format": "{{value}}",
        "min": 0,
        "max": "8000",
        "colors": [
            "#008000",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 180,
        "y": 100,
        "wires": []
    },
    {
        "id": "3e9c04f2e74fd72f",
        "type": "link in",
        "z": "d004b552dbe23508",
        "name": "Aktuelle Panel Leistung von Kostal QUT",
        "links": [
            "0b9c673ff3c9bd02"
        ],
        "x": 55,
        "y": 100,
        "wires": [
            [
                "5c74b2672bcb04db"
            ]
        ]
    },
    {
        "id": "bf235e1c40cd45bb",
        "type": "link in",
        "z": "d004b552dbe23508",
        "name": "Momentaner Verbrauch von PV Kostal QUT",
        "links": [
            "b64f6583cc907f17"
        ],
        "x": 55,
        "y": 140,
        "wires": [
            [
                "62f5744f6d2ca0e2"
            ]
        ]
    },
    {
        "id": "62f5744f6d2ca0e2",
        "type": "ui_gauge",
        "z": "d004b552dbe23508",
        "name": "",
        "group": "e5ec260ae3e0440b",
        "order": 11,
        "width": 3,
        "height": 2,
        "gtype": "gage",
        "title": "PV Bezug",
        "label": "Watt",
        "format": "{{value}}",
        "min": 0,
        "max": "8000",
        "colors": [
            "#1a5fb4",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 160,
        "y": 140,
        "wires": []
    },
    {
        "id": "d4871f226daad54c",
        "type": "ui_gauge",
        "z": "d004b552dbe23508",
        "name": "",
        "group": "e5ec260ae3e0440b",
        "order": 5,
        "width": 3,
        "height": 2,
        "gtype": "gage",
        "title": "Netzbezug",
        "label": "Watt",
        "format": "{{value}}",
        "min": "-6000",
        "max": "6000",
        "colors": [
            "#008000",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "-10",
        "seg2": "10",
        "diff": true,
        "className": "",
        "x": 170,
        "y": 180,
        "wires": []
    },
    {
        "id": "059baa368a4679e0",
        "type": "link in",
        "z": "d004b552dbe23508",
        "name": "Leistung von Netz Kostal QUT",
        "links": [
            "96c33d44bfb9a54e"
        ],
        "x": 55,
        "y": 180,
        "wires": [
            [
                "d4871f226daad54c"
            ]
        ]
    },
    {
        "id": "f03f7a36431c8a52",
        "type": "ui_gauge",
        "z": "d004b552dbe23508",
        "name": "",
        "group": "e5ec260ae3e0440b",
        "order": 17,
        "width": 3,
        "height": 2,
        "gtype": "gage",
        "title": "Akkubezug",
        "label": "Watt",
        "format": "{{value}}",
        "min": 0,
        "max": "8000",
        "colors": [
            "#c01c28",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 170,
        "y": 220,
        "wires": []
    },
    {
        "id": "1273cdbbb64dde4d",
        "type": "link in",
        "z": "d004b552dbe23508",
        "name": "Leistung von Netz Kostal QUT",
        "links": [
            "562ee6da641fd597"
        ],
        "x": 55,
        "y": 220,
        "wires": [
            [
                "f03f7a36431c8a52"
            ]
        ]
    },
    {
        "id": "005175eb68df1adb",
        "type": "link in",
        "z": "d004b552dbe23508",
        "name": "Leistung von Netz Kostal QUT",
        "links": [
            "352ae7655d3e1539"
        ],
        "x": 55,
        "y": 260,
        "wires": [
            [
                "fa234f8b42554ab9"
            ]
        ]
    },
    {
        "id": "fa234f8b42554ab9",
        "type": "ui_chart",
        "z": "d004b552dbe23508",
        "name": "",
        "group": "e5ec260ae3e0440b",
        "order": 3,
        "width": 6,
        "height": 4,
        "label": "Netzfrequenz",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "30",
        "ymax": "60",
        "removeOlder": "12",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 170,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "e55beff1e798bd14",
        "type": "link in",
        "z": "d004b552dbe23508",
        "name": "Leistung von Netz Kostal QUT",
        "links": [
            "e3b4e6f1cb90221c"
        ],
        "x": 425,
        "y": 60,
        "wires": [
            [
                "6c3dc60a5784efbd"
            ]
        ]
    },
    {
        "id": "6c3dc60a5784efbd",
        "type": "function",
        "z": "d004b552dbe23508",
        "name": "Runden",
        "func": "const nL_Bereich = msg.payload;\nmsg.payload = Math.round(nL_Bereich * 10) / 10;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 60,
        "wires": [
            [
                "a69fb33f2774bf17"
            ]
        ]
    },
    {
        "id": "48c03f1072e08137",
        "type": "ui_chart",
        "z": "d004b552dbe23508",
        "name": "",
        "group": "e5ec260ae3e0440b",
        "order": 15,
        "width": 6,
        "height": 4,
        "label": "Spannung",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "220",
        "ymax": "240",
        "removeOlder": "12",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#f5c211",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 170,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "ad11041f8690e42b",
        "type": "link in",
        "z": "d004b552dbe23508",
        "name": "Aktuelle Spannung QUT",
        "links": [
            "a97f79a28dad24ed"
        ],
        "x": 55,
        "y": 300,
        "wires": [
            [
                "48c03f1072e08137"
            ]
        ]
    },
    {
        "id": "78e340a4a2ee6808",
        "type": "ui_text",
        "z": "d004b552dbe23508",
        "group": "974caebe33d50b82",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Netzbezug kWh",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#5e5c64",
        "x": 1700,
        "y": 160,
        "wires": []
    },
    {
        "id": "de5255f6806c18aa",
        "type": "change",
        "z": "d004b552dbe23508",
        "name": "setze g_TagesNetzbezugKostal",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "g_TagesNetzbezugKostal",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1750,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "d44ef25c9a7cf885",
        "type": "change",
        "z": "d004b552dbe23508",
        "name": "setze g_TagesReturnedKostal",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "g_TagesReturnedKostal",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1750,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "ae6d95c8f7018458",
        "type": "ui_text",
        "z": "d004b552dbe23508",
        "group": "974caebe33d50b82",
        "order": 7,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Netzeinspeisung kWh",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#5e5c64",
        "x": 1720,
        "y": 280,
        "wires": []
    },
    {
        "id": "be8490363139ef87",
        "type": "ui_text",
        "z": "d004b552dbe23508",
        "group": "974caebe33d50b82",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Gesamtverbrauch kWh",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#5e5c64",
        "x": 1720,
        "y": 380,
        "wires": []
    },
    {
        "id": "98afe049bcc2bee9",
        "type": "change",
        "z": "d004b552dbe23508",
        "name": "setze g_TagesHausverbrauchKostal",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "g_TagesHausverbrauchKostal",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1770,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "ca1f81d9ec483b99",
        "type": "change",
        "z": "d004b552dbe23508",
        "name": "setze g_TagesPVverbrauchKostal",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "g_TagesPVverbrauchKostal",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1760,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "6c8207115e50ad37",
        "type": "ui_text",
        "z": "d004b552dbe23508",
        "group": "974caebe33d50b82",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Bezug von PV kWh",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#5e5c64",
        "x": 1710,
        "y": 460,
        "wires": []
    },
    {
        "id": "e883b7b6a05af22b",
        "type": "change",
        "z": "d004b552dbe23508",
        "name": "setze g_TagesAkkuverbrauchKostal",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "g_TagesAkkuverbrauchKostal",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1760,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "b0e67cec5e75a405",
        "type": "ui_text",
        "z": "d004b552dbe23508",
        "group": "974caebe33d50b82",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Bezug von Akku kWh",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#5e5c64",
        "x": 1720,
        "y": 620,
        "wires": []
    },
    {
        "id": "6d785c5f02c33b2c",
        "type": "link out",
        "z": "d004b552dbe23508",
        "name": "Tages Netzbezug IN",
        "mode": "link",
        "links": [
            "4b5ab809e12ce333"
        ],
        "x": 1635,
        "y": 80,
        "wires": []
    },
    {
        "id": "1475c2f0867ed8a1",
        "type": "link out",
        "z": "d004b552dbe23508",
        "name": "Tages Leistung zu EON IN",
        "mode": "link",
        "links": [
            "d636a7f066fcbd94"
        ],
        "x": 1635,
        "y": 200,
        "wires": []
    },
    {
        "id": "e4db6bcb79e1ee92",
        "type": "ui_media",
        "z": "d004b552dbe23508",
        "group": "e5ec260ae3e0440b",
        "name": "Logo",
        "width": 6,
        "height": 3,
        "order": 9,
        "category": "Logo",
        "file": "Solar.png",
        "layout": "center",
        "showcontrols": true,
        "loop": true,
        "onstart": false,
        "scope": "local",
        "tooltip": "",
        "x": 830,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "8878f77bf4fe9d65",
        "type": "ui_text",
        "z": "d004b552dbe23508",
        "group": "974caebe33d50b82",
        "order": 9,
        "width": 0,
        "height": 0,
        "name": "",
        "label": " Tagesertrag kWh",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#5e5c64",
        "x": 870,
        "y": 100,
        "wires": []
    },
    {
        "id": "1aa9efbf531d31e9",
        "type": "link in",
        "z": "d004b552dbe23508",
        "name": "Tagesertrag QUT",
        "links": [
            "89d68e50d0e5f397"
        ],
        "x": 425,
        "y": 100,
        "wires": [
            [
                "6ecef501a71ace2f"
            ]
        ]
    },
    {
        "id": "6ecef501a71ace2f",
        "type": "calculator",
        "z": "d004b552dbe23508",
        "name": "",
        "inputMsgField": "payload",
        "outputMsgField": "payload",
        "operation": "div",
        "constant": "1000",
        "round": false,
        "truncate": false,
        "decimals": 0,
        "decimals2": 0,
        "x": 530,
        "y": 100,
        "wires": [
            [
                "af52f1542af2c12d"
            ]
        ]
    },
    {
        "id": "71391d122b48ce5a",
        "type": "link in",
        "z": "d004b552dbe23508",
        "name": "Monatsertrag QUT",
        "links": [
            "d3c18580d6ef6aca"
        ],
        "x": 425,
        "y": 140,
        "wires": [
            [
                "109e435eb7e8363b"
            ]
        ]
    },
    {
        "id": "109e435eb7e8363b",
        "type": "calculator",
        "z": "d004b552dbe23508",
        "name": "",
        "inputMsgField": "payload",
        "outputMsgField": "payload",
        "operation": "div",
        "constant": "1000",
        "round": false,
        "truncate": false,
        "decimals": 0,
        "decimals2": 0,
        "x": 530,
        "y": 140,
        "wires": [
            [
                "3742e0181a69623e"
            ]
        ]
    },
    {
        "id": "70049c798f685b42",
        "type": "ui_text",
        "z": "d004b552dbe23508",
        "group": "974caebe33d50b82",
        "order": 10,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Monatsertrag kWh",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#5e5c64",
        "x": 870,
        "y": 140,
        "wires": []
    },
    {
        "id": "af52f1542af2c12d",
        "type": "function",
        "z": "d004b552dbe23508",
        "name": "Runden",
        "func": "const nL_Bereich = msg.payload;\nmsg.payload = Math.round(nL_Bereich * 1000) / 1000;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 100,
        "wires": [
            [
                "8878f77bf4fe9d65"
            ]
        ]
    },
    {
        "id": "3742e0181a69623e",
        "type": "function",
        "z": "d004b552dbe23508",
        "name": "Runden",
        "func": "const nL_Bereich = msg.payload;\nmsg.payload = Math.round(nL_Bereich * 1000) / 1000;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 140,
        "wires": [
            [
                "70049c798f685b42"
            ]
        ]
    },
    {
        "id": "e6e07aeafd3d318a",
        "type": "link in",
        "z": "d004b552dbe23508",
        "name": "Jahresertrag QUT",
        "links": [
            "99d61e616f78c9cf"
        ],
        "x": 425,
        "y": 180,
        "wires": [
            [
                "b3a0f6b1b70f7693"
            ]
        ]
    },
    {
        "id": "b3a0f6b1b70f7693",
        "type": "calculator",
        "z": "d004b552dbe23508",
        "name": "",
        "inputMsgField": "payload",
        "outputMsgField": "payload",
        "operation": "div",
        "constant": "1000",
        "round": false,
        "truncate": false,
        "decimals": 0,
        "decimals2": 0,
        "x": 530,
        "y": 180,
        "wires": [
            [
                "d25219c5afc78ab3"
            ]
        ]
    },
    {
        "id": "d25219c5afc78ab3",
        "type": "function",
        "z": "d004b552dbe23508",
        "name": "Runden",
        "func": "const nL_Bereich = msg.payload;\nmsg.payload = Math.round(nL_Bereich * 1000) / 1000;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 180,
        "wires": [
            [
                "298453914ec6ddce"
            ]
        ]
    },
    {
        "id": "298453914ec6ddce",
        "type": "ui_text",
        "z": "d004b552dbe23508",
        "group": "974caebe33d50b82",
        "order": 11,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Jahresertrag kWh",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#5e5c64",
        "x": 870,
        "y": 180,
        "wires": []
    },
    {
        "id": "5c7545cd652b6584",
        "type": "ui_text",
        "z": "d004b552dbe23508",
        "group": "974caebe33d50b82",
        "order": 6,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Panelleistung kWh",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#5e5c64",
        "x": 1710,
        "y": 540,
        "wires": []
    },
    {
        "id": "b824ceca21b549a3",
        "type": "change",
        "z": "d004b552dbe23508",
        "name": "setze g_TagesPanelleistungKostal_kWh",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "g_TagesPanelleistungKostal_kWh",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1780,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "b6f9bee7583d399f",
        "type": "function",
        "z": "d004b552dbe23508",
        "name": "Query erstellen",
        "func": "const today = new Date(msg.payload);\nconst topic = msg.topic;\n\nvar sL_Measurement = '';\n\nlet Jahr = today.getFullYear();\nlet Monat = today.getMonth();\nlet Tag = today.getDate();\n\n\nif (topic == 'TotalNetzbezugKostal') {\n  sL_Measurement = 'TotalVerbrauchNetzKostal_kWh';\n} else if (topic == 'ReturnedTotalKostal') {\n  sL_Measurement = 'ReturnedTotalKostal_kWh';\n} else if (topic == 'TotalVerbrauchHausKostal') {\n  sL_Measurement = 'TotalVerbrauchHausKostal_kWh';\n} else if (topic == 'TotalVerbrauchPVKostal') {\n  sL_Measurement = 'TotalVerbrauchPVKostal_kWh';\n} else if (topic == 'TotalPanelleistungKostal') {\n  sL_Measurement = 'TotalPanelleistungKostal_kWh';\n} else if (topic == 'TotalVerbrauchAkkuKostal') {\n  sL_Measurement = 'TotalVerbrauchAkkuKostal_kWh';\n}\n\nMonat = Monat + 1\nif (Monat < 10) {\n    Monat = '0' + Monat\n}\n\nif (Tag < 10) {\n    Tag = '0' + Tag\n}\n\nlet Datum = `'` + Jahr + '-' + Monat + '-' + Tag + 'T00:00:00Z' + `'`;\nlet Datum2 = `'` + Jahr + '-' + Monat + '-' + Tag + 'T23:59:59Z' + `'`;\n//let query = `SELECT * FROM \"TotalVerbrauchNetzKostal_kWh\" where time >= ` + Datum + ' and time <= ' + Datum2;\nlet query = `SELECT * FROM \"` + sL_Measurement + `\\\" where time >= ` + Datum + ' and time <= ' + Datum2;\nmsg.query = query\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 360,
        "wires": [
            [
                "fd76541eeb51278e"
            ]
        ]
    },
    {
        "id": "822fb6c128dc9d35",
        "type": "cronplus",
        "z": "d004b552dbe23508",
        "name": "Speicherjobs starten",
        "outputField": "payload",
        "timeZone": "",
        "storeName": "",
        "commandResponseMsgOutput": "output1",
        "defaultLocation": "",
        "defaultLocationType": "default",
        "outputs": 1,
        "options": [
            {
                "name": "schedule1",
                "topic": "TotalNetzbezugKostal",
                "payloadType": "date",
                "payload": "",
                "expressionType": "cron",
                "expression": "0 */12 * * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            },
            {
                "name": "schedule2",
                "topic": "ReturnedTotalKostal",
                "payloadType": "date",
                "payload": "",
                "expressionType": "cron",
                "expression": "10 */12 * * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            },
            {
                "name": "schedule3",
                "topic": "TotalVerbrauchHausKostal",
                "payloadType": "date",
                "payload": "",
                "expressionType": "cron",
                "expression": "15 */12 * * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            },
            {
                "name": "schedule4",
                "topic": "TotalVerbrauchPVKostal",
                "payloadType": "date",
                "payload": "",
                "expressionType": "cron",
                "expression": "20 */12 * * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            },
            {
                "name": "schedule5",
                "topic": "TotalPanelleistungKostal",
                "payloadType": "date",
                "payload": "",
                "expressionType": "cron",
                "expression": "30 */12 * * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            }
        ],
        "x": 160,
        "y": 360,
        "wires": [
            [
                "1718c7b987a9b1cf"
            ]
        ]
    },
    {
        "id": "1718c7b987a9b1cf",
        "type": "moment",
        "z": "d004b552dbe23508",
        "name": "einen Tag zurück",
        "topic": "",
        "input": "",
        "inputType": "msg",
        "inTz": "Europe/Berlin",
        "adjAmount": "1",
        "adjType": "days",
        "adjDir": "subtract",
        "format": "",
        "locale": "de-DE",
        "output": "payload",
        "outputType": "msg",
        "outTz": "Europe/Berlin",
        "x": 390,
        "y": 360,
        "wires": [
            [
                "b6f9bee7583d399f"
            ]
        ]
    },
    {
        "id": "fd76541eeb51278e",
        "type": "influxdb in",
        "z": "d004b552dbe23508",
        "influxdb": "e0fd073ca3007348",
        "name": "auslesen: EnergieDB",
        "query": "",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "organisation",
        "x": 780,
        "y": 360,
        "wires": [
            [
                "b60396d3582077d4"
            ]
        ]
    },
    {
        "id": "b60396d3582077d4",
        "type": "function",
        "z": "d004b552dbe23508",
        "name": "Array zerlegen Wert berechnen",
        "func": "const topic = msg.topic;\n\nlet i = (msg.payload.length - 1);\nlet nL_Power = msg.payload[i].value;\nlet nL_Temp = 0;\n\nif (topic == 'TotalNetzbezugKostal') {\n    nL_Temp = global.get('g_NetzbezugTotal');\n} else if (topic == 'ReturnedTotalKostal') {\n    nL_Temp = global.get('g_ReturnedTotalKostal');\n} else if (topic == 'TotalVerbrauchHausKostal') {\n    nL_Temp = global.get('g_VerbauchImHausTotalKostal');\n} else if (topic == 'TotalVerbrauchPVKostal') {\n    nL_Temp = global.get('g_VerbauchVonPVTotalKostal');\n} else if (topic == 'TotalPanelleistungKostal') {\n    nL_Temp = global.get('g_PanelleistungKostal_Wh');\n} else if (topic == 'TotalVerbrauchAkkuKostal') {\n    nL_Temp = global.get('g_AkkubezugTotal');\n}\n\nnL_Power = nL_Temp - nL_Power;\nnL_Power = Math.round(nL_Power * 1000) / 1000;\n\nmsg = { payload: nL_Power };\nmsg.topic = topic;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 360,
        "wires": [
            [
                "989bf4200a06c4e2"
            ]
        ]
    },
    {
        "id": "989bf4200a06c4e2",
        "type": "switch",
        "z": "d004b552dbe23508",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "TotalNetzbezugKostal",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "ReturnedTotalKostal",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "TotalVerbrauchHausKostal",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "TotalVerbrauchPVKostal",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "TotalPanelleistungKostal",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "TotalVerbrauchAkkuKostal",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 6,
        "x": 1250,
        "y": 360,
        "wires": [
            [
                "52ff6e422b92ac4f"
            ],
            [
                "923166607ea395b4"
            ],
            [
                "20794cce32361d3d"
            ],
            [
                "f1de5e355273412b"
            ],
            [
                "6ece92445ac8884d"
            ],
            [
                "87b5c05982ec2b2c"
            ]
        ]
    },
    {
        "id": "52ff6e422b92ac4f",
        "type": "change",
        "z": "d004b552dbe23508",
        "name": "",
        "rules": [
            {
                "t": "delete",
                "p": "topic",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1490,
        "y": 120,
        "wires": [
            [
                "6d785c5f02c33b2c",
                "de5255f6806c18aa",
                "78e340a4a2ee6808"
            ]
        ]
    },
    {
        "id": "923166607ea395b4",
        "type": "change",
        "z": "d004b552dbe23508",
        "name": "",
        "rules": [
            {
                "t": "delete",
                "p": "topic",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1490,
        "y": 240,
        "wires": [
            [
                "1475c2f0867ed8a1",
                "d44ef25c9a7cf885",
                "ae6d95c8f7018458"
            ]
        ]
    },
    {
        "id": "20794cce32361d3d",
        "type": "change",
        "z": "d004b552dbe23508",
        "name": "",
        "rules": [
            {
                "t": "delete",
                "p": "topic",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1490,
        "y": 360,
        "wires": [
            [
                "98afe049bcc2bee9",
                "be8490363139ef87"
            ]
        ]
    },
    {
        "id": "f1de5e355273412b",
        "type": "change",
        "z": "d004b552dbe23508",
        "name": "",
        "rules": [
            {
                "t": "delete",
                "p": "topic",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1490,
        "y": 440,
        "wires": [
            [
                "ca1f81d9ec483b99",
                "6c8207115e50ad37"
            ]
        ]
    },
    {
        "id": "6ece92445ac8884d",
        "type": "change",
        "z": "d004b552dbe23508",
        "name": "",
        "rules": [
            {
                "t": "delete",
                "p": "topic",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1490,
        "y": 520,
        "wires": [
            [
                "b824ceca21b549a3",
                "5c7545cd652b6584"
            ]
        ]
    },
    {
        "id": "87b5c05982ec2b2c",
        "type": "change",
        "z": "d004b552dbe23508",
        "name": "",
        "rules": [
            {
                "t": "delete",
                "p": "topic",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1490,
        "y": 600,
        "wires": [
            [
                "e883b7b6a05af22b",
                "b0e67cec5e75a405"
            ]
        ]
    },
    {
        "id": "126530358cf10732",
        "type": "comment",
        "z": "d004b552dbe23508",
        "name": "! zur Beachtung Akkumontage !",
        "info": "Wenn Akkus montiert sind dan im Cron Node folgendes eintragen\nTopic: TotalVerbrauchAkkuKostal\nTimer: 25 */12 * * * *",
        "x": 250,
        "y": 420,
        "wires": []
    },
    {
        "id": "a69fb33f2774bf17",
        "type": "ui_widget_thermometer",
        "z": "d004b552dbe23508",
        "group": "e5ec260ae3e0440b",
        "order": 20,
        "width": 3,
        "height": 3,
        "name": "",
        "title": "",
        "numColor": 3,
        "colorTop": "#f44336",
        "colorMiddle": "#8bc34a",
        "colorBottom": "#f5c211",
        "unit": "°C",
        "scale": "small",
        "minTemp": "5",
        "maxTemp": "80",
        "minTempMoreThanMaxTemp": "1",
        "numberOfDecimals": "0",
        "showPercentage": "0",
        "currentTempFontSize": "1.2",
        "x": 850,
        "y": 60,
        "wires": []
    },
    {
        "id": "35eefdcc2705f025",
        "type": "inject",
        "z": "0a251b7980b18761",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": true,
        "onceDelay": "10",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 340,
        "wires": [
            [
                "dff575d902cc9c88"
            ]
        ]
    },
    {
        "id": "5bead0366465cebe",
        "type": "Memory",
        "z": "0a251b7980b18761",
        "name": "Speicherauslastung",
        "scale": "Megabyte",
        "x": 530,
        "y": 240,
        "wires": [
            [
                "ee8491758bed75cb",
                "1da1ce672719eb8f",
                "f7170f0a397fc6f0"
            ]
        ]
    },
    {
        "id": "1c7eee958b4d4101",
        "type": "ui_gauge",
        "z": "0a251b7980b18761",
        "name": "",
        "group": "889ad5b1fbfa7f43",
        "order": 5,
        "width": 3,
        "height": 2,
        "gtype": "donut",
        "title": "Speicherauslastung",
        "label": "Prozent",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "50",
        "seg2": "80",
        "diff": false,
        "className": "",
        "x": 970,
        "y": 200,
        "wires": []
    },
    {
        "id": "ee8491758bed75cb",
        "type": "change",
        "z": "0a251b7980b18761",
        "name": "Auslastung",
        "rules": [
            {
                "t": "move",
                "p": "payload.memusage",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 750,
        "y": 200,
        "wires": [
            [
                "1c7eee958b4d4101"
            ]
        ]
    },
    {
        "id": "1da1ce672719eb8f",
        "type": "change",
        "z": "0a251b7980b18761",
        "name": "Gesamtspeicher",
        "rules": [
            {
                "t": "move",
                "p": "payload.totalmem",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 760,
        "y": 240,
        "wires": [
            [
                "f25adae069a7572c"
            ]
        ]
    },
    {
        "id": "f7170f0a397fc6f0",
        "type": "change",
        "z": "0a251b7980b18761",
        "name": "Freier Speicher",
        "rules": [
            {
                "t": "move",
                "p": "payload.freemem",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 760,
        "y": 280,
        "wires": [
            [
                "b43229f52d40d20d"
            ]
        ]
    },
    {
        "id": "f25adae069a7572c",
        "type": "ui_text",
        "z": "0a251b7980b18761",
        "group": "6cd0b3f6b2b35990",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Gesamtspeicher Megabyte",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1000,
        "y": 240,
        "wires": []
    },
    {
        "id": "b43229f52d40d20d",
        "type": "ui_text",
        "z": "0a251b7980b18761",
        "group": "6cd0b3f6b2b35990",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Freier Speicher Megabyte",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 990,
        "y": 280,
        "wires": []
    },
    {
        "id": "8b024ab8496ff981",
        "type": "cpu",
        "z": "0a251b7980b18761",
        "name": "",
        "msgCore": true,
        "msgOverall": false,
        "msgArray": false,
        "msgTemp": true,
        "x": 510,
        "y": 420,
        "wires": [
            [
                "2181ab81b4ee08f1"
            ]
        ]
    },
    {
        "id": "7ab2c87d9f02402d",
        "type": "Uptime",
        "z": "0a251b7980b18761",
        "name": "",
        "x": 500,
        "y": 340,
        "wires": [
            [
                "50f9790b.49c718"
            ]
        ]
    },
    {
        "id": "2181ab81b4ee08f1",
        "type": "ui_chart",
        "z": "0a251b7980b18761",
        "name": "",
        "group": "889ad5b1fbfa7f43",
        "order": 2,
        "width": 8,
        "height": 4,
        "label": "CPU Last",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "100",
        "removeOlder": "1",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 940,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "ddad602a0eeb196d",
        "type": "ui_switch",
        "z": "0a251b7980b18761",
        "name": "",
        "label": "Monitoring ja/nein",
        "tooltip": "",
        "group": "6cd0b3f6b2b35990",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 150,
        "y": 100,
        "wires": [
            [
                "11e1f79249908ebb"
            ]
        ]
    },
    {
        "id": "dff575d902cc9c88",
        "type": "switch",
        "z": "0a251b7980b18761",
        "name": "",
        "property": "g_CPUaktiv",
        "propertyType": "global",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 290,
        "y": 340,
        "wires": [
            [
                "5bead0366465cebe",
                "8b024ab8496ff981",
                "7ab2c87d9f02402d",
                "f2b0e64aafb29d11"
            ]
        ]
    },
    {
        "id": "11e1f79249908ebb",
        "type": "change",
        "z": "0a251b7980b18761",
        "name": "Setze Monitoring",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "g_CPUaktiv",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "50f9790b.49c718",
        "type": "function",
        "z": "0a251b7980b18761",
        "name": "Seconds to DD:HH:MM:SS",
        "func": " var totalNumberOfSeconds = msg.payload.uptime;\n var days = parseInt( totalNumberOfSeconds / 86400 );\n var hours = parseInt (( totalNumberOfSeconds - ( days * 86400 )) / 3600  );\n var minutes = parseInt ((totalNumberOfSeconds - ((hours * 3600)+( days * 86400 ))) / 60 );\n var seconds = parseInt(totalNumberOfSeconds - ((hours * 3600) + (minutes * 60)+( days * 86400 )));\n var result = (days < 10 ? \"0\" + days : days) + \":\" + (hours < 10 ? \"0\" + hours : hours) + \":\" + (minutes < 10 ? \"0\" + minutes : minutes) + \":\" + (seconds  < 10 ? \"0\" + seconds : seconds);\n msg.payload=result;\n return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 340,
        "wires": [
            [
                "4f6abcf.71f1a44"
            ]
        ]
    },
    {
        "id": "4f6abcf.71f1a44",
        "type": "ui_text",
        "z": "0a251b7980b18761",
        "group": "889ad5b1fbfa7f43",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "UpTime",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 940,
        "y": 340,
        "wires": []
    },
    {
        "id": "93e4a2dbcd798111",
        "type": "ui_chart",
        "z": "0a251b7980b18761",
        "name": "",
        "group": "889ad5b1fbfa7f43",
        "order": 3,
        "width": 8,
        "height": 4,
        "label": "Load",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "1",
        "removeOlder": "1",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 930,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "f2b0e64aafb29d11",
        "type": "Loadavg",
        "z": "0a251b7980b18761",
        "name": "",
        "x": 500,
        "y": 380,
        "wires": [
            [
                "4e1c74dd1412b5f5"
            ]
        ]
    },
    {
        "id": "4e1c74dd1412b5f5",
        "type": "change",
        "z": "0a251b7980b18761",
        "name": "setze Load",
        "rules": [
            {
                "t": "move",
                "p": "payload.loadavg.0",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 670,
        "y": 380,
        "wires": [
            [
                "93e4a2dbcd798111"
            ]
        ]
    },
    {
        "id": "c47d17c386a5b8ff",
        "type": "influxdb in",
        "z": "0535f8b4bf0b7245",
        "influxdb": "0e08b360d673d9d4",
        "name": "auslesen: LangzeitDB",
        "query": "",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "organisation",
        "x": 560,
        "y": 280,
        "wires": [
            [
                "62186468b0f9d792"
            ]
        ]
    },
    {
        "id": "3a091a89e3a65188",
        "type": "function",
        "z": "0535f8b4bf0b7245",
        "name": "Query erstellen",
        "func": "const today = new Date();\n\nlet Jahr = '2024'\nlet Monat = '01'\nlet MonatEnd = '09'\nlet TagStart = '01'\nlet TagEnd = '30'\n//let sL_Measurement ='VerbrauchTotalLangzeit_kWh'\nlet sL_Measurement ='sumNetzeinspeisung_kWh'\n// sumBKWpanelleistung_kWh\n// sumKostalPanelleistung_kWh\n// sumNetzbezug_kWh noch zu\n\n\nlet Datum = `'` + Jahr + '-' + Monat + '-' + TagStart + 'T00:00:00Z' + `'`;\nlet Datum2 = `'` + Jahr + '-' + MonatEnd + '-' + TagEnd + 'T23:59:59Z' + `'`;\nlet query = `SELECT * FROM \"` + sL_Measurement + `\\\" where time >= ` + Datum + ' and time <= ' + Datum2;\nmsg.query = query;\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 280,
        "wires": [
            [
                "c47d17c386a5b8ff"
            ]
        ]
    },
    {
        "id": "24c0bf4b6841ecad",
        "type": "function",
        "z": "0535f8b4bf0b7245",
        "name": "Array zerlegen und summieren",
        "func": "const topic = msg.topic;\n\nlet nL_Summe = 0;\n//let nL_Temp = 0;\nlet i = 0;\n\nvar dataarray = [];\n \nfor (i=0; i < msg.payload.length; i++) {\n\n\n  //nL_Temp = nL_Temp + msg.payload[i].value;\n  var nL_Temp  = new Date((msg.payload[i].time));\n  const unixTimestamp = (nL_Temp.getTime());\n  //const unixTimestamp = Math.floor((msg.payload[i].time). getTime() / 1000);\n  dataarray[i] = { \"Zeit\": msg.payload[i].time, \"value\": msg.payload[i].value };\n}\n\nmsg = { payload: dataarray};\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "62186468b0f9d792",
        "type": "change",
        "z": "0535f8b4bf0b7245",
        "name": "",
        "rules": [
            {
                "t": "delete",
                "p": "query",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 770,
        "y": 280,
        "wires": [
            [
                "dcde1b3430d21a74"
            ]
        ]
    },
    {
        "id": "390a033408c71d3a",
        "type": "function",
        "z": "0535f8b4bf0b7245",
        "name": "Array zerlegen und summieren",
        "func": "const topic = msg.topic;\n\nlet nL_Summe = 0;\n//let nL_Temp = 0;\nlet i = 0;\n\nvar dataarray = [[]];\n \nfor (i=0; i < msg.payload.length; i++) {\n  //nL_Temp = nL_Temp + msg.payload[i].value;\n  var nL_Temp  = new Date((msg.payload[i].time));\n  const unixTimestamp = (nL_Temp.getTime());\n  //const unixTimestamp = Math.floor((msg.payload[i].time). getTime() / 1000);\n  dataarray[0][i] = { \"x\": unixTimestamp, \"y\": msg.payload[i].value };\n}\n\nvar chart = [{\n    \"series\":[\"Temperature =\"],\n    \"data\":dataarray,\n    \"labels\":[\"Test\"]\n}];\n\nmsg = { payload: chart};\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "dcde1b3430d21a74",
        "type": "split",
        "z": "0535f8b4bf0b7245",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "property": "payload",
        "x": 1230,
        "y": 280,
        "wires": [
            [
                "3f39792016d12f03"
            ]
        ]
    },
    {
        "id": "a16ca393291ada02",
        "type": "ui_ui-button",
        "z": "0535f8b4bf0b7245",
        "action": "click",
        "actionType": "str",
        "name": "",
        "group": "4dbbaa74d3caf496",
        "order": 16,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "Start Chart",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "x": 90,
        "y": 280,
        "wires": [
            [
                "fe19d3fdecb8d715",
                "3a091a89e3a65188"
            ]
        ]
    },
    {
        "id": "8b49b5e84824dce1",
        "type": "function",
        "z": "0535f8b4bf0b7245",
        "name": "Query erstellen",
        "func": "const today = new Date();\n\nlet Jahr = '2024'\nlet Monat = '01'\nlet MonatEnd = '09'\nlet TagStart = '01'\nlet TagEnd = '30'\n//let sL_Measurement ='sumNetzeinspeisung_kWh'\n// sumBKWpanelleistung_kWh\n// sumKostalPanelleistung_kWh\nlet sL_Measurement = 'sumNetzbezug_kWh';\n\n\nlet Datum = `'` + Jahr + '-' + Monat + '-' + TagStart + 'T00:00:00Z' + `'`;\nlet Datum2 = `'` + Jahr + '-' + MonatEnd + '-' + TagEnd + 'T23:59:59Z' + `'`;\nlet query = `SELECT * FROM \"` + sL_Measurement + `\\\" where time >= ` + Datum + ' and time <= ' + Datum2;\nmsg.query = query;\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 320,
        "wires": [
            [
                "148b8cefdfb5bee5"
            ]
        ]
    },
    {
        "id": "fe19d3fdecb8d715",
        "type": "delay",
        "z": "0535f8b4bf0b7245",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 160,
        "y": 340,
        "wires": [
            [
                "8b49b5e84824dce1"
            ]
        ]
    },
    {
        "id": "148b8cefdfb5bee5",
        "type": "influxdb in",
        "z": "0535f8b4bf0b7245",
        "influxdb": "0e08b360d673d9d4",
        "name": "auslesen: LangzeitDB",
        "query": "",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "organisation",
        "x": 560,
        "y": 320,
        "wires": [
            [
                "9d369d6672df95d3"
            ]
        ]
    },
    {
        "id": "9d369d6672df95d3",
        "type": "change",
        "z": "0535f8b4bf0b7245",
        "name": "",
        "rules": [
            {
                "t": "delete",
                "p": "query",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 770,
        "y": 320,
        "wires": [
            [
                "38240d36e80f93f5"
            ]
        ]
    },
    {
        "id": "38240d36e80f93f5",
        "type": "split",
        "z": "0535f8b4bf0b7245",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "property": "payload",
        "x": 1230,
        "y": 320,
        "wires": [
            [
                "0822af4dd4a318f1"
            ]
        ]
    },
    {
        "id": "3f39792016d12f03",
        "type": "change",
        "z": "0535f8b4bf0b7245",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "payload.time",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.value",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1410,
        "y": 280,
        "wires": [
            [
                "ceb42633619f3bcd"
            ]
        ]
    },
    {
        "id": "0822af4dd4a318f1",
        "type": "change",
        "z": "0535f8b4bf0b7245",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic2",
                "pt": "msg",
                "to": "payload.time",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload2",
                "pt": "msg",
                "to": "payload.value",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1410,
        "y": 320,
        "wires": [
            [
                "ceb42633619f3bcd"
            ]
        ]
    },
    {
        "id": "76eff5102b46b378",
        "type": "ui_button",
        "z": "0535f8b4bf0b7245",
        "name": "",
        "group": "4dbbaa74d3caf496",
        "order": 17,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "Löschen",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "[]",
        "payloadType": "json",
        "topic": "topic",
        "topicType": "msg",
        "x": 1460,
        "y": 380,
        "wires": [
            [
                "ceb42633619f3bcd"
            ]
        ]
    },
    {
        "id": "ceb42633619f3bcd",
        "type": "ui_chart",
        "z": "0535f8b4bf0b7245",
        "name": "",
        "group": "4dbbaa74d3caf496",
        "order": 29,
        "width": 4,
        "height": 4,
        "label": "chart",
        "chartType": "bar",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "800",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": true,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1610,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "5b571359fbc6660e",
        "type": "inject",
        "z": "0535f8b4bf0b7245",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "25",
        "payloadType": "num",
        "x": 150,
        "y": 120,
        "wires": [
            [
                "6bdaa5e90a0433f2",
                "54edd1cca2ac9556"
            ]
        ]
    },
    {
        "id": "6bdaa5e90a0433f2",
        "type": "ui_template",
        "z": "0535f8b4bf0b7245",
        "group": "4dbbaa74d3caf496",
        "name": "",
        "order": 14,
        "width": 4,
        "height": 1,
        "format": "<style>\n    .icon {\n  font-size: 50px;\n}\n    .nr-dashboard-ui_digital_display.visible svg path {\n        --nr-dashboard-pageTitlebarBackgroundColor: black;\n    }\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 340,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "54edd1cca2ac9556",
        "type": "ui_artlessgauge",
        "z": "0535f8b4bf0b7245",
        "group": "4dbbaa74d3caf496",
        "order": 22,
        "width": 4,
        "height": 4,
        "name": "",
        "icon": "",
        "label": "Gauge",
        "unit": "",
        "layout": "radial",
        "decimals": 0,
        "differential": false,
        "minmax": false,
        "colorTrack": "#555555",
        "style": "",
        "colorFromTheme": true,
        "property": "payload",
        "secondary": "secondary",
        "inline": false,
        "animate": true,
        "sectors": [
            {
                "val": 0,
                "col": "#ff9900",
                "t": "min",
                "dot": 0
            },
            {
                "val": 30,
                "col": "#ff9900",
                "t": "max",
                "dot": 0
            }
        ],
        "lineWidth": "5",
        "bgcolorFromTheme": true,
        "diffCenter": "",
        "x": 540,
        "y": 40,
        "wires": []
    },
    {
        "id": "818bfde84daba008",
        "type": "ui_lineargauge",
        "z": "0535f8b4bf0b7245",
        "group": "4dbbaa74d3caf496",
        "order": 13,
        "width": 1,
        "height": 6,
        "name": "",
        "colorLowArea": "#ffffc0",
        "colorMidArea": "#99ff99",
        "colorHighArea": "#ff8080",
        "unit": "Volt",
        "x": 990,
        "y": 60,
        "wires": []
    },
    {
        "id": "e91ff3c21792fae7",
        "type": "inject",
        "z": "0535f8b4bf0b7245",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "highlimit",
                "v": "240",
                "vt": "num"
            },
            {
                "p": "lowlimit",
                "v": "210",
                "vt": "num"
            },
            {
                "p": "setpoint",
                "v": "220",
                "vt": "num"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "231",
        "payloadType": "num",
        "x": 830,
        "y": 60,
        "wires": [
            [
                "818bfde84daba008"
            ]
        ]
    },
    {
        "id": "1d48a86f9f56ef6d",
        "type": "ui_ui-light",
        "z": "0535f8b4bf0b7245",
        "action": "payload",
        "actionType": "msg",
        "write": "orange",
        "writeType": "str",
        "name": "",
        "group": "4dbbaa74d3caf496",
        "order": 20,
        "width": 4,
        "height": 1,
        "x": 930,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "06d5e4c12ab69738",
        "type": "inject",
        "z": "0535f8b4bf0b7245",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "blue",
        "payloadType": "str",
        "x": 570,
        "y": 100,
        "wires": [
            [
                "3dfc2910fcccb0ae"
            ]
        ]
    },
    {
        "id": "24f6b5827d571e81",
        "type": "ui_ui-button",
        "z": "0535f8b4bf0b7245",
        "action": "Show",
        "actionType": "str",
        "name": "",
        "group": "4dbbaa74d3caf496",
        "order": 18,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "Start",
        "tooltip": "Starten den Flow",
        "color": "white",
        "bgcolor": "rgba(0, 0, 0, 0.5)",
        "icon": " fa-bullhorn ",
        "x": 550,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "3dfc2910fcccb0ae",
        "type": "hidden-ui-action",
        "z": "0535f8b4bf0b7245",
        "action": "Show",
        "actionType": "str",
        "write": "payload",
        "writeType": "msg",
        "group": "4dbbaa74d3caf496",
        "order": 13,
        "target": "1d48a86f9f56ef6d",
        "passthru": true,
        "name": "",
        "x": 740,
        "y": 160,
        "wires": [
            [
                "1d48a86f9f56ef6d"
            ]
        ]
    },
    {
        "id": "0ec52b01f1defd63",
        "type": "hidden-ui-load",
        "z": "0535f8b4bf0b7245",
        "group": "4dbbaa74d3caf496",
        "order": 0,
        "name": "Load",
        "x": 570,
        "y": 160,
        "wires": [
            [
                "3dfc2910fcccb0ae"
            ]
        ]
    },
    {
        "id": "bdcbfbebf39dd000",
        "type": "link in",
        "z": "7a652c4767b1ddf3",
        "name": "Temperatur1 OUT",
        "links": [
            "29dbd3cf34c8e272"
        ],
        "x": 105,
        "y": 60,
        "wires": [
            [
                "5527079a20eaf79f"
            ]
        ]
    },
    {
        "id": "5527079a20eaf79f",
        "type": "ui_widget_thermometer",
        "z": "7a652c4767b1ddf3",
        "group": "247b0f7bb5a5ccdd",
        "order": 1,
        "width": 3,
        "height": 5,
        "name": "Temperatur LiPo1",
        "title": "Temperatur",
        "numColor": 3,
        "colorTop": "#f44336",
        "colorMiddle": "#8bc34a",
        "colorBottom": "#1a5fb4",
        "unit": "°C",
        "scale": "normal",
        "minTemp": "-5",
        "maxTemp": "80",
        "minTempMoreThanMaxTemp": "1",
        "numberOfDecimals": "0",
        "showPercentage": "0",
        "currentTempFontSize": "1.2",
        "x": 250,
        "y": 60,
        "wires": []
    },
    {
        "id": "2e038d1014e37f42",
        "type": "ui_widget_thermometer",
        "z": "7a652c4767b1ddf3",
        "group": "fe53591440c92622",
        "order": 1,
        "width": 3,
        "height": 5,
        "name": "Temperatur LiPo2",
        "title": "Temperatur",
        "numColor": 3,
        "colorTop": "#f44336",
        "colorMiddle": "#8bc34a",
        "colorBottom": "#1a5fb4",
        "unit": "°C",
        "scale": "normal",
        "minTemp": "-5",
        "maxTemp": "80",
        "minTempMoreThanMaxTemp": "1",
        "numberOfDecimals": "0",
        "showPercentage": "0",
        "currentTempFontSize": "1.2",
        "x": 250,
        "y": 100,
        "wires": []
    },
    {
        "id": "5adf72407a991162",
        "type": "ui_widget_thermometer",
        "z": "7a652c4767b1ddf3",
        "group": "b3ea2336462acd10",
        "order": 1,
        "width": 3,
        "height": 5,
        "name": "Temperatur LiPo3",
        "title": "Temperatur",
        "numColor": 3,
        "colorTop": "#f44336",
        "colorMiddle": "#8bc34a",
        "colorBottom": "#1a5fb4",
        "unit": "°C",
        "scale": "normal",
        "minTemp": "-5",
        "maxTemp": "80",
        "minTempMoreThanMaxTemp": "1",
        "numberOfDecimals": "0",
        "showPercentage": "0",
        "currentTempFontSize": "1.2",
        "x": 250,
        "y": 140,
        "wires": []
    },
    {
        "id": "7975dc712a73d4fa",
        "type": "link in",
        "z": "7a652c4767b1ddf3",
        "name": "SoC OUT",
        "links": [
            "82b319f0293bf31c"
        ],
        "x": 105,
        "y": 220,
        "wires": [
            [
                "58f0d04b8cb2e1c9"
            ]
        ]
    },
    {
        "id": "57fdaeb2a5239fd3",
        "type": "ui_lineargauge",
        "z": "7a652c4767b1ddf3",
        "group": "247b0f7bb5a5ccdd",
        "order": 3,
        "width": 2,
        "height": 5,
        "name": "SoC",
        "colorLowArea": "#a51d2d",
        "colorMidArea": "#99ff99",
        "colorHighArea": "#009933",
        "unit": "%",
        "x": 430,
        "y": 220,
        "wires": []
    },
    {
        "id": "d9f5bf4ca94f6cee",
        "type": "ui_lineargauge",
        "z": "7a652c4767b1ddf3",
        "group": "fe53591440c92622",
        "order": 3,
        "width": 2,
        "height": 5,
        "name": "SoC",
        "colorLowArea": "#a51d2d",
        "colorMidArea": "#99ff99",
        "colorHighArea": "#009933",
        "unit": "%",
        "x": 430,
        "y": 260,
        "wires": []
    },
    {
        "id": "1fe32e0ef3b505c4",
        "type": "ui_lineargauge",
        "z": "7a652c4767b1ddf3",
        "group": "b3ea2336462acd10",
        "order": 3,
        "width": 2,
        "height": 5,
        "name": "SoC",
        "colorLowArea": "#a51d2d",
        "colorMidArea": "#99ff99",
        "colorHighArea": "#009933",
        "unit": "%",
        "x": 430,
        "y": 300,
        "wires": []
    },
    {
        "id": "0e037ea63d303388",
        "type": "link in",
        "z": "7a652c4767b1ddf3",
        "name": "Leistungsabgabe1 OUT",
        "links": [
            "6c1c10357374d67c"
        ],
        "x": 105,
        "y": 360,
        "wires": [
            [
                "9bb20d1d5f620e85"
            ]
        ]
    },
    {
        "id": "0ba4a3d5e8dfb994",
        "type": "ui_lineargauge",
        "z": "7a652c4767b1ddf3",
        "group": "247b0f7bb5a5ccdd",
        "order": 4,
        "width": 2,
        "height": 5,
        "name": "Abgabe",
        "colorLowArea": "#e5a50a",
        "colorMidArea": "#e5a50a",
        "colorHighArea": "#e5a50a",
        "unit": " Watt",
        "x": 440,
        "y": 360,
        "wires": []
    },
    {
        "id": "bab5f8fe30aeae33",
        "type": "link in",
        "z": "7a652c4767b1ddf3",
        "name": "Temperatur2 OUT",
        "links": [
            "e3103fd62e923af8"
        ],
        "x": 105,
        "y": 100,
        "wires": [
            [
                "2e038d1014e37f42"
            ]
        ]
    },
    {
        "id": "a0f0c6b04ca9567c",
        "type": "link in",
        "z": "7a652c4767b1ddf3",
        "name": "Temperatur3 OUT",
        "links": [
            "3967c8ebab8e2cd5"
        ],
        "x": 105,
        "y": 140,
        "wires": [
            [
                "5adf72407a991162"
            ]
        ]
    },
    {
        "id": "8b757a8d523f2081",
        "type": "link in",
        "z": "7a652c4767b1ddf3",
        "name": "SoC2 OUT",
        "links": [
            "26ba39e723340b55"
        ],
        "x": 105,
        "y": 260,
        "wires": [
            [
                "ace439e237213861"
            ]
        ]
    },
    {
        "id": "beba94de388bce5f",
        "type": "link in",
        "z": "7a652c4767b1ddf3",
        "name": "SoC3 OUT",
        "links": [
            "7e9a3d1554a79779"
        ],
        "x": 105,
        "y": 300,
        "wires": [
            [
                "f613b5fc642f04fc"
            ]
        ]
    },
    {
        "id": "c20d7f3bb8fdc63d",
        "type": "link in",
        "z": "7a652c4767b1ddf3",
        "name": "Leistungsabgabe2 OUT",
        "links": [
            "247dff8dfe5880e0"
        ],
        "x": 105,
        "y": 400,
        "wires": [
            [
                "eb729d4891bf3f08"
            ]
        ]
    },
    {
        "id": "c079fabf1f686b2b",
        "type": "ui_lineargauge",
        "z": "7a652c4767b1ddf3",
        "group": "fe53591440c92622",
        "order": 4,
        "width": 2,
        "height": 5,
        "name": "Abgabe",
        "colorLowArea": "#e5a50a",
        "colorMidArea": "#e5a50a",
        "colorHighArea": "#e5a50a",
        "unit": " Watt",
        "x": 440,
        "y": 400,
        "wires": []
    },
    {
        "id": "78d71f7e31781452",
        "type": "link in",
        "z": "7a652c4767b1ddf3",
        "name": "Leistungsabgabe3 OUT",
        "links": [
            "ed5ad2af480fd673"
        ],
        "x": 105,
        "y": 440,
        "wires": [
            [
                "66a37aa1fc8407b1"
            ]
        ]
    },
    {
        "id": "c244a6b9c45c7d1b",
        "type": "ui_lineargauge",
        "z": "7a652c4767b1ddf3",
        "group": "b3ea2336462acd10",
        "order": 4,
        "width": 2,
        "height": 5,
        "name": "Abgabe",
        "colorLowArea": "#e5a50a",
        "colorMidArea": "#e5a50a",
        "colorHighArea": "#e5a50a",
        "unit": " Watt",
        "x": 440,
        "y": 440,
        "wires": []
    },
    {
        "id": "58f0d04b8cb2e1c9",
        "type": "change",
        "z": "7a652c4767b1ddf3",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "highlimit",
                "pt": "msg",
                "to": "100",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "lowlimit",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 250,
        "y": 220,
        "wires": [
            [
                "57fdaeb2a5239fd3"
            ]
        ]
    },
    {
        "id": "ace439e237213861",
        "type": "change",
        "z": "7a652c4767b1ddf3",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "highlimit",
                "pt": "msg",
                "to": "100",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "lowlimit",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 250,
        "y": 260,
        "wires": [
            [
                "d9f5bf4ca94f6cee"
            ]
        ]
    },
    {
        "id": "f613b5fc642f04fc",
        "type": "change",
        "z": "7a652c4767b1ddf3",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "highlimit",
                "pt": "msg",
                "to": "100",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "lowlimit",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 250,
        "y": 300,
        "wires": [
            [
                "1fe32e0ef3b505c4"
            ]
        ]
    },
    {
        "id": "9bb20d1d5f620e85",
        "type": "change",
        "z": "7a652c4767b1ddf3",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "highlimit",
                "pt": "msg",
                "to": "800",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "lowlimit",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 250,
        "y": 360,
        "wires": [
            [
                "0ba4a3d5e8dfb994"
            ]
        ]
    },
    {
        "id": "eb729d4891bf3f08",
        "type": "change",
        "z": "7a652c4767b1ddf3",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "highlimit",
                "pt": "msg",
                "to": "800",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "lowlimit",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 250,
        "y": 400,
        "wires": [
            [
                "c079fabf1f686b2b"
            ]
        ]
    },
    {
        "id": "66a37aa1fc8407b1",
        "type": "change",
        "z": "7a652c4767b1ddf3",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "highlimit",
                "pt": "msg",
                "to": "800",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "lowlimit",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 250,
        "y": 440,
        "wires": [
            [
                "c244a6b9c45c7d1b"
            ]
        ]
    },
    {
        "id": "f7383c0bcbf1e3a6",
        "type": "link in",
        "z": "7a652c4767b1ddf3",
        "name": "TotalVolt1 OUT",
        "links": [
            "d9c4b84eae5faba5"
        ],
        "x": 625,
        "y": 60,
        "wires": [
            [
                "362422814562b914"
            ]
        ]
    },
    {
        "id": "7d4d1117a9b85539",
        "type": "link in",
        "z": "7a652c4767b1ddf3",
        "name": "TotalVolt2 OUT",
        "links": [
            "92c799cab8cc34e1"
        ],
        "x": 625,
        "y": 100,
        "wires": [
            [
                "cdf876452932ed9e"
            ]
        ]
    },
    {
        "id": "be673d50e32e0b2d",
        "type": "link in",
        "z": "7a652c4767b1ddf3",
        "name": "TotalVolt1 OUT",
        "links": [
            "85aefccae055d94a"
        ],
        "x": 625,
        "y": 140,
        "wires": [
            [
                "1427336164bb6120"
            ]
        ]
    },
    {
        "id": "fb92833cd7616b32",
        "type": "ui_digital_display",
        "z": "7a652c4767b1ddf3",
        "name": "TotalSpannung",
        "group": "247b0f7bb5a5ccdd",
        "order": 13,
        "width": 4,
        "height": 1,
        "digits": 5,
        "decimals": "2",
        "x": 920,
        "y": 60,
        "wires": []
    },
    {
        "id": "362422814562b914",
        "type": "ui_template",
        "z": "7a652c4767b1ddf3",
        "group": "247b0f7bb5a5ccdd",
        "name": "",
        "order": 10,
        "width": 4,
        "height": 1,
        "format": "<style>\n    .icon {\n  font-size: 50px;\n}\n    .nr-dashboard-ui_digital_display.visible svg path {\n        --nr-dashboard-pageTitlebarBackgroundColor: black;\n    }\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 740,
        "y": 60,
        "wires": [
            [
                "fb92833cd7616b32"
            ]
        ]
    },
    {
        "id": "c3e131ed3a4a0c1a",
        "type": "ui_text",
        "z": "7a652c4767b1ddf3",
        "group": "247b0f7bb5a5ccdd",
        "order": 12,
        "width": 4,
        "height": 1,
        "name": "",
        "label": "PowerPack Spannung",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1140,
        "y": 60,
        "wires": []
    },
    {
        "id": "cdf876452932ed9e",
        "type": "ui_digital_display",
        "z": "7a652c4767b1ddf3",
        "name": "TotalSpannung",
        "group": "fe53591440c92622",
        "order": 11,
        "width": 4,
        "height": 1,
        "digits": 5,
        "decimals": "2",
        "x": 760,
        "y": 100,
        "wires": []
    },
    {
        "id": "1427336164bb6120",
        "type": "ui_digital_display",
        "z": "7a652c4767b1ddf3",
        "name": "TotalSpannung",
        "group": "b3ea2336462acd10",
        "order": 11,
        "width": 4,
        "height": 1,
        "digits": 5,
        "decimals": "2",
        "x": 760,
        "y": 140,
        "wires": []
    },
    {
        "id": "26b1e9183195c35a",
        "type": "ui_text",
        "z": "7a652c4767b1ddf3",
        "group": "fe53591440c92622",
        "order": 10,
        "width": 4,
        "height": 1,
        "name": "",
        "label": "PowerPack Spannung",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 960,
        "y": 100,
        "wires": []
    },
    {
        "id": "6ed82bd78a28930e",
        "type": "ui_text",
        "z": "7a652c4767b1ddf3",
        "group": "b3ea2336462acd10",
        "order": 10,
        "width": 4,
        "height": 1,
        "name": "",
        "label": "PowerPack Spannung",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 960,
        "y": 140,
        "wires": []
    },
    {
        "id": "3374ddcaf2f8349b",
        "type": "link in",
        "z": "7a652c4767b1ddf3",
        "name": "MaxZellspannung1 OUT",
        "links": [
            "c95e305b6690a2b7"
        ],
        "x": 625,
        "y": 220,
        "wires": [
            [
                "ddffc16556aaca70"
            ]
        ]
    },
    {
        "id": "ddffc16556aaca70",
        "type": "ui_digital_display",
        "z": "7a652c4767b1ddf3",
        "name": "MaxZellSpannung",
        "group": "247b0f7bb5a5ccdd",
        "order": 15,
        "width": 4,
        "height": 1,
        "digits": 5,
        "decimals": "2",
        "x": 770,
        "y": 220,
        "wires": []
    },
    {
        "id": "cf918e54bb8142b8",
        "type": "ui_text",
        "z": "7a652c4767b1ddf3",
        "group": "247b0f7bb5a5ccdd",
        "order": 14,
        "width": 4,
        "height": 1,
        "name": "",
        "label": "max Zellspannung",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 970,
        "y": 220,
        "wires": []
    },
    {
        "id": "b0e21c4387e6dceb",
        "type": "link in",
        "z": "7a652c4767b1ddf3",
        "name": "MaxZellspannung2 OUT",
        "links": [
            "de03e53ad1b2366a"
        ],
        "x": 625,
        "y": 260,
        "wires": [
            [
                "65fb0e76a8ef4aa4"
            ]
        ]
    },
    {
        "id": "65fb0e76a8ef4aa4",
        "type": "ui_digital_display",
        "z": "7a652c4767b1ddf3",
        "name": "MaxZellSpannung",
        "group": "fe53591440c92622",
        "order": 13,
        "width": 4,
        "height": 1,
        "digits": 5,
        "decimals": "2",
        "x": 770,
        "y": 260,
        "wires": []
    },
    {
        "id": "3e92af52c4aacbb2",
        "type": "ui_text",
        "z": "7a652c4767b1ddf3",
        "group": "fe53591440c92622",
        "order": 12,
        "width": 4,
        "height": 1,
        "name": "",
        "label": "max Zellspannung",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 970,
        "y": 260,
        "wires": []
    },
    {
        "id": "b92258d14cf975cf",
        "type": "link in",
        "z": "7a652c4767b1ddf3",
        "name": "MaxZellspannung3 OUT",
        "links": [
            "1b45b5c1af7b0ee4"
        ],
        "x": 625,
        "y": 300,
        "wires": [
            [
                "b7ddf8ac8fa13249"
            ]
        ]
    },
    {
        "id": "b7ddf8ac8fa13249",
        "type": "ui_digital_display",
        "z": "7a652c4767b1ddf3",
        "name": "MaxZellSpannung",
        "group": "b3ea2336462acd10",
        "order": 13,
        "width": 4,
        "height": 1,
        "digits": 5,
        "decimals": "2",
        "x": 770,
        "y": 300,
        "wires": []
    },
    {
        "id": "03accd88ab9af513",
        "type": "ui_text",
        "z": "7a652c4767b1ddf3",
        "group": "b3ea2336462acd10",
        "order": 12,
        "width": 4,
        "height": 1,
        "name": "",
        "label": "max Zellspannung",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 970,
        "y": 300,
        "wires": []
    },
    {
        "id": "3e684b6595da4e6b",
        "type": "link in",
        "z": "7a652c4767b1ddf3",
        "name": "MinZellspannung1 OUT",
        "links": [
            "f237f8aa86f4d990"
        ],
        "x": 625,
        "y": 360,
        "wires": [
            [
                "2d2fee090ae45462"
            ]
        ]
    },
    {
        "id": "2d2fee090ae45462",
        "type": "ui_digital_display",
        "z": "7a652c4767b1ddf3",
        "name": "MinZellSpannung",
        "group": "247b0f7bb5a5ccdd",
        "order": 17,
        "width": 4,
        "height": 1,
        "digits": 5,
        "decimals": "2",
        "x": 770,
        "y": 360,
        "wires": []
    },
    {
        "id": "8af7e68c4a46fa81",
        "type": "ui_text",
        "z": "7a652c4767b1ddf3",
        "group": "247b0f7bb5a5ccdd",
        "order": 16,
        "width": 4,
        "height": 1,
        "name": "",
        "label": "min Zellspannung",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 970,
        "y": 360,
        "wires": []
    },
    {
        "id": "f9a2a75033a4e954",
        "type": "link in",
        "z": "7a652c4767b1ddf3",
        "name": "MinZellspannung2 OUT",
        "links": [
            "d2bc9d1a24d4194a"
        ],
        "x": 625,
        "y": 400,
        "wires": [
            [
                "57f8dc26ece9a15a"
            ]
        ]
    },
    {
        "id": "57f8dc26ece9a15a",
        "type": "ui_digital_display",
        "z": "7a652c4767b1ddf3",
        "name": "MinZellSpannung",
        "group": "fe53591440c92622",
        "order": 15,
        "width": 4,
        "height": 1,
        "digits": 5,
        "decimals": "2",
        "x": 770,
        "y": 400,
        "wires": []
    },
    {
        "id": "c4dc889289f7c783",
        "type": "ui_text",
        "z": "7a652c4767b1ddf3",
        "group": "fe53591440c92622",
        "order": 14,
        "width": 4,
        "height": 1,
        "name": "",
        "label": "min Zellspannung",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 970,
        "y": 400,
        "wires": []
    },
    {
        "id": "04028000ea114d4a",
        "type": "link in",
        "z": "7a652c4767b1ddf3",
        "name": "MinZellspannung3 OUT",
        "links": [
            "98293003e42e17ef"
        ],
        "x": 625,
        "y": 440,
        "wires": [
            [
                "1b92850ba6decff0"
            ]
        ]
    },
    {
        "id": "1b92850ba6decff0",
        "type": "ui_digital_display",
        "z": "7a652c4767b1ddf3",
        "name": "MinZellSpannung",
        "group": "b3ea2336462acd10",
        "order": 15,
        "width": 4,
        "height": 1,
        "digits": 5,
        "decimals": "2",
        "x": 770,
        "y": 440,
        "wires": []
    },
    {
        "id": "817acee687f4f0e7",
        "type": "ui_text",
        "z": "7a652c4767b1ddf3",
        "group": "b3ea2336462acd10",
        "order": 14,
        "width": 4,
        "height": 1,
        "name": "",
        "label": "min Zellspannung",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 970,
        "y": 440,
        "wires": []
    }
]
